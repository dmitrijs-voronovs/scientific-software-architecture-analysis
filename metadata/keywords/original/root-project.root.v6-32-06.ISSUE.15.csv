id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/13529:1867,Availability,Down,Downloads,1867,"ow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/issues/13529:2101,Availability,error,error,2101,"t-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git libxpm libxft libx11. RUN curl -L https://root.cern/download/root_v6.28.04.source.tar.gz | tar xz. RUN cmake -S root-6.28.04 -B root_build -G Ninja \; && cmake --build root_build; ```. ### ROOT version. 6.28.04. ### Installation method. from source. ### Operating system. Arch Llinux, gcc 13.2.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/issues/13529:2293,Availability,Down,Downloads,2293,"t-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git libxpm libxft libx11. RUN curl -L https://root.cern/download/root_v6.28.04.source.tar.gz | tar xz. RUN cmake -S root-6.28.04 -B root_build -G Ninja \; && cmake --build root_build; ```. ### ROOT version. 6.28.04. ### Installation method. from source. ### Operating system. Arch Llinux, gcc 13.2.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/issues/13529:2643,Availability,error,error,2643,"t-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git libxpm libxft libx11. RUN curl -L https://root.cern/download/root_v6.28.04.source.tar.gz | tar xz. RUN cmake -S root-6.28.04 -B root_build -G Ninja \; && cmake --build root_build; ```. ### ROOT version. 6.28.04. ### Installation method. from source. ### Operating system. Arch Llinux, gcc 13.2.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/issues/13529:2915,Availability,down,download,2915,"t-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git libxpm libxft libx11. RUN curl -L https://root.cern/download/root_v6.28.04.source.tar.gz | tar xz. RUN cmake -S root-6.28.04 -B root_build -G Ninja \; && cmake --build root_build; ```. ### ROOT version. 6.28.04. ### Installation method. from source. ### Operating system. Arch Llinux, gcc 13.2.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/issues/13529:3079,Deployability,Install,Installation,3079,"t-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git libxpm libxft libx11. RUN curl -L https://root.cern/download/root_v6.28.04.source.tar.gz | tar xz. RUN cmake -S root-6.28.04 -B root_build -G Ninja \; && cmake --build root_build; ```. ### ROOT version. 6.28.04. ### Installation method. from source. ### Operating system. Arch Llinux, gcc 13.2.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13529
https://github.com/root-project/root/pull/13530:398,Usability,clear,clear,398,"As explained in 85c5cb4e3f, it was planned to make the RooFitDriver a public class to greatly improve the developer experience when working on the GPU backend of RooFit. Before, it was only possible to use the GPU backend in the likelihood evaluation, and with this commit it can be used from any context. This makes it possible to run the script listed in the description of PR #13389. To be more clear in what the new class does, which is purely focusing on the evaluation of computation graphs, it got renamed from RooFitDriver to `RooFit::Evaluator`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13530
https://github.com/root-project/root/issues/13531:2522,Deployability,Install,Installation,2522," on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT version. I tested both for ROOT root 6.20.06 and 6.24.08 ; I believe all ROOT versions are affected . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:757,Energy Efficiency,consumption,consumption,757,"Hello, . I would like to report that the `hadd` command is consuming a large amount of RAM when hadding input files that have several TDirectories. ; The memory is increasing linearly as the directories are processed by the hadd command. . I think (I did not tested it fully), by looking at the `TFileMerger` class it seems the `target` directory is not deleted after having called ; ```c++; target->SaveSelf(kTRUE);; ```; I guess the issue is coming from that . **This becomes a real issue as if you have a lot of histograms stored in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:785,Energy Efficiency,reduce,reduced,785,"Hello, . I would like to report that the `hadd` command is consuming a large amount of RAM when hadding input files that have several TDirectories. ; The memory is increasing linearly as the directories are processed by the hadd command. . I think (I did not tested it fully), by looking at the `TFileMerger` class it seems the `target` directory is not deleted after having called ; ```c++; target->SaveSelf(kTRUE);; ```; I guess the issue is coming from that . **This becomes a real issue as if you have a lot of histograms stored in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:1414,Energy Efficiency,consumption,consumption,1414,"``; I guess the issue is coming from that . **This becomes a real issue as if you have a lot of histograms stored in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT ver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:2132,Energy Efficiency,consumption,consumption,2132," on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT version. I tested both for ROOT root 6.20.06 and 6.24.08 ; I believe all ROOT versions are affected . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:2277,Energy Efficiency,consumption,consumption,2277," on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT version. I tested both for ROOT root 6.20.06 and 6.24.08 ; I believe all ROOT versions are affected . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:1157,Modifiability,config,config,1157,"s increasing linearly as the directories are processed by the hadd command. . I think (I did not tested it fully), by looking at the `TFileMerger` class it seems the `target` directory is not deleted after having called ; ```c++; target->SaveSelf(kTRUE);; ```; I guess the issue is coming from that . **This becomes a real issue as if you have a lot of histograms stored in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](http",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:1528,Modifiability,config,config,1528,"in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT version. I tested both for ROOT root 6.20.06 and 6.24.08 ; I believe all ROOT versions are affected . ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:259,Testability,test,tested,259,"Hello, . I would like to report that the `hadd` command is consuming a large amount of RAM when hadding input files that have several TDirectories. ; The memory is increasing linearly as the directories are processed by the hadd command. . I think (I did not tested it fully), by looking at the `TFileMerger` class it seems the `target` directory is not deleted after having called ; ```c++; target->SaveSelf(kTRUE);; ```; I guess the issue is coming from that . **This becomes a real issue as if you have a lot of histograms stored in different directories (which is the case of our analysis) then the hadding command is killed on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/issues/13531:2427,Testability,test,tested,2427," on lxplus. I have seen a hadd reaching 21 GB of memory used...**. **Here is a way to reproduce the issue and that shows the RAM consumption can be strongly reduced.**. I attach a `tar.gz` file which contains 2 scripts: ; [haddIssue.tar.gz](https://github.com/root-project/root/files/12429530/haddIssue.tar.gz). * `createFile.cxx` for creating the input file which will be used to illustrate the issue ; Compilation and execution (it takes ~10 min to create the file) ; ```bash; g++ createFile.cxx -o createFile.exe -Wall $(root-config --cflags --glibs); ./createFile.exe; ``` ; --> this will create the file `myFile.root` which contains 1000 directories, each directory containing `10k` histograms ; ; * `fasterCustomHadd.cxx` script which **allows doing a hadd but without a huge RAM consumption**; Compilation and execution ; ```bash; g++ fasterCustomHadd.cxx -o fasterCustomHadd.exe -Wall $(root-config --cflags --glibs); ./fasterCustomHadd.exe -j 1 -f myOtherFile2.root myFile.root ; ```; NB: please use the `-j 1` to request one thread as otherwise the script is creating partial hadded files ; ; A comparison with ; ```; hadd -f myOtherFile.root myFile.root ; ``` . Gives (see screen shots below): ; * `hadd`: at the very end the RAM used is **`4.4 GB`** (memory increasing during the whole processing of directories) ; * `fasterCustomHadd` the RAM used is only **`~205-210 MB`** and remains constant from the start to the end of the hadd. ; ; Many thanks in advance for the fix! . ### `hadd` RAM consumption ; ![hadd_RAM](https://github.com/root-project/root/assets/29270790/6096548f-23c8-4de8-9445-43db76f5d95b). ### `fasterCustomHadd` RAM consumption ; ![fasterCustomHadd_RAM](https://github.com/root-project/root/assets/29270790/7d45dbe5-5b46-40fc-a1e0-450d6df0c070). ### ROOT version. I tested both for ROOT root 6.20.06 and 6.24.08 ; I believe all ROOT versions are affected . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13531
https://github.com/root-project/root/pull/13532:258,Deployability,update,updated,258,"Two implementations are provided, i.e. for Python versions older than 3.8, for which PEP 587 is not in force, and newer. # This Pull request:. ## Changes or fixes:; Implements TPython::ExecFile for Python 3. ## Checklist:. - [v] tested changes locally; - [] updated the docs (if necessary). This PR fixes #9058",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13532
https://github.com/root-project/root/pull/13532:229,Testability,test,tested,229,"Two implementations are provided, i.e. for Python versions older than 3.8, for which PEP 587 is not in force, and newer. # This Pull request:. ## Changes or fixes:; Implements TPython::ExecFile for Python 3. ## Checklist:. - [v] tested changes locally; - [] updated the docs (if necessary). This PR fixes #9058",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13532
https://github.com/root-project/root/pull/13533:81,Availability,error,error,81,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:155,Availability,failure,failure,155,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:582,Availability,failure,failures,582,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:54,Safety,avoid,avoids,54,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:392,Safety,avoid,avoid,392,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:576,Safety,avoid,avoid,576,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:200,Testability,test,tests,200,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:367,Testability,Test,TestRModelParserKeras,367,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13533:567,Testability,test,tests,567,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13533
https://github.com/root-project/root/pull/13534:662,Testability,test,tested,662,"This pull request moves helper functions to an anonymous namespace at the beginning of the TU. **There are no functional changes in this PR**; instead it makes the code more readable. The follow-up PR, which is the important thing, fixes a number of issues in the handling of instantiation of member functions of templated classes, which should fix https://github.com/root-project/root/issues/10049 and all the issues mentioned there :rocket:. ## Changes or fixes:; - Move helper functions to anonymous namespace at the beginning of the TU; - Fix unmatched `#pragma clang diagnostic push`; - Fix wrong indentation in some parts of the file. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13534
https://github.com/root-project/root/pull/13535:3,Deployability,Update,Update,3,1. Update jsroot with several other fixes; 2. Adjust eve7 where three.js is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13535
https://github.com/root-project/root/issues/13536:389,Integrability,depend,depend,389,"### Feature description. As C++20 goes mainstream, there are many reasons to start using C++20 modules in a non-ROOT context to provide well-designed and encapsulated APIs. Generated module files are compiler-specific, which would seem likely to lead to issues with interactions between Cling-generated PCM dictionaries and any C++20 modules used by the code upon which those dictionaries depend. My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. This may or may not involve transitioning PCM dictionary generation to use C++20 modules as opposed to Clang's original implementation of C++ modules. ### Alternatives considered. Short of having to operate under the constraint that no code depended upon by a ROOT dictionary be or use C++20 modules at any level (direct or indirect), I do not see an alternative to providing the requested feature, although it is certainly possible I am overestimating the complexity of the situation and that the feature request either is already implemented or, ""just works"" already in 6.28/04. ### Additional context. In dealing with https://github.com/root-project/root/issues/13461 it was suggested by @pcanal and later verified _in vitro_ that using PCM dictionaries vs `.rootmap` dictionaries would be a viable workaround. This led to thoughts about ROOT C++ modules vs non-ROOT C++20 module generation, and eventually this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13536
https://github.com/root-project/root/issues/13536:522,Integrability,depend,dependencies,522,"### Feature description. As C++20 goes mainstream, there are many reasons to start using C++20 modules in a non-ROOT context to provide well-designed and encapsulated APIs. Generated module files are compiler-specific, which would seem likely to lead to issues with interactions between Cling-generated PCM dictionaries and any C++20 modules used by the code upon which those dictionaries depend. My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. This may or may not involve transitioning PCM dictionary generation to use C++20 modules as opposed to Clang's original implementation of C++ modules. ### Alternatives considered. Short of having to operate under the constraint that no code depended upon by a ROOT dictionary be or use C++20 modules at any level (direct or indirect), I do not see an alternative to providing the requested feature, although it is certainly possible I am overestimating the complexity of the situation and that the feature request either is already implemented or, ""just works"" already in 6.28/04. ### Additional context. In dealing with https://github.com/root-project/root/issues/13461 it was suggested by @pcanal and later verified _in vitro_ that using PCM dictionaries vs `.rootmap` dictionaries would be a viable workaround. This led to thoughts about ROOT C++ modules vs non-ROOT C++20 module generation, and eventually this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13536
https://github.com/root-project/root/issues/13536:810,Integrability,depend,depended,810,"### Feature description. As C++20 goes mainstream, there are many reasons to start using C++20 modules in a non-ROOT context to provide well-designed and encapsulated APIs. Generated module files are compiler-specific, which would seem likely to lead to issues with interactions between Cling-generated PCM dictionaries and any C++20 modules used by the code upon which those dictionaries depend. My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. This may or may not involve transitioning PCM dictionary generation to use C++20 modules as opposed to Clang's original implementation of C++ modules. ### Alternatives considered. Short of having to operate under the constraint that no code depended upon by a ROOT dictionary be or use C++20 modules at any level (direct or indirect), I do not see an alternative to providing the requested feature, although it is certainly possible I am overestimating the complexity of the situation and that the feature request either is already implemented or, ""just works"" already in 6.28/04. ### Additional context. In dealing with https://github.com/root-project/root/issues/13461 it was suggested by @pcanal and later verified _in vitro_ that using PCM dictionaries vs `.rootmap` dictionaries would be a viable workaround. This led to thoughts about ROOT C++ modules vs non-ROOT C++20 module generation, and eventually this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13536
https://github.com/root-project/root/pull/13537:172,Safety,avoid,avoid,172,# This Pull request:. Fixes a bug that made the dict-version crash for HistFactory setups. ## Changes or fixes:. - make sure modifiers are always kept as a list such as to avoid collisions between HistoSys and OverallSys with the same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13537
https://github.com/root-project/root/pull/13538:48,Integrability,depend,depends,48,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13538
https://github.com/root-project/root/pull/13538:254,Integrability,interface,interface,254,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13538
https://github.com/root-project/root/pull/13538:203,Security,validat,validated,203,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13538
https://github.com/root-project/root/pull/13538:227,Testability,test,test,227,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13538
https://github.com/root-project/root/pull/13538:601,Testability,test,tests,601,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13538
https://github.com/root-project/root/pull/13541:181,Deployability,update,updated,181,# This Pull request:. ## Changes or fixes:; Makes TDatabasePDG::GetParticle methods thread safe and adds a test for this feature. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11580,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13541
https://github.com/root-project/root/pull/13541:91,Safety,safe,safe,91,# This Pull request:. ## Changes or fixes:; Makes TDatabasePDG::GetParticle methods thread safe and adds a test for this feature. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11580,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13541
https://github.com/root-project/root/pull/13541:107,Testability,test,test,107,# This Pull request:. ## Changes or fixes:; Makes TDatabasePDG::GetParticle methods thread safe and adds a test for this feature. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11580,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13541
https://github.com/root-project/root/pull/13541:151,Testability,test,tested,151,# This Pull request:. ## Changes or fixes:; Makes TDatabasePDG::GetParticle methods thread safe and adds a test for this feature. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11580,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13541
https://github.com/root-project/root/pull/13542:490,Availability,Error,Error,490,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:549,Availability,avail,available,549,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:389,Integrability,message,message,389,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:355,Modifiability,config,configured,355,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:191,Performance,perform,performed,191,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:207,Safety,avoid,avoid,207,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/pull/13542:228,Usability,simpl,simple,228,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13542
https://github.com/root-project/root/issues/13543:405,Availability,Down,Download,405,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13543
https://github.com/root-project/root/issues/13543:691,Availability,down,down,691,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13543
https://github.com/root-project/root/issues/13543:803,Deployability,Install,Installation,803,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13543
https://github.com/root-project/root/issues/13543:703,Security,checksum,checksum,703,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13543
https://github.com/root-project/root/pull/13545:51,Deployability,update,updated,51,## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/13513,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13545
https://github.com/root-project/root/pull/13545:21,Testability,test,tested,21,## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/13513,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13545
https://github.com/root-project/root/pull/13546:481,Deployability,update,updated,481,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:112,Energy Efficiency,schedul,scheduled,112,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:290,Energy Efficiency,battery,battery,290,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:348,Energy Efficiency,schedul,scheduled,348,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:57,Integrability,message,message,57,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:285,Testability,test,test,285,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/pull/13546:451,Testability,test,tested,451,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13546
https://github.com/root-project/root/issues/13548:501,Availability,error,error,501,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/issues/13548:749,Deployability,Install,Installation,749,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/issues/13548:133,Testability,test,test-cannot-be-found,133,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/issues/13548:558,Testability,test,test,558,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/issues/13548:617,Testability,test,test,617,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/issues/13548:663,Testability,test,test,663,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13548
https://github.com/root-project/root/pull/13549:135,Deployability,update,updated,135,This pull request extends the description of a ROOT compression block in the RNTuple binary format specification. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13549
https://github.com/root-project/root/pull/13549:18,Modifiability,extend,extends,18,This pull request extends the description of a ROOT compression block in the RNTuple binary format specification. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13549
https://github.com/root-project/root/pull/13550:156,Integrability,rout,routines,156,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13550
https://github.com/root-project/root/pull/13550:26,Modifiability,extend,extends,26,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13550
https://github.com/root-project/root/pull/13550:485,Testability,test,tested,485,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13550
https://github.com/root-project/root/issues/13551:209,Deployability,Install,Installation,209,### Check duplicate issues. - [X] Checked for duplicates. ### Description. We were writing and then reading back booleans from uninitialized memory (just reserved). ### Reproducer. -. ### ROOT version. -. ### Installation method. From source. ### Operating system. Some Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13551
https://github.com/root-project/root/pull/13552:32,Deployability,update,update,32,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:77,Deployability,update,update,77,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:147,Deployability,update,update,147,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:326,Deployability,Update,Update,326,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:3,Performance,perform,performs,3,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:338,Performance,perform,performed,338,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:169,Safety,Avoid,Avoids,169,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:261,Safety,avoid,avoid,261,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13552:267,Testability,log,logical,267,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13552
https://github.com/root-project/root/pull/13553:464,Deployability,update,updated,464,# This Pull request: . - Adds the feature to import datasets and modelConfigs to RooWorkspace using the `RooJSONFactoryWSTool`.; - Adds a new Pythonic tutorial for fitting and plotting using single-channel data. ## Changes:. - `RooJSONFactoryWSTool` to import binned & unbinned datasets and modelConfigs; - Adds a `FitModelAndPlot` overload to perform measurement using RooWorkspace; - A new tutorial `hf101.py`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13553
https://github.com/root-project/root/pull/13553:344,Performance,perform,perform,344,# This Pull request: . - Adds the feature to import datasets and modelConfigs to RooWorkspace using the `RooJSONFactoryWSTool`.; - Adds a new Pythonic tutorial for fitting and plotting using single-channel data. ## Changes:. - `RooJSONFactoryWSTool` to import binned & unbinned datasets and modelConfigs; - Adds a `FitModelAndPlot` overload to perform measurement using RooWorkspace; - A new tutorial `hf101.py`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13553
https://github.com/root-project/root/pull/13553:434,Testability,test,tested,434,# This Pull request: . - Adds the feature to import datasets and modelConfigs to RooWorkspace using the `RooJSONFactoryWSTool`.; - Adds a new Pythonic tutorial for fitting and plotting using single-channel data. ## Changes:. - `RooJSONFactoryWSTool` to import binned & unbinned datasets and modelConfigs; - Adds a `FitModelAndPlot` overload to perform measurement using RooWorkspace; - A new tutorial `hf101.py`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13553
https://github.com/root-project/root/pull/13555:330,Deployability,update,updated,330,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13555
https://github.com/root-project/root/pull/13555:146,Modifiability,Variab,Variables,146,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13555
https://github.com/root-project/root/pull/13555:251,Modifiability,variab,variable,251,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13555
https://github.com/root-project/root/pull/13555:300,Testability,test,tested,300,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13555
https://github.com/root-project/root/pull/13556:192,Modifiability,variab,variables,192,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13556
https://github.com/root-project/root/pull/13556:38,Performance,Perform,Performance,38,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13556
https://github.com/root-project/root/pull/13556:148,Safety,Avoid,Avoid,148,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13556
https://github.com/root-project/root/pull/13556:618,Testability,benchmark,benchmark,618,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13556
https://github.com/root-project/root/pull/13558:342,Deployability,update,updated,342,"# This Pull request:. ## Changes or fixes:; Adds StandardProfileInspectorDemo.py and StandardProfileLikelihoodDemo.py, from StandardProfileInspectorDemo.C and StandardProfileLikelihoodDemo.C. Also fixes a typo in StandardProfileInspectorDemo.C and a comment in TMVA_Higgs_Classification.py. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] formatted with black (`black --line-length=120 <tutorial file>.py`). This PR contributes to #8758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13558
https://github.com/root-project/root/pull/13558:312,Testability,test,tested,312,"# This Pull request:. ## Changes or fixes:; Adds StandardProfileInspectorDemo.py and StandardProfileLikelihoodDemo.py, from StandardProfileInspectorDemo.C and StandardProfileLikelihoodDemo.C. Also fixes a typo in StandardProfileInspectorDemo.C and a comment in TMVA_Higgs_Classification.py. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] formatted with black (`black --line-length=120 <tutorial file>.py`). This PR contributes to #8758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13558
https://github.com/root-project/root/pull/13559:29,Availability,avail,available,29,Check if fFile pointer still available. Fixes #13503,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13559
https://github.com/root-project/root/issues/13560:1176,Deployability,Install,Installation,1176,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I played around with printing a canvas to pdf, using the EmbedFonts option or not. During EmbedFonts, where ghostcsript is called, it complaines about missing endobj in the pdf file. As far as i understand it is just a warning and the output still looks correct. . Still, no need for this warning. Why not just print the endobj? . Also: ghostscript option -dUseCIEColor is deprecated for gs > 9.11 One could remove this option in the print. Changes to the ROOT code: ; graf2d/postscript/src/TPDF.cxx:; Add `PrintStr(""endobj@"");` at the end of the `""/Title (Page""` blocks and the` ""/Title (Contents""` block. graf2d/gpad/src/TPad.cxx:; remove option `-dUseCIEColor` from the gs system call. After this two changes, everything is fine for me again. No more warnings. And output looks still the same. ### Reproducer. ROOT macro: (Macro.cpp); ```; {; TCanvas *c1=new TCanvas(""c1"",""c1"");; double *a=new double[3];; a[0]=1;a[1]=2;a[2]=3;; TGraph *g=new TGraph(3,a,a);; g->Draw();; c1->Print(""Test.pdf"",""EmbedFonts"");; }. ```; Run with: `root -l -b -q Macro.cpp`. ### ROOT version. ROOT version: 6.24/08. ### Installation method. yum. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13560
https://github.com/root-project/root/issues/13560:1060,Testability,Test,Test,1060,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I played around with printing a canvas to pdf, using the EmbedFonts option or not. During EmbedFonts, where ghostcsript is called, it complaines about missing endobj in the pdf file. As far as i understand it is just a warning and the output still looks correct. . Still, no need for this warning. Why not just print the endobj? . Also: ghostscript option -dUseCIEColor is deprecated for gs > 9.11 One could remove this option in the print. Changes to the ROOT code: ; graf2d/postscript/src/TPDF.cxx:; Add `PrintStr(""endobj@"");` at the end of the `""/Title (Page""` blocks and the` ""/Title (Contents""` block. graf2d/gpad/src/TPad.cxx:; remove option `-dUseCIEColor` from the gs system call. After this two changes, everything is fine for me again. No more warnings. And output looks still the same. ### Reproducer. ROOT macro: (Macro.cpp); ```; {; TCanvas *c1=new TCanvas(""c1"",""c1"");; double *a=new double[3];; a[0]=1;a[1]=2;a[2]=3;; TGraph *g=new TGraph(3,a,a);; g->Draw();; c1->Print(""Test.pdf"",""EmbedFonts"");; }. ```; Run with: `root -l -b -q Macro.cpp`. ### ROOT version. ROOT version: 6.24/08. ### Installation method. yum. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13560
https://github.com/root-project/root/pull/13561:29,Availability,avail,available,29,Check if fFile pointer still available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13561
https://github.com/root-project/root/pull/13563:275,Deployability,update,updated,275,# This Pull request:. Fixes a bug that can lead to datasets and distributions being wrongly ordered in HS3 JSON files. ## Changes or fixes:. Use the name of the split datasets rather than their index to decide the ordering. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13563
https://github.com/root-project/root/pull/13563:245,Testability,test,tested,245,# This Pull request:. Fixes a bug that can lead to datasets and distributions being wrongly ordered in HS3 JSON files. ## Changes or fixes:. Use the name of the split datasets rather than their index to decide the ordering. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13563
https://github.com/root-project/root/pull/13565:1442,Deployability,patch,patch,1442,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13565:1516,Deployability,update,updated,1516,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13565:1374,Modifiability,variab,variables,1374,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13565:1486,Testability,test,tested,1486,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13565:1568,Testability,test,test,1568,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13565:1347,Usability,simpl,simpler,1347,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13565
https://github.com/root-project/root/pull/13566:121,Availability,avail,available,121,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13566
https://github.com/root-project/root/pull/13566:28,Deployability,release,release,28,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13566
https://github.com/root-project/root/pull/13566:151,Safety,safe,safe,151,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13566
https://github.com/root-project/root/pull/13566:191,Testability,test,tested,191,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13566
https://github.com/root-project/root/pull/13567:164,Testability,test,tested,164,"It's not important, but I discovered by chance that `InterpreterStress::stressSTLDict()` was doing one iteration less than expected. Fix that. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13567
https://github.com/root-project/root/issues/13568:144,Availability,failure,failure,144,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13568:851,Deployability,Install,Installation,851,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13568:549,Security,access,access,549,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13568:134,Testability,assert,assertion,134,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13568:760,Testability,test,test,760,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13568:156,Usability,Simpl,SimpleCollectionProxy,156,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13568
https://github.com/root-project/root/issues/13569:165,Availability,error,error,165,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:204,Availability,Failure,Failure,204,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:639,Deployability,Install,Installation,639,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:221,Modifiability,variab,variable,221,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:111,Testability,test,test-,111,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:136,Testability,test,test,136,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:523,Testability,test,test-,523,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/issues/13569:548,Testability,test,test,548,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13569
https://github.com/root-project/root/pull/13570:26,Modifiability,variab,variable,26,Fix issue #13569 `[RHist] variable bins_per_hyperplane is being used without being initialized`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13570
https://github.com/root-project/root/pull/13571:171,Deployability,update,updated,171,"# This Pull request:. ## Changes or fixes:; Makes PROOF optional and enabled by default with some simple CMake changes. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; There is no issue (yet) to be fixed, this is a PR opened for discussion. It is important to underline that effectively, this PR changes nothing: PROOF is still always built by default and the opt-out option is given not to build it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13571
https://github.com/root-project/root/pull/13571:141,Testability,test,tested,141,"# This Pull request:. ## Changes or fixes:; Makes PROOF optional and enabled by default with some simple CMake changes. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; There is no issue (yet) to be fixed, this is a PR opened for discussion. It is important to underline that effectively, this PR changes nothing: PROOF is still always built by default and the opt-out option is given not to build it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13571
https://github.com/root-project/root/pull/13571:98,Usability,simpl,simple,98,"# This Pull request:. ## Changes or fixes:; Makes PROOF optional and enabled by default with some simple CMake changes. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; There is no issue (yet) to be fixed, this is a PR opened for discussion. It is important to underline that effectively, this PR changes nothing: PROOF is still always built by default and the opt-out option is given not to build it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13571
https://github.com/root-project/root/pull/13572:2,Modifiability,Refactor,Refactor,2,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13572
https://github.com/root-project/root/pull/13572:255,Security,validat,validates,255,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13572
https://github.com/root-project/root/pull/13572:224,Testability,test,testHistFactory,224,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13572
https://github.com/root-project/root/pull/13572:246,Testability,test,test,246,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13572
https://github.com/root-project/root/issues/13574:1376,Availability,error,error,1376,"espace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:1595,Availability,error,error,1595,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:1787,Availability,Error,Error,1787,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:2408,Deployability,Install,Installation,2408,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:94,Performance,load,load,94,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:753,Performance,load,load,753,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:1797,Performance,Load,Load,1797,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:336,Testability,test,test,336,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:471,Testability,test,test,471,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:489,Testability,test,test,489,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:499,Testability,test,test,499,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:551,Testability,test,test,551,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:580,Testability,test,test,580,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:590,Testability,test,test,590,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:596,Testability,test,test,596,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:621,Testability,test,test,621,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:676,Testability,test,test,676,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:683,Testability,test,test,683,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:708,Testability,test,test,708,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/issues/13574:1257,Testability,test,test,1257,"g here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13574
https://github.com/root-project/root/pull/13576:167,Availability,error,error,167,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13576
https://github.com/root-project/root/pull/13576:115,Performance,concurren,concurrently,115,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13576
https://github.com/root-project/root/pull/13576:110,Testability,test,test,110,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13576
https://github.com/root-project/root/pull/13578:160,Deployability,update,updated,160,# This Pull request:. ## Changes or fixes:; Sets a unique name for each varied result; This PR fixes #13582. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13578
https://github.com/root-project/root/pull/13578:130,Testability,test,tested,130,# This Pull request:. ## Changes or fixes:; Sets a unique name for each varied result; This PR fixes #13582. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13578
https://github.com/root-project/root/pull/13579:46,Deployability,patch,patches,46,# This Pull request:; Backport #13358 to 6.28 patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13579
https://github.com/root-project/root/pull/13580:394,Modifiability,VARIAB,VARIABLE,394,"With this commit, fast evaluation with BatchMode is now supported for pdf classes generated by the RooClassFactory. In a next step, we will also support the evaluation on the GPU. For example, the code generated in the RooFit tutorial on the RooClassFactory now looks like this:. ```C++; namespace {. inline double evaluateImpl(double x, double A, double B); {; // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE; return A*fabs(x)+pow(x-B,2);; }. } // namespace. double MyPdfV3::evaluate() const; {; return evaluateImpl(x, A, B);; }. void MyPdfV3::computeBatch(double *output,; size_t size,; RooFit::Detail::DataMap const &dataMap) const; {; std::span<const double> xSpan = dataMap.at(x);; std::span<const double> ASpan = dataMap.at(A);; std::span<const double> BSpan = dataMap.at(B);. for (std::size_t i = 0; i < size; ++i) {; output[i] = evaluateImpl(xSpan.size() > 1 ? xSpan[i] : xSpan[0],; ASpan.size() > 1 ? ASpan[i] : ASpan[0],; BSpan.size() > 1 ? BSpan[i] : BSpan[0]);; }; }; ```. Also do some general code modernization of the RooClassFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13580
https://github.com/root-project/root/pull/13581:12,Availability,error,errors,12,Fix several errors found with `eslint` static code analyzer ; Plus many other syntax changes.; Plus important fix for member-wise streamer in std::map,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13581
https://github.com/root-project/root/issues/13582:424,Deployability,Install,Installation,424,"### Explain what you would like to see improved and how. The suggestion is related to the naming of varied results in ROOT. Currently, when generating varied results from a single source, they all share the same name. An improvement would be to give each varied result a unique name. ; This suggestion has previously been discussed during this meeting: https://indico.cern.ch/event/1167944/. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13582
https://github.com/root-project/root/pull/13584:159,Availability,error,error,159,"Apply changes suggested in the `Notes` section of the `isspace` [C++ standard](https://en.cppreference.com/w/cpp/string/byte/isspace) This fixes the following error when reading the character `'ò' (-14 )` in stressgraphics:; ```; Debug Assertion Failed!; Program:; C:\root-dev\build\x86\debug_test\test\Debug\stressGraphics.exe; File: minkernel\crts\ucrt\src\appcrt\convert\isctype.cpp; Line 36; Expression c > = -1 && c < = 255; ```. From `isspace((Int_t)c)`, in `core\base\src\Stringio.cxx`, in `std::istream& TString::ReadToken(std::istream& strm)`:; ```; while ((wid == 0 || Length() < (Int_t)wid) &&; strm.get(c).good() && (hitSpace = isspace((Int_t)c)) == 0) {; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13584
https://github.com/root-project/root/pull/13584:236,Testability,Assert,Assertion,236,"Apply changes suggested in the `Notes` section of the `isspace` [C++ standard](https://en.cppreference.com/w/cpp/string/byte/isspace) This fixes the following error when reading the character `'ò' (-14 )` in stressgraphics:; ```; Debug Assertion Failed!; Program:; C:\root-dev\build\x86\debug_test\test\Debug\stressGraphics.exe; File: minkernel\crts\ucrt\src\appcrt\convert\isctype.cpp; Line 36; Expression c > = -1 && c < = 255; ```. From `isspace((Int_t)c)`, in `core\base\src\Stringio.cxx`, in `std::istream& TString::ReadToken(std::istream& strm)`:; ```; while ((wid == 0 || Length() < (Int_t)wid) &&; strm.get(c).good() && (hitSpace = isspace((Int_t)c)) == 0) {; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13584
https://github.com/root-project/root/pull/13584:298,Testability,test,test,298,"Apply changes suggested in the `Notes` section of the `isspace` [C++ standard](https://en.cppreference.com/w/cpp/string/byte/isspace) This fixes the following error when reading the character `'ò' (-14 )` in stressgraphics:; ```; Debug Assertion Failed!; Program:; C:\root-dev\build\x86\debug_test\test\Debug\stressGraphics.exe; File: minkernel\crts\ucrt\src\appcrt\convert\isctype.cpp; Line 36; Expression c > = -1 && c < = 255; ```. From `isspace((Int_t)c)`, in `core\base\src\Stringio.cxx`, in `std::istream& TString::ReadToken(std::istream& strm)`:; ```; while ((wid == 0 || Length() < (Int_t)wid) &&; strm.get(c).good() && (hitSpace = isspace((Int_t)c)) == 0) {; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13584
https://github.com/root-project/root/pull/13586:182,Deployability,update,updated,182,# This Pull request:. ## Changes or fixes:. This is the new PR I mentioned here: https://github.com/root-project/root/pull/13408 ; ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13586
https://github.com/root-project/root/pull/13586:152,Testability,test,tested,152,# This Pull request:. ## Changes or fixes:. This is the new PR I mentioned here: https://github.com/root-project/root/pull/13408 ; ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13586
https://github.com/root-project/root/issues/13588:159,Deployability,Install,Installation,159,### Explain what you would like to see improved and how. GraphAsymmErrors is not in the list of allowed operations in DistRDF. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13588
https://github.com/root-project/root/pull/13590:13,Usability,simpl,simple,13,"For RVecs of simple types, do a vector read of the item's principal columns instead of reading items one by one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13590
https://github.com/root-project/root/pull/13591:251,Deployability,update,updated,251,Ninja shows dependency issues in our build system; fix those first before switching to Ninja. This reverts commit fcfca4ccdaf97099a180e154c60bc3c621abfafe. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13591
https://github.com/root-project/root/pull/13591:12,Integrability,depend,dependency,12,Ninja shows dependency issues in our build system; fix those first before switching to Ninja. This reverts commit fcfca4ccdaf97099a180e154c60bc3c621abfafe. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13591
https://github.com/root-project/root/pull/13591:221,Testability,test,tested,221,Ninja shows dependency issues in our build system; fix those first before switching to Ninja. This reverts commit fcfca4ccdaf97099a180e154c60bc3c621abfafe. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13591
https://github.com/root-project/root/pull/13592:69,Performance,load,loading,69,Go back to use .h5 files instead of .keras due to a problem in Keras loading .keras files on MacOS ARM ; (see https://github.com/keras-team/tf-keras/issues/46 ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13592
https://github.com/root-project/root/pull/13594:667,Energy Efficiency,sustainab,sustainable,667,"PyROOT is wrongly interpreting the signature of; `RooLinkedList::Add(RooAbsArg *arg)` as the RooLinkedList taking ownership of the RooAbsArg. This results in a memory leak because nobody feels responsible for deleting the arg. This can be fixed by setting the memory policy of the method to ""strict"" and not to ""heuristic"" in the pythonizations. This pythonization might become unnecessary in the future if it is decided to set the global memory policy to ""strict"" in _facade.py. Reproducer of the original problem: the first code snippet in this forum post:; https://root-forum.cern.ch/t/memory-leak-in-fits/56249. This PR is only a hot-fix to the problem. The more sustainable solution will be provided by another PR that disables the heuristic memory management:; https://github.com/root-project/root/pull/13593",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13594
https://github.com/root-project/root/pull/13596:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13596
https://github.com/root-project/root/pull/13596:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13596
https://github.com/root-project/root/issues/13597:11,Availability,Error,Error,11,```; CMake Error at interpreter/cling/docs/CMakeLists.txt:60 (include):; include could not find requested file:. AddSphinxTarget; ```. when configuring with. `cmake -DLLVM_ENABLE_SPHINX=ON`. Affects `master` and latest v6.28/06 / `v6-28-00-patches`. Reported on the forum: https://root-forum.cern.ch/t/cmake-failed-w-dllvm-enable-sphinx-on/56260,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13597
https://github.com/root-project/root/issues/13597:240,Deployability,patch,patches,240,```; CMake Error at interpreter/cling/docs/CMakeLists.txt:60 (include):; include could not find requested file:. AddSphinxTarget; ```. when configuring with. `cmake -DLLVM_ENABLE_SPHINX=ON`. Affects `master` and latest v6.28/06 / `v6-28-00-patches`. Reported on the forum: https://root-forum.cern.ch/t/cmake-failed-w-dllvm-enable-sphinx-on/56260,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13597
https://github.com/root-project/root/issues/13597:140,Modifiability,config,configuring,140,```; CMake Error at interpreter/cling/docs/CMakeLists.txt:60 (include):; include could not find requested file:. AddSphinxTarget; ```. when configuring with. `cmake -DLLVM_ENABLE_SPHINX=ON`. Affects `master` and latest v6.28/06 / `v6-28-00-patches`. Reported on the forum: https://root-forum.cern.ch/t/cmake-failed-w-dllvm-enable-sphinx-on/56260,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13597
https://github.com/root-project/root/pull/13598:19,Availability,avail,available,19,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13598
https://github.com/root-project/root/pull/13598:66,Deployability,configurat,configuration,66,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13598
https://github.com/root-project/root/pull/13598:66,Modifiability,config,configuration,66,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13598
https://github.com/root-project/root/pull/13599:19,Availability,avail,available,19,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13599
https://github.com/root-project/root/pull/13599:100,Deployability,configurat,configuration,100,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13599
https://github.com/root-project/root/pull/13599:203,Deployability,patch,patches,203,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13599
https://github.com/root-project/root/pull/13599:100,Modifiability,config,configuration,100,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13599
https://github.com/root-project/root/issues/13600:176,Availability,Error,Errors,176,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We get a segfault when trying to read C-style arrays returned by getters from the `TGraph(Asymm,Bent)Errors` classes as Python `list`:. ```; #10 0x00007f7361d62896 in CPyCppyy::(anonymous namespace)::DoubleConverter::FromMemory (this=0x7f7361e399f8 <(anonymous namespace)::InitConvFactories_t::InitConvFactories_t()::{lambda(long*)#51}::operator()(long*) const::c>, address=0x55e74bab5000) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:952; #11 0x00007f7361dbf232 in ll_item (self=0x7f7354768960, index=88746) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:376; #12 0x00007f736fc1e9e5 in iter_iternext (iterator=<iterator at remote 0x7f73620b46a0>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/iterobject.c:65; #13 0x00007f736fbf33fd in list_extend (self=self; entry=0x7f732b67c200, iterable=<cppyy.LowLevelView at remote 0x7f7354768960>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:966; #14 0x00007f736fc11261 in list___init___impl (iterable=<optimized out>, self=0x7f732b67c200) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:2790; ```. ### Reproducer. ```python; import ROOT; import numpy. if __name__ == ""__main__"":; n = 10; x = numpy.array([0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95], dtype=numpy.double); y = numpy.array([1, 2.9, 5.6, 7.4, 9, 9.6, 8.7, 6.3, 4.5, 1], dtype=numpy.double); exl = numpy.array([.05, .1, .07, .07, .04, .05, .06, .07, .08, .05], dtype=numpy.double); eyl = numpy.array([.8, .7, .6, .5, .4, .4, .5, .6, .7, .8], dtype=numpy.double); exh = numpy.array([.02, .08, .05, .05, .03, .03, .04, .05, .06, .03], dtype=numpy.double); eyh = numpy.array([.6, .5, .4, .3, .2, .2, .3, .4, .5, .6], dtype=numpy.double); gr = ROOT.TGraphAsymmErrors(n, x, y, exl, exh, eyl, eyh). print(list(gr.GetEXlow())); ```. ### ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13600
https://github.com/root-project/root/issues/13600:2033,Deployability,Install,Installation,2033,"ters from the `TGraph(Asymm,Bent)Errors` classes as Python `list`:. ```; #10 0x00007f7361d62896 in CPyCppyy::(anonymous namespace)::DoubleConverter::FromMemory (this=0x7f7361e399f8 <(anonymous namespace)::InitConvFactories_t::InitConvFactories_t()::{lambda(long*)#51}::operator()(long*) const::c>, address=0x55e74bab5000) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:952; #11 0x00007f7361dbf232 in ll_item (self=0x7f7354768960, index=88746) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:376; #12 0x00007f736fc1e9e5 in iter_iternext (iterator=<iterator at remote 0x7f73620b46a0>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/iterobject.c:65; #13 0x00007f736fbf33fd in list_extend (self=self; entry=0x7f732b67c200, iterable=<cppyy.LowLevelView at remote 0x7f7354768960>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:966; #14 0x00007f736fc11261 in list___init___impl (iterable=<optimized out>, self=0x7f732b67c200) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:2790; ```. ### Reproducer. ```python; import ROOT; import numpy. if __name__ == ""__main__"":; n = 10; x = numpy.array([0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95], dtype=numpy.double); y = numpy.array([1, 2.9, 5.6, 7.4, 9, 9.6, 8.7, 6.3, 4.5, 1], dtype=numpy.double); exl = numpy.array([.05, .1, .07, .07, .04, .05, .06, .07, .08, .05], dtype=numpy.double); eyl = numpy.array([.8, .7, .6, .5, .4, .4, .5, .6, .7, .8], dtype=numpy.double); exh = numpy.array([.02, .08, .05, .05, .03, .03, .04, .05, .06, .03], dtype=numpy.double); eyh = numpy.array([.6, .5, .4, .3, .2, .2, .3, .4, .5, .6], dtype=numpy.double); gr = ROOT.TGraphAsymmErrors(n, x, y, exl, exh, eyl, eyh). print(list(gr.GetEXlow())); ```. ### ROOT version. master, but any will do. ### Installation method. built from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13600
https://github.com/root-project/root/issues/13600:1163,Performance,optimiz,optimized,1163,"ters from the `TGraph(Asymm,Bent)Errors` classes as Python `list`:. ```; #10 0x00007f7361d62896 in CPyCppyy::(anonymous namespace)::DoubleConverter::FromMemory (this=0x7f7361e399f8 <(anonymous namespace)::InitConvFactories_t::InitConvFactories_t()::{lambda(long*)#51}::operator()(long*) const::c>, address=0x55e74bab5000) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:952; #11 0x00007f7361dbf232 in ll_item (self=0x7f7354768960, index=88746) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:376; #12 0x00007f736fc1e9e5 in iter_iternext (iterator=<iterator at remote 0x7f73620b46a0>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/iterobject.c:65; #13 0x00007f736fbf33fd in list_extend (self=self; entry=0x7f732b67c200, iterable=<cppyy.LowLevelView at remote 0x7f7354768960>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:966; #14 0x00007f736fc11261 in list___init___impl (iterable=<optimized out>, self=0x7f732b67c200) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:2790; ```. ### Reproducer. ```python; import ROOT; import numpy. if __name__ == ""__main__"":; n = 10; x = numpy.array([0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95], dtype=numpy.double); y = numpy.array([1, 2.9, 5.6, 7.4, 9, 9.6, 8.7, 6.3, 4.5, 1], dtype=numpy.double); exl = numpy.array([.05, .1, .07, .07, .04, .05, .06, .07, .08, .05], dtype=numpy.double); eyl = numpy.array([.8, .7, .6, .5, .4, .4, .5, .6, .7, .8], dtype=numpy.double); exh = numpy.array([.02, .08, .05, .05, .03, .03, .04, .05, .06, .03], dtype=numpy.double); eyh = numpy.array([.6, .5, .4, .3, .2, .2, .3, .4, .5, .6], dtype=numpy.double); gr = ROOT.TGraphAsymmErrors(n, x, y, exl, exh, eyl, eyh). print(list(gr.GetEXlow())); ```. ### ROOT version. master, but any will do. ### Installation method. built from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13600
https://github.com/root-project/root/pull/13601:0,Modifiability,Extend,Extend,0,"Extend the regex passed to 'compose_method' to include 'E*(low,high)[d]' getters. Fixes #13600",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13601
https://github.com/root-project/root/pull/13602:5,Deployability,update,update,5,Also update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13602
https://github.com/root-project/root/issues/13603:3951,Deployability,Install,Installation,3951,"Var(f""sigma_{i}"", """", 1.3, 0, 5)); gauss_list.append(ROOT.RooGaussian(f""gauss_{i}"", """", observable, mu_list[-1], sigma_list[-1])); frac_list.append(ROOT.RooConstVar(f""frac_{i}"", """", 1/3)). gauss = ROOT.RooAddPdf(""gauss"", """", gauss_list, frac_list[:-1]); gauss.keepAlive = (gauss_list, frac_list[:-1]); return (mu_list, sigma_list), gauss. def fit_gauss(model, data, batch_mode):; # build the loss; nll = model.createNLL(data, BatchMode=batch_mode). # minimize; minimizer = ROOT.RooMinimizer(nll); minimizer.minimize(""Minuit2"", """"). result = minimizer.save(); return result. def main(n_events):; observable = ROOT.RooRealVar(""x"", """", 0, -5, 20); data1 = get_data(observable, n_events); data2 = get_data(observable, n_events); parameters1, model1 = get_model(observable); parameters2, model2 = get_model(observable). result1 = fit_gauss(model1, data1, ""cpu""); result2 = fit_gauss(model2, data2, ""cuda""). c = ROOT.TCanvas("""", """", 800, 400); c.Divide(2). c.cd(1); frame1 = observable.frame(); data1.plotOn(frame1); model1.plotOn(frame1); frame1.SetTitle(""Fit performed with the 'cpu' backend""); frame1.Draw(). c.cd(2); frame2 = observable.frame(); data2.plotOn(frame2); model2.plotOn(frame2); frame2.SetTitle(""Fit performed with the 'cuda' backend""); frame2.Draw(). c.Print(""myPlot.png""). if __name__ == ""__main__"":; main(int(1e6)); ```; Run the code as `python fit.py`. ### ROOT version. ``` bash; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 29 2023, 08:42:45 |; | From heads/master@v6-29-01-2512-gf6aeead07d |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13603
https://github.com/root-project/root/issues/13603:99,Performance,perform,performing,99,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The problem occurs when performing a fit of multiple added pdfs to a distribution sampled from the pdfs itself. ; The expected behaviour can be seen in the cpu backend, where the correct parameter values are obtained (2.5, 7.5, 12.5 for the mus and 1 for each sigma). The cuda backend, however, doesn't find the correct terms for the last mu and sigma. With more added pdfs this is seen as well that the first few parameters get fitted somewhat to the data while the other parameters end up with seemingly random values (sometimes just their start values as if it is never attempted to fit them). The problem only occurs with sufficiently large numbers of events (e.g. 1e6). The results from both backends are visualized in the following plot:; ![myPlot](https://github.com/root-project/root/assets/138122408/c3022fea-d074-443f-a623-d06132aeeaaf). The resulting parameters from the cpu backend are:; ```bash; mu_0	 = 2.50139	 +/- 0.00314009; mu_1	 = 7.50163	 +/- 0.00325436; mu_2	 = 12.4977	 +/- 0.00315695; sigma_0	 = 0.996218	 +/- 0.00238642; sigma_1	 = 1.0002	 +/- 0.00273205; sigma_2	 = 1.00092	 +/- 0.00240107; ```; The cuda backend arrives at the following values instead:; ```bash; mu_0	 = 2.44677	 +/- 0.00330185; mu_1	 = 7.38606	 +/- 0.00417768; mu_2	 = 9.94213	 +/- 0.0220406; sigma_0	 = 0.951877	 +/- 0.00256995; sigma_1	 = 0.805267	 +/- 0.00292966; sigma_2	 = 3.04442	 +/- 0.0171947; ```. ### Reproducer. ```python; # Content of file fit.py; import ROOT. def get_data(observable, n_events):; import numpy as np; np.random.seed(0). data_list = []; for i in range(3):; data_list.append(np.random.normal(loc=2.5+5*i, size=n_events//9)). data_np = np.array(data_list).flatten(); data = ROOT.RooDataSet.from_numpy({""x"": data_np}, [observable]); return data. def get_model(observable, suffix=""param""):; mu_list = []; sigma_list = []; gauss_list = []; frac_list = []; for i in range(3):; mu_list.append(ROOT.RooRealVar(f""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13603
https://github.com/root-project/root/issues/13603:3125,Performance,perform,performed,3125,"Var(f""sigma_{i}"", """", 1.3, 0, 5)); gauss_list.append(ROOT.RooGaussian(f""gauss_{i}"", """", observable, mu_list[-1], sigma_list[-1])); frac_list.append(ROOT.RooConstVar(f""frac_{i}"", """", 1/3)). gauss = ROOT.RooAddPdf(""gauss"", """", gauss_list, frac_list[:-1]); gauss.keepAlive = (gauss_list, frac_list[:-1]); return (mu_list, sigma_list), gauss. def fit_gauss(model, data, batch_mode):; # build the loss; nll = model.createNLL(data, BatchMode=batch_mode). # minimize; minimizer = ROOT.RooMinimizer(nll); minimizer.minimize(""Minuit2"", """"). result = minimizer.save(); return result. def main(n_events):; observable = ROOT.RooRealVar(""x"", """", 0, -5, 20); data1 = get_data(observable, n_events); data2 = get_data(observable, n_events); parameters1, model1 = get_model(observable); parameters2, model2 = get_model(observable). result1 = fit_gauss(model1, data1, ""cpu""); result2 = fit_gauss(model2, data2, ""cuda""). c = ROOT.TCanvas("""", """", 800, 400); c.Divide(2). c.cd(1); frame1 = observable.frame(); data1.plotOn(frame1); model1.plotOn(frame1); frame1.SetTitle(""Fit performed with the 'cpu' backend""); frame1.Draw(). c.cd(2); frame2 = observable.frame(); data2.plotOn(frame2); model2.plotOn(frame2); frame2.SetTitle(""Fit performed with the 'cuda' backend""); frame2.Draw(). c.Print(""myPlot.png""). if __name__ == ""__main__"":; main(int(1e6)); ```; Run the code as `python fit.py`. ### ROOT version. ``` bash; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 29 2023, 08:42:45 |; | From heads/master@v6-29-01-2512-gf6aeead07d |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13603
https://github.com/root-project/root/issues/13603:3280,Performance,perform,performed,3280,"Var(f""sigma_{i}"", """", 1.3, 0, 5)); gauss_list.append(ROOT.RooGaussian(f""gauss_{i}"", """", observable, mu_list[-1], sigma_list[-1])); frac_list.append(ROOT.RooConstVar(f""frac_{i}"", """", 1/3)). gauss = ROOT.RooAddPdf(""gauss"", """", gauss_list, frac_list[:-1]); gauss.keepAlive = (gauss_list, frac_list[:-1]); return (mu_list, sigma_list), gauss. def fit_gauss(model, data, batch_mode):; # build the loss; nll = model.createNLL(data, BatchMode=batch_mode). # minimize; minimizer = ROOT.RooMinimizer(nll); minimizer.minimize(""Minuit2"", """"). result = minimizer.save(); return result. def main(n_events):; observable = ROOT.RooRealVar(""x"", """", 0, -5, 20); data1 = get_data(observable, n_events); data2 = get_data(observable, n_events); parameters1, model1 = get_model(observable); parameters2, model2 = get_model(observable). result1 = fit_gauss(model1, data1, ""cpu""); result2 = fit_gauss(model2, data2, ""cuda""). c = ROOT.TCanvas("""", """", 800, 400); c.Divide(2). c.cd(1); frame1 = observable.frame(); data1.plotOn(frame1); model1.plotOn(frame1); frame1.SetTitle(""Fit performed with the 'cpu' backend""); frame1.Draw(). c.cd(2); frame2 = observable.frame(); data2.plotOn(frame2); model2.plotOn(frame2); frame2.SetTitle(""Fit performed with the 'cuda' backend""); frame2.Draw(). c.Print(""myPlot.png""). if __name__ == ""__main__"":; main(int(1e6)); ```; Run the code as `python fit.py`. ### ROOT version. ``` bash; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 29 2023, 08:42:45 |; | From heads/master@v6-29-01-2512-gf6aeead07d |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13603
https://github.com/root-project/root/pull/13604:1055,Availability,ping,ping,1055,"# This Pull request:. Adds a tutorial that shows how to create a derived data set with a subset of the columns and row of the input data set. Working on the tutorial triggered several improvements to the RNTuple API:. - RNTupleModel takes ownership of entries and returns weak pointers to them (entries need to be destructed before the model and with it its fields are destructed).; - Several safety improvements: make members `const` or private; - Add `RFieldBase::Compare()`; - Several minor improvements. This PR triggers several follow-up PRs, e.g.; - `RBulk` should be returned as weak pointers like entries.; - `RFieldBase::RValue` should use shared pointers, not raw pointers; - There should be read support for projected fields to complete the skimming tutorial. Nevertheless, the PR is already rather large and it does seem to make sense to review it as is. ## Changes or fixes:. Changes to the following APIs: `RNTupleReader`, `RNTupleWriter`, `RNTupleModel`, `REntry`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs; - [ ] ping known users about the changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13604
https://github.com/root-project/root/pull/13604:1031,Deployability,update,updated,1031,"# This Pull request:. Adds a tutorial that shows how to create a derived data set with a subset of the columns and row of the input data set. Working on the tutorial triggered several improvements to the RNTuple API:. - RNTupleModel takes ownership of entries and returns weak pointers to them (entries need to be destructed before the model and with it its fields are destructed).; - Several safety improvements: make members `const` or private; - Add `RFieldBase::Compare()`; - Several minor improvements. This PR triggers several follow-up PRs, e.g.; - `RBulk` should be returned as weak pointers like entries.; - `RFieldBase::RValue` should use shared pointers, not raw pointers; - There should be read support for projected fields to complete the skimming tutorial. Nevertheless, the PR is already rather large and it does seem to make sense to review it as is. ## Changes or fixes:. Changes to the following APIs: `RNTupleReader`, `RNTupleWriter`, `RNTupleModel`, `REntry`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs; - [ ] ping known users about the changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13604
https://github.com/root-project/root/pull/13604:393,Safety,safe,safety,393,"# This Pull request:. Adds a tutorial that shows how to create a derived data set with a subset of the columns and row of the input data set. Working on the tutorial triggered several improvements to the RNTuple API:. - RNTupleModel takes ownership of entries and returns weak pointers to them (entries need to be destructed before the model and with it its fields are destructed).; - Several safety improvements: make members `const` or private; - Add `RFieldBase::Compare()`; - Several minor improvements. This PR triggers several follow-up PRs, e.g.; - `RBulk` should be returned as weak pointers like entries.; - `RFieldBase::RValue` should use shared pointers, not raw pointers; - There should be read support for projected fields to complete the skimming tutorial. Nevertheless, the PR is already rather large and it does seem to make sense to review it as is. ## Changes or fixes:. Changes to the following APIs: `RNTupleReader`, `RNTupleWriter`, `RNTupleModel`, `REntry`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs; - [ ] ping known users about the changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13604
https://github.com/root-project/root/pull/13604:1001,Testability,test,tested,1001,"# This Pull request:. Adds a tutorial that shows how to create a derived data set with a subset of the columns and row of the input data set. Working on the tutorial triggered several improvements to the RNTuple API:. - RNTupleModel takes ownership of entries and returns weak pointers to them (entries need to be destructed before the model and with it its fields are destructed).; - Several safety improvements: make members `const` or private; - Add `RFieldBase::Compare()`; - Several minor improvements. This PR triggers several follow-up PRs, e.g.; - `RBulk` should be returned as weak pointers like entries.; - `RFieldBase::RValue` should use shared pointers, not raw pointers; - There should be read support for projected fields to complete the skimming tutorial. Nevertheless, the PR is already rather large and it does seem to make sense to review it as is. ## Changes or fixes:. Changes to the following APIs: `RNTupleReader`, `RNTupleWriter`, `RNTupleModel`, `REntry`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs; - [ ] ping known users about the changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13604
https://github.com/root-project/root/issues/13605:1559,Deployability,UPDATE,UPDATEIFCOPY,1559,"', 100, 100, 180); obs_2.setBins(80). val_obs_1 = []; val_obs_2 = []; for i in range(obs_1.numBins()):; obs_1.setBin(i); val_obs_1.append(obs_1.getVal()); for i in range(obs_2.numBins()):; obs_2.setBin(i); val_obs_2.append(obs_2.getVal()) . # so that all combination of values are in the dataset; val_cart_product = np.array(list(itertools.product(val_obs_1, val_obs_2))); data = {; 'obs_1': val_cart_product[:, 0],; 'obs_2': val_cart_product[:, 1]; }. dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```. This gives (memory dependent):; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72. , 100.5, 72. , ..., 178.5, 128. , 179.5]),; 'obs_2': array([100.5, 72. , 101.5, ..., 128. , 179.5, 132. ])}; ```. The expected output should be; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This happens because the arrays `data['obs_1']` and `data['obs_2']` are not c-contiguous:; ```; >>> data['obs_1'].flags; C_CONTIGUOUS : False; F_CONTIGUOUS : False; OWNDATA : False; WRITEABLE : True; ALIGNED : True; WRITEBACKIFCOPY : False; UPDATEIFCOPY : False; ```. If we make the arrays c-contiguous, the resulting dataset is correct:; ```; for key, arr in data.items():; if not arr.flags.c_contiguous:; data[key] = np.ascontiguousarray(arr); dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```; this gives; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This issue arises because the copying of numpy data to std::vector assumes the numpy array to be c-contiguous:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L129-L132. ### ROOT version. ROOT 6.26/08+. ### Installation method. lxplus. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13605
https://github.com/root-project/root/issues/13605:2304,Deployability,Install,Installation,2304,"', 100, 100, 180); obs_2.setBins(80). val_obs_1 = []; val_obs_2 = []; for i in range(obs_1.numBins()):; obs_1.setBin(i); val_obs_1.append(obs_1.getVal()); for i in range(obs_2.numBins()):; obs_2.setBin(i); val_obs_2.append(obs_2.getVal()) . # so that all combination of values are in the dataset; val_cart_product = np.array(list(itertools.product(val_obs_1, val_obs_2))); data = {; 'obs_1': val_cart_product[:, 0],; 'obs_2': val_cart_product[:, 1]; }. dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```. This gives (memory dependent):; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72. , 100.5, 72. , ..., 178.5, 128. , 179.5]),; 'obs_2': array([100.5, 72. , 101.5, ..., 128. , 179.5, 132. ])}; ```. The expected output should be; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This happens because the arrays `data['obs_1']` and `data['obs_2']` are not c-contiguous:; ```; >>> data['obs_1'].flags; C_CONTIGUOUS : False; F_CONTIGUOUS : False; OWNDATA : False; WRITEABLE : True; ALIGNED : True; WRITEBACKIFCOPY : False; UPDATEIFCOPY : False; ```. If we make the arrays c-contiguous, the resulting dataset is correct:; ```; for key, arr in data.items():; if not arr.flags.c_contiguous:; data[key] = np.ascontiguousarray(arr); dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```; this gives; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This issue arises because the copying of numpy data to std::vector assumes the numpy array to be c-contiguous:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L129-L132. ### ROOT version. ROOT 6.26/08+. ### Installation method. lxplus. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13605
https://github.com/root-project/root/issues/13605:950,Integrability,depend,dependent,950,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the input numpy arrays to `RooDataSet.from_numpy` are not c-contiguous, then the resulting dataset will have messed up values. ### Reproducer. ```python; import itertools; import numpy as np. import ROOT. obs_1 = ROOT.RooRealVar('obs_1' , 'obs_1', 70, 70, 190); obs_1.setBins(30); obs_2 = ROOT.RooRealVar('obs_2' , 'obs_2', 100, 100, 180); obs_2.setBins(80). val_obs_1 = []; val_obs_2 = []; for i in range(obs_1.numBins()):; obs_1.setBin(i); val_obs_1.append(obs_1.getVal()); for i in range(obs_2.numBins()):; obs_2.setBin(i); val_obs_2.append(obs_2.getVal()) . # so that all combination of values are in the dataset; val_cart_product = np.array(list(itertools.product(val_obs_1, val_obs_2))); data = {; 'obs_1': val_cart_product[:, 0],; 'obs_2': val_cart_product[:, 1]; }. dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```. This gives (memory dependent):; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72. , 100.5, 72. , ..., 178.5, 128. , 179.5]),; 'obs_2': array([100.5, 72. , 101.5, ..., 128. , 179.5, 132. ])}; ```. The expected output should be; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This happens because the arrays `data['obs_1']` and `data['obs_2']` are not c-contiguous:; ```; >>> data['obs_1'].flags; C_CONTIGUOUS : False; F_CONTIGUOUS : False; OWNDATA : False; WRITEABLE : True; ALIGNED : True; WRITEBACKIFCOPY : False; UPDATEIFCOPY : False; ```. If we make the arrays c-contiguous, the resulting dataset is correct:; ```; for key, arr in data.items():; if not arr.flags.c_contiguous:; data[key] = np.ascontiguousarray(arr); dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```; this gives; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13605
https://github.com/root-project/root/pull/13606:231,Deployability,release,release,231,"In preparation for a future removal of Python 2 support, add the `pyroot-python2` cmake build option (OFF by default). Users who really need Python 2 support can still get it, but warn them that it will be removed in a future ROOT release. This leads to . ```; $: cmake -Dpyroot-python2=ON; [...]; CMake Warning at cmake/modules/SearchRootCoreDeps.cmake:153 (message):; Building ROOT with Python 2 support is deprecated. The support for Python 2; will be removed in ROOT version 6.32.; Call Stack (most recent call first):; CMakeLists.txt:169 (include); ```. ```; $: python -c ""import ROOT""; /home/vpadulan/Programs/rootproject/rootbuild/py2-cmake-test-conda-py2/lib/ROOT/__init__.py:36: DeprecationWarning: The support for Python 2 in ROOT is deprecated. It will be removed in ROOT version 6.32.; ""ROOT version 6.32."", category=DeprecationWarning); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13606
https://github.com/root-project/root/pull/13606:359,Integrability,message,message,359,"In preparation for a future removal of Python 2 support, add the `pyroot-python2` cmake build option (OFF by default). Users who really need Python 2 support can still get it, but warn them that it will be removed in a future ROOT release. This leads to . ```; $: cmake -Dpyroot-python2=ON; [...]; CMake Warning at cmake/modules/SearchRootCoreDeps.cmake:153 (message):; Building ROOT with Python 2 support is deprecated. The support for Python 2; will be removed in ROOT version 6.32.; Call Stack (most recent call first):; CMakeLists.txt:169 (include); ```. ```; $: python -c ""import ROOT""; /home/vpadulan/Programs/rootproject/rootbuild/py2-cmake-test-conda-py2/lib/ROOT/__init__.py:36: DeprecationWarning: The support for Python 2 in ROOT is deprecated. It will be removed in ROOT version 6.32.; ""ROOT version 6.32."", category=DeprecationWarning); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13606
https://github.com/root-project/root/pull/13606:648,Testability,test,test-conda-,648,"In preparation for a future removal of Python 2 support, add the `pyroot-python2` cmake build option (OFF by default). Users who really need Python 2 support can still get it, but warn them that it will be removed in a future ROOT release. This leads to . ```; $: cmake -Dpyroot-python2=ON; [...]; CMake Warning at cmake/modules/SearchRootCoreDeps.cmake:153 (message):; Building ROOT with Python 2 support is deprecated. The support for Python 2; will be removed in ROOT version 6.32.; Call Stack (most recent call first):; CMakeLists.txt:169 (include); ```. ```; $: python -c ""import ROOT""; /home/vpadulan/Programs/rootproject/rootbuild/py2-cmake-test-conda-py2/lib/ROOT/__init__.py:36: DeprecationWarning: The support for Python 2 in ROOT is deprecated. It will be removed in ROOT version 6.32.; ""ROOT version 6.32."", category=DeprecationWarning); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13606
https://github.com/root-project/root/issues/13607:270,Energy Efficiency,monitor,monitoring,270,"### Feature description. Introduce a ""live visualization"" feature to enable real-time representation of intermediate results in distributed ROOT computations. The idea is to provide the users with a feature that allows visualizing intermediate results, facilitating the monitoring and debugging of complex distributed analysis workflows. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13607
https://github.com/root-project/root/pull/13608:22,Availability,toler,tolerance,22,"This PR increases the tolerance for SOFIE-GNN testing. Due to different floating representations in Python frameworks and C++ implementations, it will be better to have a tolerance of 10^-5 and not 10^-7 which was the default previously.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13608
https://github.com/root-project/root/pull/13608:171,Availability,toler,tolerance,171,"This PR increases the tolerance for SOFIE-GNN testing. Due to different floating representations in Python frameworks and C++ implementations, it will be better to have a tolerance of 10^-5 and not 10^-7 which was the default previously.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13608
https://github.com/root-project/root/pull/13608:46,Testability,test,testing,46,"This PR increases the tolerance for SOFIE-GNN testing. Due to different floating representations in Python frameworks and C++ implementations, it will be better to have a tolerance of 10^-5 and not 10^-7 which was the default previously.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13608
https://github.com/root-project/root/issues/13611:1034,Availability,avail,available,1034,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Iterating over a Python list containing PyROOT proxies seems to mess up something, causing subsequent crashes when using the elements. ### Reproducer. The problem can be reproduced with some Python code inspired by this forum post, where the problem was originally reported:; https://root-forum.cern.ch/t/memory-leak-in-fits/56249/4. ```python; import ROOT as r. x = r.RooRealVar(""x"", ""x"", 0, 10); gm = r.RooRealVar(""gm"", ""gm"", 5, 0, 10); pdf = r.RooGaussian(""g"", ""g"", x, gm, r.RooFit.RooConst(1)); data = pdf.generate({x}, 1000). commands = [; r.RooFit.PrintLevel(-1),; r.RooFit.Save(),; ]. # Iterating over the python list will break the code. Uncomment it and things; # will work. Say whaat?; for x in commands:; pass. cmdList = r.RooLinkedList(). for i in range(len(commands)):; commands[i].Print(); cmdList.Add(commands[i]). # To get a more direct reproducer, we're not calling the pythonized version of; # fitTo(), but the original cppyy method that is available as _fitTo():; pdf._fitTo(data, cmdList); ```. ### ROOT version. `master`. ### Installation method. Building from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/memory-leak-in-fits/56249",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13611
https://github.com/root-project/root/issues/13611:1122,Deployability,Install,Installation,1122,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Iterating over a Python list containing PyROOT proxies seems to mess up something, causing subsequent crashes when using the elements. ### Reproducer. The problem can be reproduced with some Python code inspired by this forum post, where the problem was originally reported:; https://root-forum.cern.ch/t/memory-leak-in-fits/56249/4. ```python; import ROOT as r. x = r.RooRealVar(""x"", ""x"", 0, 10); gm = r.RooRealVar(""gm"", ""gm"", 5, 0, 10); pdf = r.RooGaussian(""g"", ""g"", x, gm, r.RooFit.RooConst(1)); data = pdf.generate({x}, 1000). commands = [; r.RooFit.PrintLevel(-1),; r.RooFit.Save(),; ]. # Iterating over the python list will break the code. Uncomment it and things; # will work. Say whaat?; for x in commands:; pass. cmdList = r.RooLinkedList(). for i in range(len(commands)):; commands[i].Print(); cmdList.Add(commands[i]). # To get a more direct reproducer, we're not calling the pythonized version of; # fitTo(), but the original cppyy method that is available as _fitTo():; pdf._fitTo(data, cmdList); ```. ### ROOT version. `master`. ### Installation method. Building from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/memory-leak-in-fits/56249",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13611
https://github.com/root-project/root/pull/13612:241,Safety,avoid,avoiding,241,"The `n_in_range` reference value in the unit test; `roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range` apparently doesn't get computed right on some 32 platforms. I can't reproduce the problem, but I'm sure it will be fixed by avoiding the use of the operators `&` and `|` with numpy arrays. Just doing a manual loop in Python should be more platform independent. Closes #12162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13612
https://github.com/root-project/root/pull/13612:45,Testability,test,test,45,"The `n_in_range` reference value in the unit test; `roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range` apparently doesn't get computed right on some 32 platforms. I can't reproduce the problem, but I'm sure it will be fixed by avoiding the use of the operators `&` and `|` with numpy arrays. Just doing a manual loop in Python should be more platform independent. Closes #12162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13612
https://github.com/root-project/root/pull/13612:69,Testability,Test,TestRooDataSetNumpy,69,"The `n_in_range` reference value in the unit test; `roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range` apparently doesn't get computed right on some 32 platforms. I can't reproduce the problem, but I'm sure it will be fixed by avoiding the use of the operators `&` and `|` with numpy arrays. Just doing a manual loop in Python should be more platform independent. Closes #12162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13612
https://github.com/root-project/root/pull/13614:204,Testability,test,tests,204,"Otherwise they are emitted as internal and we get double-construction and -destruction on the same memory address due to the way we promote internal declarations in KeepLocalGVPass. According to upstream tests, the de-duplication doesn't work on Windows (yet), but I think this problem is severe enough to fix it on the other platforms sooner rather than later. Fixes #13429",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13614
https://github.com/root-project/root/pull/13617:54,Availability,error,errors,54,"The `report` attribute is not present in all types of errors, as seen in e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13617
https://github.com/root-project/root/pull/13617:158,Testability,test,testReport,158,"The `report` attribute is not present in all types of errors, as seen in e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13617
https://github.com/root-project/root/pull/13617:212,Testability,test,test,212,"The `report` attribute is not present in all types of errors, as seen in e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13617
https://github.com/root-project/root/pull/13618:430,Deployability,update,updated,430,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13618
https://github.com/root-project/root/pull/13618:400,Testability,test,tested,400,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13618
https://github.com/root-project/root/pull/13618:482,Testability,test,test,482,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13618
https://github.com/root-project/root/pull/13619:25,Availability,avail,available,25,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:329,Availability,mainten,maintenance,329,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:246,Deployability,update,updated,246,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:309,Energy Efficiency,reduce,reduces,309,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:216,Testability,test,tested,216,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:92,Usability,simpl,simplified,92,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13619:370,Usability,simpl,simplifying,370,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13619
https://github.com/root-project/root/pull/13620:41,Availability,reliab,reliable,41,"This makes releasing waaay simpler, more reliable, and possibly at some point convertible to a Github action?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13620
https://github.com/root-project/root/pull/13620:27,Usability,simpl,simpler,27,"This makes releasing waaay simpler, more reliable, and possibly at some point convertible to a Github action?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13620
https://github.com/root-project/root/pull/13621:329,Deployability,update,updated,329,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:0,Energy Efficiency,Reduce,Reduce,0,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:213,Energy Efficiency,battery,battery,213,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:97,Performance,optimiz,optimizing,97,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:27,Testability,test,tests,27,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:229,Testability,test,tests,229,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13621:299,Testability,test,tested,299,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13621
https://github.com/root-project/root/pull/13622:19,Testability,test,tests,19,"#13592 broke a few tests in TMVA, visible in that same PR and in all other recent CI builds, e.g. https://github.com/root-project/root/pull/13571. This PR reverts those commits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13622
https://github.com/root-project/root/pull/13624:3,Energy Efficiency,Reduce,Reduce,3,"1. Reduce code duplication; 2. Support expressions with complex numbers, as generated by `sympy` for example; 3. Use `std::string` instead of C-style strings; 4. Don't recompile when requesting the same class instance twice (to better support jupyter notebook workflows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13624
https://github.com/root-project/root/pull/13626:111,Deployability,Update,Update,111,"When producing single image for the canvas - do not add ""%d"" qualifier,; which is required for multiple files. Update JSROOT with minor fixes in interactive functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13626
https://github.com/root-project/root/pull/13627:664,Deployability,update,updated,664,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13627
https://github.com/root-project/root/pull/13627:483,Modifiability,variab,variables,483,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13627
https://github.com/root-project/root/pull/13627:397,Testability,log,lognormal,397,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13627
https://github.com/root-project/root/pull/13627:634,Testability,test,tested,634,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13627
https://github.com/root-project/root/pull/13628:412,Energy Efficiency,reduce,reduce,412,"The number of thread blocks in kernel calls should not be excessively large, it's sufficient if it's in the order of the number of streaming multiprocessors. In particular, this circumvents a problem with the NLL reduction kernels with grid sizes larger than 512. With this change, there are potentially less threads than events when summing likelihoods, so in the NLL reduction kernels, each thread also has to reduce a few elements in a loop. Closes #13603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13628
https://github.com/root-project/root/pull/13629:723,Testability,test,tests,723,"There are different overloads of `RooFit::Import()` for importing different object types to RooFit dataset classes. However, they return a `RooCmdArg` that is named after the type of the imported object. That causes some inconsistencies. For example, if you import a map of `std::unique_ptr<RooDataHist>`, the name will be different than for `RooDataHist*` because there is a special overload for the latter. It is better to fixup this inconsistency, and then disentangle the different types in the functions that consume these `RooFit::Import()` command arguments. This caused some trouble when importing RooDataHists into a combined dataset, which is why this fix is coming now. These changes are covered by the tutorial tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13629
https://github.com/root-project/root/pull/13630:447,Performance,concurren,concurrently,447,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/pull/13630:474,Safety,timeout,timeout,474,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/pull/13630:655,Safety,timeout,timeout,655,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/pull/13630:696,Safety,timeout,timeout,696,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/pull/13630:287,Usability,simpl,simply,287,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/pull/13630:394,Usability,simpl,simply,394,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13630
https://github.com/root-project/root/issues/13631:100,Deployability,update,update,100,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:184,Deployability,continuous,continuously,184,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:267,Deployability,Install,Installation,267,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:706,Deployability,Update,Update,706,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:761,Deployability,continuous,continuously,761,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:774,Deployability,update,update,774,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:902,Deployability,update,update,902,"### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```; if __name__ == ""__main__"":. connection = create_connection(); num_entries = 1000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=5); dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]); ; c = ROOT.TCanvas(); c.Draw(); h.Draw(); c.Update(); ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13632:176,Availability,fault,fault,176,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```; import ROOT. d = ROOT.RDataFrame(1000000); dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; graph = dd.Graph(""x"", ""y""); ; c = ROOT.TCanvas(). graph.Sort(); graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:504,Deployability,Install,Installation,504,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```; import ROOT. d = ROOT.RDataFrame(1000000); dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; graph = dd.Graph(""x"", ""y""); ; c = ROOT.TCanvas(). graph.Sort(); graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/pull/13633:349,Availability,recover,recovering,349,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:423,Deployability,update,updated,423,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:349,Safety,recover,recovering,349,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:18,Testability,test,tests,18,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:84,Testability,test,testing,84,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:335,Testability,test,test,335,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:365,Testability,test,tests,365,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:393,Testability,test,tested,393,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13634:82,Deployability,update,update,82,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:167,Safety,predict,prediction,167,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:305,Safety,avoid,avoided,305,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:234,Testability,test,tests,234,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:55,Usability,learn,learn,55,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:115,Usability,learn,learn,115,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13635:122,Availability,fault,fault,122,"# This Pull request:. ## Changes or fixes:; Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:; ```; BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds; ```; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13632",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:393,Deployability,update,updated,393,"# This Pull request:. ## Changes or fixes:; Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:; ```; BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds; ```; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13632",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:101,Safety,avoid,avoid,101,"# This Pull request:. ## Changes or fixes:; Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:; ```; BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds; ```; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13632",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:363,Testability,test,tested,363,"# This Pull request:. ## Changes or fixes:; Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:; ```; BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds; ```; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13632",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13636:172,Testability,test,testReport,172,"This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:201,Testability,test,test,201,"This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13637:40,Availability,error,error,40,"Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:; https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:46,Integrability,message,message,46,"Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:; https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13638:253,Availability,error,error,253,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:226,Deployability,release,release,226,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:259,Integrability,message,message,259,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:65,Modifiability,extend,extended,65,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:94,Modifiability,extend,extended,94,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:307,Modifiability,extend,extended,307,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:342,Modifiability,extend,extended,342,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13639:73,Performance,cache,cacheArgs,73,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:252,Performance,cache,caches,252,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:475,Safety,safe,safer,475,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:383,Testability,test,test,383,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13640:34,Deployability,update,update,34,Fix axis labels tilt; Fix THStack update; Support drawing HIST and E1 for TH1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13644:47,Deployability,Update,Update,47,"1. Add flag in TCanvas/RCanvas which set when `Update()` method is called.; 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated; 3. Use iPython display handle to update drawing; 4. Works with JSROOT and png-based drawings; 5. Use latest released JSROOT version 7.4.3; 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:140,Deployability,update,updated,140,"1. Add flag in TCanvas/RCanvas which set when `Update()` method is called.; 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated; 3. Use iPython display handle to update drawing; 4. Works with JSROOT and png-based drawings; 5. Use latest released JSROOT version 7.4.3; 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:182,Deployability,update,update,182,"1. Add flag in TCanvas/RCanvas which set when `Update()` method is called.; 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated; 3. Use iPython display handle to update drawing; 4. Works with JSROOT and png-based drawings; 5. Use latest released JSROOT version 7.4.3; 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:257,Deployability,release,released,257,"1. Add flag in TCanvas/RCanvas which set when `Update()` method is called.; 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated; 3. Use iPython display handle to update drawing; 4. Works with JSROOT and png-based drawings; 5. Use latest released JSROOT version 7.4.3; 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13645:130,Deployability,release,release,130,Use GetCanvasWidth()/GetCanvasHeight() for obtain proper dimension . Do not swap width/height arguments. Use correspondent JSROOT release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13645
https://github.com/root-project/root/pull/13646:10,Availability,Error,Error,10,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:137,Availability,Error,Error,137,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:576,Availability,Error,Error,576,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:648,Availability,Error,Error,648,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:172,Integrability,depend,depending,172,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:673,Integrability,depend,dependency,673,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:838,Safety,avoid,avoided,838,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/issues/14103:4,Deployability,release,release,4,The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename?. Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M; -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:38,Deployability,release,releases,38,The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename?. Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M; -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:47,Deployability,release,release-,47,The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename?. Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M; -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/pull/13647:119,Deployability,update,updated,119,# This Pull request:. ## Changes or fixes:; It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally; - [v] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13647:89,Testability,test,tested,89,# This Pull request:. ## Changes or fixes:; It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally; - [v] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13648:1143,Deployability,update,updated,1143,"# This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes); ; ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #13623",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1113,Testability,test,tested,1113,"# This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes); ; ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #13623",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13649:216,Deployability,update,updated,216,which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13649:186,Testability,test,tested,186,which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13651:876,Availability,error,errors,876,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:839,Energy Efficiency,reduce,reduce,839,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:491,Safety,Avoid,Avoid,491,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:357,Testability,log,logic,357,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:458,Testability,test,test,458,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13652:229,Deployability,update,updated,229,"# This Pull request:. ## Changes or fixes:; This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:199,Testability,test,tested,199,"# This Pull request:. ## Changes or fixes:; This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13654:0,Testability,Test,Test,0,Test just to make sure...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13654
https://github.com/root-project/root/issues/13656:376,Availability,error,error,376,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1471,Availability,error,error,1471,"assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' request",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3236,Availability,error,error,3236," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6; ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:205,Deployability,Install,Install,205,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:232,Deployability,Install,Install,232,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:240,Deployability,configurat,configuration,240,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3680,Deployability,Install,Installation,3680," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6; ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:350,Integrability,Interface,InterfaceUtils,350,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:701,Integrability,Interface,InterfaceUtils,701,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2383,Integrability,Interface,InterfaceUtils,2383,"r<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:240,Modifiability,config,configuration,240,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3457,Safety,Abort,Abort,3457," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6; ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/pull/13657:7,Integrability,interface,interface,7,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:169,Testability,benchmark,benchmark,169,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:264,Testability,test,test,264,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:246,Usability,simpl,simple,246,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13660:28,Availability,failure,failures,28,This should fix some of the failures observed for builds without rdataframe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13661:174,Energy Efficiency,adapt,adapted,174,"Most people prefer Minuit2 nowadays, especially RooFit users, as some of; the more complicated fits don't converge with the old Minuit; implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:174,Modifiability,adapt,adapted,174,"Most people prefer Minuit2 nowadays, especially RooFit users, as some of; the more complicated fits don't converge with the old Minuit; implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:164,Testability,test,tests,164,"Most people prefer Minuit2 nowadays, especially RooFit users, as some of; the more complicated fits don't converge with the old Minuit; implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13662:8,Energy Efficiency,reduce,reduce,8,Further reduce code duplication of the NLL and chi-square minimization paths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13662
https://github.com/root-project/root/pull/13663:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13664:382,Deployability,update,updated,382,"# This Pull request:. ## Changes or fixes:; These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/dpiparo/root/pull/new/issue_13543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:270,Testability,Test,Test,270,"# This Pull request:. ## Changes or fixes:; These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/dpiparo/root/pull/new/issue_13543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:352,Testability,test,tested,352,"# This Pull request:. ## Changes or fixes:; These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/dpiparo/root/pull/new/issue_13543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13665:332,Security,validat,validated,332,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:110,Testability,test,tests,110,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:449,Usability,simpl,simple,449,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13666:61,Deployability,update,update,61,"Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/pull/13666:92,Deployability,release,release,92,"Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/issues/13667:10589,Deployability,Install,Installation,10589,"ng::Value*) const (IncrementalExecutor.cpp:217); ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167); ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419); ==1848772== by 0x684A076: operator() (MetaSema.cpp:141); ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158); ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320); ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119); ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317); ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436); ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580); ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540); ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865); ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820); ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461); ==1848772== by 0x1091CE: main (rmain.cxx:84); ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/pull/13668:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13669:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13670:36,Deployability,Update,UpdateAsync,36,Instead direct call of Paint() call UpdateAsync(); Prevent Paint() when calling TCanvas::SetGrayscale,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/issues/13672:1729,Deployability,Install,Installation,1729,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```; # c++ code; # {; # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);; # Double_t px, py, pz, pt;; # TRandom3 r(0);; # for ( Int_t i=0; i<25000; i++) {; # r.Rannor(px,py);; # pz = px*px + py*py;; # pt = r.Landau(0,1);; # hprof3d->Fill(px,py,pz,pt,1);; # }; # hprof3d->Draw();; # c1->Draw();; # }. # pyroot code; import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500); hpro3d = TProfile3D(; ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20; ); px_ref, py_ref = ctypes.c_double(), ctypes.c_double(); r = TRandom3(0); for i in range(2500):; r.Rannor(px_ref, py_ref); px = px_ref.value; py = py_ref.value; pz = px * px + py * py; pt = r.Landau(0, 1); hpro3d.Fill(pz, py, pz, pt, 1); hpro3d.Draw(); c1.Draw(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13675:317,Availability,error,error,317,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1005,Availability,error,error,1005,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1023,Availability,echo,echo,1023,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1505,Deployability,Install,Installation,1505,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:201,Energy Efficiency,green,greenc,201,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:178,Integrability,message,message,178,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:270,Testability,test,test,270,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:699,Usability,simpl,simple,699,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13677:1068,Deployability,Install,Installation,1068,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`); ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return 1 + ROOT::RVecF({-.2,.2});; }. ```; The commands at the prompt:; ```; root [0] .L unloadingIssue.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so; root [1] .! touch unloadingIssue.C; root [2] .x unloadingIssue.C ; Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499.; ```. Note that if the macro is changed to; ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return ROOT::RVecF({-1.2,1.2});; }. ```; The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:159,Testability,test,test,159,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`); ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return 1 + ROOT::RVecF({-.2,.2});; }. ```; The commands at the prompt:; ```; root [0] .L unloadingIssue.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so; root [1] .! touch unloadingIssue.C; root [2] .x unloadingIssue.C ; Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499.; ```. Note that if the macro is changed to; ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return ROOT::RVecF({-1.2,1.2});; }. ```; The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:641,Testability,Assert,Assertion,641,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`); ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return 1 + ROOT::RVecF({-.2,.2});; }. ```; The commands at the prompt:; ```; root [0] .L unloadingIssue.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so; root [1] .! touch unloadingIssue.C; root [2] .x unloadingIssue.C ; Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499.; ```. Note that if the macro is changed to; ```.cpp; #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(); {; return ROOT::RVecF({-1.2,1.2});; }. ```; The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13678:739,Deployability,Install,Installation,739,"<img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/pull/13680:151,Deployability,update,updated,151,# This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:121,Testability,test,tested,121,# This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13683:111,Modifiability,config,config,111,They are GPLed (unlike the rest); our build has; `#undef ENABLE_RELOCATABLE` in `graf2d/win32gdk/gdk/src/iconv/config.h`. gcompat.h is not included anywhere. So there is just no reason to keep these.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13683
https://github.com/root-project/root/pull/13685:102,Deployability,update,updated,102,…ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:72,Testability,test,tested,72,…ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13686:226,Deployability,update,updated,226,The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:196,Testability,test,tested,196,The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13687:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/issues/13689:830,Availability,failure,failure,830,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1326,Deployability,Install,Installation,1326,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:82,Usability,simpl,simple,82,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13690:768,Deployability,Install,Installation,768,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python; import numpy as np; import ROOT. table = np.array([[1, 2], [3, 4]]); columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns); df.Display().Print(); ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```; +-----+---+---+; | Row | x | y |; +-----+---+---+; | 0 | 1 | 2 |; +-----+---+---+; | 1 | 2 | 3 |; +-----+---+---+; ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13691:6429,Deployability,Install,Installation,6429,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104; #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390; #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472; #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99; #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202; #35 0x0000000000401184 in main () at repro.cpp:5; ```. ### Reproducer. Given the following reproducer. ```cpp; #include <TDirectoryFile.h>. int main(){; TDirectoryFile f(""f"", ""f"");; }; ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6282,Modifiability,config,config,6282,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104; #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390; #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472; #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99; #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202; #35 0x0000000000401184 in main () at repro.cpp:5; ```. ### Reproducer. Given the following reproducer. ```cpp; #include <TDirectoryFile.h>. int main(){; TDirectoryFile f(""f"", ""f"");; }; ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1476,Performance,optimiz,optimized,1476,".cxx#L1203). Here is the full stacktrace after the segfault:. ```; #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203; #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470; #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400; #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163; #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68; #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243; #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205; #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502; #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1721,Performance,optimiz,optimized,1721,"#9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470; #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400; #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163; #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68; #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243; #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205; #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502; #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373; #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124; #20 0x00007f770e619785 in TObject::CheckedHa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4237,Performance,Load,LoadPCM,4237,"007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645; #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686; #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380; #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114; #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850; #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5757,Performance,optimiz,optimized,5757,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104; #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390; #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472; #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99; #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202; #35 0x0000000000401184 in main () at repro.cpp:5; ```. ### Reproducer. Given the following reproducer. ```cpp; #include <TDirectoryFile.h>. int main(){; TDirectoryFile f(""f"", ""f"");; }; ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5944,Performance,optimiz,optimized,5944,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104; #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390; #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472; #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99; #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202; #35 0x0000000000401184 in main () at repro.cpp:5; ```. ### Reproducer. Given the following reproducer. ```cpp; #include <TDirectoryFile.h>. int main(){; TDirectoryFile f(""f"", ""f"");; }; ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/pull/13692:61,Testability,log,logic,61,"This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/issues/13693:652,Deployability,Install,Installation,652,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis; - Different size for the text items below the x axis; - Different legend label sizes; - Different line width for the red line at `y=1`; - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13694:165,Availability,error,errors,165,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. with stack trace. ```; #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6; #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6; #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6; #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6; #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6; #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210; #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers; entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2949,Deployability,patch,patches,2949,"8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3987,Deployability,Install,Installation,3987,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2117,Performance,optimiz,optimized,2117," Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2139,Performance,optimiz,optimized,2139," Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2216,Performance,optimiz,optimized,2216,"d5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2238,Performance,optimiz,optimized,2238,"d5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:685,Safety,abort,abort,685,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. with stack trace. ```; #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6; #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6; #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6; #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6; #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6; #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210; #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers; entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:155,Testability,assert,assertion,155,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. with stack trace. ```; #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6; #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6; #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6; #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6; #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6; #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210; #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers; entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:470,Testability,test,test,470,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. with stack trace. ```; #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6; #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6; #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6; #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6; #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6; #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210; #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers; entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2364,Testability,assert,assertion,2364,"tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dicto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2446,Testability,assert,assert,2446,"baea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3745,Testability,test,test,3745,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/pull/13696:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/pull/13696:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/issues/13697:899,Availability,avail,available,899,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:; ```c++; void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");; TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");; const double prob = h1->KolmogorovTest(h2);; std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";; }; ```; with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins?. ### ROOT version. ROOT Version: 6.28/04; Built for linuxx8664gcc on Jul 10 2023, 18:22:00; From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1220,Deployability,Install,Installation,1220,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:; ```c++; void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");; TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");; const double prob = h1->KolmogorovTest(h2);; std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";; }; ```; with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins?. ### ROOT version. ROOT Version: 6.28/04; Built for linuxx8664gcc on Jul 10 2023, 18:22:00; From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:241,Testability,test,test,241,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:; ```c++; void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");; TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");; const double prob = h1->KolmogorovTest(h2);; std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";; }; ```; with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins?. ### ROOT version. ROOT Version: 6.28/04; Built for linuxx8664gcc on Jul 10 2023, 18:22:00; From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13698:213,Availability,error,error,213,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation; using iterator_category = decltype(__get_iterator_category());; ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:388,Availability,error,error,388,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation; using iterator_category = decltype(__get_iterator_category());; ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:702,Deployability,Install,Installation,702,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation; using iterator_category = decltype(__get_iterator_category());; ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/pull/13699:167,Modifiability,extend,extended,167,"This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```; root [1] inspector->PrintColumnTypeInfo(); column type | count | # elements | bytes on disk | bytes in memory; ----------------|---------|-----------------|-----------------|-----------------; SplitIndex64 | 2 | 150 | 72 | 1200 ; SplitReal32 | 4 | 300 | 189 | 1200 ; SplitUInt32 | 3 | 225 | 123 | 900 ; ```. And the CSV-formatted output:. ```; root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV); columnType,count,nElements,onDiskSize,inMemSize; SplitIndex64,2,150,72,1200; SplitReal32,4,300,189,1200; SplitUInt32,3,225,123,900; ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:392,Testability,test,test,392,"This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```; root [1] inspector->PrintColumnTypeInfo(); column type | count | # elements | bytes on disk | bytes in memory; ----------------|---------|-----------------|-----------------|-----------------; SplitIndex64 | 2 | 150 | 72 | 1200 ; SplitReal32 | 4 | 300 | 189 | 1200 ; SplitUInt32 | 3 | 225 | 123 | 900 ; ```. And the CSV-formatted output:. ```; root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV); columnType,count,nElements,onDiskSize,inMemSize; SplitIndex64,2,150,72,1200; SplitReal32,4,300,189,1200; SplitUInt32,3,225,123,900; ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13700:439,Availability,error,errored,439,"We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```; template<typename T>; class Bar {; consteval static T x() { return 5; }; public:; Bar() : a(x()) {}. private:; int a;; };. Bar<int> g();; ```; Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:30,Integrability,depend,dependent,30,"We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```; template<typename T>; class Bar {; consteval static T x() { return 5; }; public:; Bar() : a(x()) {}. private:; int a;; };. Bar<int> g();; ```; Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13701:185,Integrability,depend,dependency,185,"Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:; https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:579,Integrability,depend,dependencies,579,"Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:; https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13704:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13705:159,Deployability,update,updated,159,# This Pull request:; Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:63,Safety,avoid,avoid,63,# This Pull request:; Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:129,Testability,test,tested,129,# This Pull request:; Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/issues/13707:265,Availability,error,error,265,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats; - Different ticks and label frequency in the left side y axis; - Different error bar width. 2: size-overview; - Difference in `TPaveText` background (flat color vs shadow); - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram); - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling; - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip); [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip); [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1006,Deployability,Install,Installation,1006,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats; - Different ticks and label frequency in the left side y axis; - Different error bar width. 2: size-overview; - Difference in `TPaveText` background (flat color vs shadow); - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram); - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling; - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip); [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip); [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:170,Performance,throughput,throughput-formats,170,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats; - Different ticks and label frequency in the left side y axis; - Different error bar width. 2: size-overview; - Difference in `TPaveText` background (flat color vs shadow); - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram); - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling; - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip); [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip); [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13708:297,Deployability,Install,Install,297,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:324,Deployability,Install,Install,324,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:332,Deployability,configurat,configuration,332,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:359,Deployability,Install,Installing,359,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:419,Deployability,Install,Installing,419,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2088,Deployability,Install,Installation,2088,"pening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->ProcessEvents();. return 0;; }; ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:332,Modifiability,config,configuration,332,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1638,Testability,test,tests,1638,"pening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->ProcessEvents();. return 0;; }; ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13709:1380,Deployability,Install,Installation,1380,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:664,Integrability,depend,depending,664,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:465,Testability,test,test,465,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:187,Usability,simpl,simplicity,187,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:216,Usability,clear,clear,216,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/pull/13710:212,Deployability,update,updated,212,"# This Pull request:; Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:182,Testability,test,tested,182,"# This Pull request:; Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13711:44,Availability,Failure,Failure,44,# This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:55,Deployability,install,install,55,# This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:197,Deployability,update,updated,197,# This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:167,Testability,test,tested,167,# This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13712:238,Availability,error,errors,238,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:319,Deployability,update,updated,319,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:90,Safety,Avoid,Avoids,90,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:62,Testability,test,test,62,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:289,Testability,test,tested,289,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/issues/13713:281,Availability,error,errors,281,"### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more.; On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors.; For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:598,Deployability,Install,Installation,598,"### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more.; On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors.; For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:531,Integrability,depend,dependency,531,"### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more.; On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors.; For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/pull/13714:10,Deployability,install,installed,10,The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:89,Deployability,install,install,89,The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:73,Modifiability,config,configure,73,The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13715:592,Deployability,update,updated,592,"This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:562,Testability,test,tested,562,"This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13716:135,Deployability,update,updated,135,"as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13716:105,Testability,test,tested,105,"as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13717:80,Deployability,update,updates,80,Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13718:20,Integrability,depend,dependency,20,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:71,Integrability,depend,dependency,71,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:161,Performance,load,loading,161,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:105,Testability,test,test,105,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/issues/13719:508,Deployability,Install,Installation,508,### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly.; The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:113,Usability,clear,clearly,113,### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly.; The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/pull/13720:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13720:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13722:383,Deployability,update,updated,383,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:11,Energy Efficiency,adapt,adaptation,11,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:11,Modifiability,adapt,adaptation,11,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:353,Testability,test,tested,353,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13724:483,Deployability,update,updated,483,"This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:453,Testability,test,tested,453,"This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13726:630,Deployability,update,updated,630,"This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:600,Testability,test,tested,600,"This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13727:300,Deployability,patch,patches,300,"Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360; * https://github.com/root-project/root/pull/13082. The warnings can be seen here:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/issues/13731:187,Availability,Error,Error,187,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:574,Availability,error,error,574,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:744,Deployability,Install,Installation,744,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:580,Integrability,message,messages,580,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:602,Safety,detect,detect,602,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:589,Usability,clear,clearer,589,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:633,Usability,clear,clearly,633,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/pull/13732:33,Deployability,install,installing,33,"# This Pull request:. The commit installing the root help.el file was cherry-picked to 6.28, but not the commit that removed it. ## Changes or fixes:. Cherry-pick the remoining 2 commits for the removal of the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13732
https://github.com/root-project/root/issues/13734:272,Availability,echo,echo,272,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:489,Availability,echo,echo,489,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1076,Availability,error,error,1076,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1565,Deployability,Install,Installation,1565,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1082,Integrability,message,message,1082,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:636,Modifiability,config,config,636,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:663,Modifiability,config,config,663,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:690,Modifiability,config,config,690,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:147,Performance,load,load,147,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:179,Performance,Load,Load,179,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:195,Performance,load,loading,195,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:423,Performance,Load,Load,423,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:573,Performance,Load,Load,573,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:828,Performance,Load,Load,828,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:852,Performance,load,loading,852,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:922,Performance,Load,Load,922,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:958,Performance,Load,Load,958,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1007,Performance,load,loading,1007,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1130,Performance,load,loadLibrary,1130,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1290,Performance,load,loaded,1290,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1695,Testability,test,tests,1695,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/pull/13736:134,Performance,load,load,134,[graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13736
https://github.com/root-project/root/pull/13737:206,Availability,error,errors,206,"The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:112,Modifiability,config,config,112,"The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:235,Performance,load,loading,235,"The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13738:350,Deployability,update,updated,350,"# This Pull request:; The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13690",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:320,Testability,test,tested,320,"# This Pull request:; The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13690",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13739:440,Deployability,update,updated,440,"# This Pull request:; This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:410,Testability,test,tested,410,"# This Pull request:; This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:70,Usability,feedback,feedback,70,"# This Pull request:; This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13740:94,Deployability,update,updates,94,1. Properly redirect context menu commands to histogram Z axis; 2. When moving palette - send updates back to the server; 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13741:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13742:79,Availability,failure,failures,79,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:100,Availability,FAILURE,FAILURES,100,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:20,Testability,test,tests,20,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:74,Testability,test,test,74,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:95,Testability,TEST,TEST,95,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13743:204,Deployability,update,updated,204,# This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:174,Testability,test,tested,174,# This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:35,Usability,simpl,simple,35,# This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/issues/13744:226,Deployability,Update,Update,226,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS; ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:509,Deployability,Update,Update,509,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS; ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:563,Deployability,Install,Installation,563,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS; ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```; import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4); h.FillRandom(""gaus""); c=ROOT.TCanvas(); h.Draw(); c.Update(). input(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13747:1641,Deployability,Install,Installation,1641,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics.; It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set.; From one side, python correctly report value of `gPad.GetName()`.; From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. ; It invokes per timer - which does nothing in the example.; But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```; def _process_root_events(self):; print(""Special thread is started"", TThread.SelfId()); gPad = self.gpad_copy; while self.keep_polling:; gSystem.ProcessEvents(); time.sleep(0.01); ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""); # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995); title.AddText(""Example of gPad problem""). if gPad:; print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()); else:; print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```; [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/pull/13748:377,Availability,error,error,377,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:403,Availability,failure,failure,403,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:519,Availability,error,errors,519,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:656,Availability,error,error,656,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:383,Integrability,message,messages,383,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:662,Integrability,message,messages,662,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:253,Testability,test,tested,253,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:686,Testability,log,logs,686,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/issues/13749:341,Availability,error,error,341,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:685,Availability,error,error,685,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:719,Deployability,Install,Installation,719,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:476,Integrability,message,message,476,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:187,Modifiability,Flexible,FlexibleInterpVar,187,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:132,Usability,simpl,simple,132,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/pull/13750:112,Deployability,configurat,configuration,112,"With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:; https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:112,Modifiability,config,configuration,112,"With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:; https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13751:419,Testability,test,test,419,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:424,Testability,test,test,424,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:283,Usability,Simpl,Simple,283,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:625,Usability,clear,clear,625,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13754:274,Deployability,update,updated,274,"This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:244,Testability,test,tested,244,"This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13755:508,Deployability,update,updated,508,"ninja rightfully said:; ```; ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist; ninja explain: core/newdelete/move_header_core_newdelete is dirty; ninja explain: move_headers is dirty; ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:478,Testability,test,tested,478,"ninja rightfully said:; ```; ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist; ninja explain: core/newdelete/move_header_core_newdelete is dirty; ninja explain: move_headers is dirty; ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13756:27,Deployability,update,updates,27,# This Pull request:; Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:168,Deployability,update,updated,168,# This Pull request:; Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:138,Testability,test,tested,138,# This Pull request:; Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13757:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13758:60,Deployability,Update,Update,60,Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:5,Energy Efficiency,reduce,reduce,5,Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:12,Testability,log,log,12,Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13759:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13759:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13760:105,Integrability,interface,interface,105,On Mac it is not working from python - let do it from C++ . Define special method and call it via pyroot interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13760
https://github.com/root-project/root/pull/13761:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13761:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13762:168,Deployability,update,updated,168,"Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:29,Testability,test,testing,29,"Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:138,Testability,test,tested,138,"Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13763:148,Deployability,update,updated,148,of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:118,Testability,test,tested,118,of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13764:568,Deployability,update,updated,568,"These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```; core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; extern char *getenv ();; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:538,Testability,test,tested,538,"These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```; core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; extern char *getenv ();; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13765:255,Deployability,update,updated,255,# This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:31,Testability,test,test,31,# This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:225,Testability,test,tested,225,# This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13768:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/issues/13769:305,Deployability,Install,Installation,305,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program.; All tests in the CI are failing because of this. ### Reproducer. ```python; import ROOT; ROOT.TH1F(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:105,Security,access,accessing,105,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program.; All tests in the CI are failing because of this. ### Reproducer. ```python; import ROOT; ROOT.TH1F(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:172,Testability,test,tests,172,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program.; All tests in the CI are failing because of this. ### Reproducer. ```python; import ROOT; ROOT.TH1F(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13770:447,Deployability,Install,Installation,447,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This bug can be triggered only on MacOS 12 for the x86 architecture.; PyROOT freezes if:; - A `TCanvas` is instantiated in a script or at the prompt; - The `name ROOT.TCanvas` is accessed at the prompt. ### Reproducer. ```python; import ROOT. ROOT.TCanvas # Enough to freeze the prompt; c = ROOT.TCanvas() # Triggers freeze in a script; ```. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13770
https://github.com/root-project/root/issues/13770:254,Security,access,accessed,254,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This bug can be triggered only on MacOS 12 for the x86 architecture.; PyROOT freezes if:; - A `TCanvas` is instantiated in a script or at the prompt; - The `name ROOT.TCanvas` is accessed at the prompt. ### Reproducer. ```python; import ROOT. ROOT.TCanvas # Enough to freeze the prompt; c = ROOT.TCanvas() # Triggers freeze in a script; ```. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13770
https://github.com/root-project/root/pull/13771:131,Deployability,update,updated,131,# This Pull request:. Makes it possible to use PCRE2 as an alternative to PCRE. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11395,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13771
https://github.com/root-project/root/pull/13771:101,Testability,test,tested,101,# This Pull request:. Makes it possible to use PCRE2 as an alternative to PCRE. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11395,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13771
https://github.com/root-project/root/pull/13772:910,Energy Efficiency,allocate,allocated,910,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13772:294,Performance,load,load,294,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13772:335,Performance,Load,Load,335,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13772:780,Performance,Load,Load,780,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13772:1041,Performance,perform,performance,1041,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13772:1324,Safety,avoid,avoid,1324,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13772
https://github.com/root-project/root/pull/13774:432,Deployability,install,installation,432,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:545,Deployability,install,installing,545,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:645,Deployability,install,installing,645,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:715,Deployability,install,installing,715,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:773,Deployability,install,installation,773,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:281,Modifiability,plugin,plugin,281,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:463,Modifiability,plugin,plugins,463,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:793,Modifiability,plugin,plugin,793,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:481,Testability,test,tested,481,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:622,Testability,test,tests,622,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13774:697,Testability,test,tests,697,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13774
https://github.com/root-project/root/pull/13776:282,Modifiability,variab,variables,282,"This will fix some warnings seen in the nightlies: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-asan/lastBuild/LABEL=ROOT-centos8,SPEC=asan,V=master/parsed_console/. Commented out and not removed because there is some TODO in that file related to these variables (although it's probably obsolete).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13776
https://github.com/root-project/root/pull/13777:35,Availability,failure,failures,35,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13777
https://github.com/root-project/root/pull/13777:512,Availability,failure,failures,512,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13777
https://github.com/root-project/root/pull/13777:24,Safety,avoid,avoid,24,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13777
https://github.com/root-project/root/pull/13777:30,Testability,test,test,30,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13777
https://github.com/root-project/root/pull/13777:615,Usability,simpl,simple,615,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13777
https://github.com/root-project/root/pull/13778:49,Availability,failure,failures,49,Backport of the following PR to fix 6.28 nightly failures:. * https://github.com/root-project/root/pull/13533,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13778
https://github.com/root-project/root/pull/13779:22,Deployability,Update,Updates,22,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:51,Deployability,release,release,51,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:1429,Deployability,update,updated,1429,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:536,Energy Efficiency,schedul,scheduling,536,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:170,Performance,scalab,scalability,170,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:609,Performance,perform,perform,609,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:1133,Security,checksum,checksums,1133,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13779:1399,Testability,test,tested,1399,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13779
https://github.com/root-project/root/pull/13781:200,Safety,avoid,avoid,200,This is just a quickfix PR to add the header to the library generation (before it worked due to transitive inclusion in `RInterface.hxx`). In a followup PR I will propose a way to automatise this and avoid further cases,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13781
https://github.com/root-project/root/pull/13783:2900,Availability,failure,failure,2900,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:3243,Availability,Error,Error,3243,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:821,Deployability,Update,Update,821,"Partial backport of, mostly to get the compatibility with the newest `sklearn`:. * https://github.com/root-project/root/pull/13634. With all the backports I made in the last days, the difference between the `tmva/` subdirectory in ROOT 6.28 and ROOT master is a relatively short list of commits, which might help us in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:3204,Deployability,Update,Update,3204,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2245,Energy Efficiency,reduce,reduce,2245,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2451,Energy Efficiency,reduce,reduce,2451,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:1831,Modifiability,Refactor,Refactor,1831,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:1005,Performance,load,loading,1005,"s in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2297,Safety,avoid,avoid,2297,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2345,Safety,avoid,avoid,2345,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2772,Safety,avoid,avoid,2772,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:4138,Security,access,access,4138,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:742,Testability,Log,Log,742,"Partial backport of, mostly to get the compatibility with the newest `sklearn`:. * https://github.com/root-project/root/pull/13634. With all the backports I made in the last days, the difference between the `tmva/` subdirectory in ROOT 6.28 and ROOT master is a relatively short list of commits, which might help us in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:1437,Testability,Test,Test,1437,"s in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:1538,Testability,test,tests,1538,"s in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:1840,Testability,Test,TestRModelParserPyTorch,1840,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2365,Testability,test,tests,2365,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:2890,Testability,assert,assertion,2890,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13783:3311,Testability,test,tests,3311,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13783
https://github.com/root-project/root/pull/13784:126,Testability,test,tests,126,"This fix will be needed for 6.30 too. Opening this PR now so that you know it is needed, but I will be continuing to run some tests today and may push some more changes if I find more bugs!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13784
https://github.com/root-project/root/pull/13786:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13786
https://github.com/root-project/root/pull/13786:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13786
https://github.com/root-project/root/pull/13787:98,Availability,failure,failures,98,"This PR fixes https://github.com/root-project/root/issues/12043 . It should also address sporadic failures seen in our jenkins CI due to sometimes Dask assigning two tasks to the same worker process, thus the second task using the same DefinePerSample node of the first task and collapsing into the same situation as the linked issue. The first commit contains the actual fix, then tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13787
https://github.com/root-project/root/pull/13787:382,Testability,test,tests,382,"This PR fixes https://github.com/root-project/root/issues/12043 . It should also address sporadic failures seen in our jenkins CI due to sometimes Dask assigning two tasks to the same worker process, thus the second task using the same DefinePerSample node of the first task and collapsing into the same situation as the linked issue. The first commit contains the actual fix, then tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13787
https://github.com/root-project/root/pull/13795:204,Testability,test,tests,204,"Otherwise they are emitted as internal and we get double-construction and -destruction on the same memory address due to the way we promote internal declarations in KeepLocalGVPass. According to upstream tests, the de-duplication doesn't work on Windows (yet), but I think this problem is severe enough to fix it on the other platforms sooner rather than later. Fixes #13429, backport of https://github.com/root-project/root/pull/13614",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13795
https://github.com/root-project/root/issues/13798:237,Availability,error,error-while-using-rdataframe-with-spark-cluster-analytix,237,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13798
https://github.com/root-project/root/issues/13798:498,Availability,error,error,498,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13798
https://github.com/root-project/root/issues/13798:974,Availability,error,error,974,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13798
https://github.com/root-project/root/issues/13798:1099,Deployability,Install,Installation,1099,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13798
https://github.com/root-project/root/issues/13798:683,Modifiability,config,config,683,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13798
https://github.com/root-project/root/issues/13800:355,Availability,avail,available,355,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13800
https://github.com/root-project/root/issues/13800:416,Availability,error,error,416,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13800
https://github.com/root-project/root/issues/13800:1124,Availability,error,error,1124,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13800
https://github.com/root-project/root/issues/13800:1193,Deployability,Install,Installation,1193,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13800
https://github.com/root-project/root/issues/13800:306,Usability,simpl,simply,306,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13800
https://github.com/root-project/root/pull/13801:87,Availability,error,error,87,"Adjust the spec.json file used for the test accordingly. Note that RDataFrame does not error out if a number beyond the last entry available is specified, it just interrupts the event loop early. This issue is; tracked at #13800.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13801
https://github.com/root-project/root/pull/13801:131,Availability,avail,available,131,"Adjust the spec.json file used for the test accordingly. Note that RDataFrame does not error out if a number beyond the last entry available is specified, it just interrupts the event loop early. This issue is; tracked at #13800.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13801
https://github.com/root-project/root/pull/13801:39,Testability,test,test,39,"Adjust the spec.json file used for the test accordingly. Note that RDataFrame does not error out if a number beyond the last entry available is specified, it just interrupts the event loop early. This issue is; tracked at #13800.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13801
https://github.com/root-project/root/pull/13803:176,Availability,avail,available,176,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:641,Deployability,update,updated,641,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:507,Energy Efficiency,reduce,reduce,507,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:54,Modifiability,config,config,54,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:123,Modifiability,config,config,123,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:611,Testability,test,tested,611,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:279,Usability,simpl,simple,279,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13803:449,Usability,simpl,simple,449,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13803
https://github.com/root-project/root/pull/13804:66,Testability,log,logarithmic,66,"The previous equation interpolated between low and high values in logarithmic space and transformed the result back with an exp. This introduced an issue with low or high values that were zero. Taking their logarithm would introduce -inf values which led to nan values from the interpolation call. Instead, we now do the interpolation without the back and forth logaritmic transformations. This gives slightly deviating values from the previous implementation. However, that implementation already was a recent change from the earlier implementation with similarly deviating values, so in the end this additional change is not very significant. See commit 466f3f689c578cb53d75ddeeb04472ec4d82e3ed for that previous reimplementation. This change can be considered a fix for that commit. Fixes #13749.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13804
https://github.com/root-project/root/pull/13804:207,Testability,log,logarithm,207,"The previous equation interpolated between low and high values in logarithmic space and transformed the result back with an exp. This introduced an issue with low or high values that were zero. Taking their logarithm would introduce -inf values which led to nan values from the interpolation call. Instead, we now do the interpolation without the back and forth logaritmic transformations. This gives slightly deviating values from the previous implementation. However, that implementation already was a recent change from the earlier implementation with similarly deviating values, so in the end this additional change is not very significant. See commit 466f3f689c578cb53d75ddeeb04472ec4d82e3ed for that previous reimplementation. This change can be considered a fix for that commit. Fixes #13749.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13804
https://github.com/root-project/root/pull/13804:362,Testability,log,logaritmic,362,"The previous equation interpolated between low and high values in logarithmic space and transformed the result back with an exp. This introduced an issue with low or high values that were zero. Taking their logarithm would introduce -inf values which led to nan values from the interpolation call. Instead, we now do the interpolation without the back and forth logaritmic transformations. This gives slightly deviating values from the previous implementation. However, that implementation already was a recent change from the earlier implementation with similarly deviating values, so in the end this additional change is not very significant. See commit 466f3f689c578cb53d75ddeeb04472ec4d82e3ed for that previous reimplementation. This change can be considered a fix for that commit. Fixes #13749.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13804
https://github.com/root-project/root/pull/13806:319,Deployability,update,updated,319,# This Pull request:. Adds support for the `std::byte` type. Vectors of bytes can be used to represent BLOBs in RNTuple. The unit test shows an example where a `TMemFile` is stored in such a vector. A follow-up PR should provide a convenient interface to store BLOBs. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13806
https://github.com/root-project/root/pull/13806:242,Integrability,interface,interface,242,# This Pull request:. Adds support for the `std::byte` type. Vectors of bytes can be used to represent BLOBs in RNTuple. The unit test shows an example where a `TMemFile` is stored in such a vector. A follow-up PR should provide a convenient interface to store BLOBs. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13806
https://github.com/root-project/root/pull/13806:130,Testability,test,test,130,# This Pull request:. Adds support for the `std::byte` type. Vectors of bytes can be used to represent BLOBs in RNTuple. The unit test shows an example where a `TMemFile` is stored in such a vector. A follow-up PR should provide a convenient interface to store BLOBs. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13806
https://github.com/root-project/root/pull/13806:289,Testability,test,tested,289,# This Pull request:. Adds support for the `std::byte` type. Vectors of bytes can be used to represent BLOBs in RNTuple. The unit test shows an example where a `TMemFile` is stored in such a vector. A follow-up PR should provide a convenient interface to store BLOBs. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13806
https://github.com/root-project/root/pull/13807:68,Safety,avoid,avoid,68,This PR fixes backports the fix to keep eager execution on macOS to avoid multi-processing issue that gives timeout of tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13807
https://github.com/root-project/root/pull/13807:108,Safety,timeout,timeout,108,This PR fixes backports the fix to keep eager execution on macOS to avoid multi-processing issue that gives timeout of tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13807
https://github.com/root-project/root/pull/13807:119,Testability,test,tests,119,This PR fixes backports the fix to keep eager execution on macOS to avoid multi-processing issue that gives timeout of tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13807
https://github.com/root-project/root/pull/13808:314,Energy Efficiency,reduce,reduces,314,"The goal of the class is to be an (almost) drop in replacement for SmallVector and std::vector when those are presized and filled later, as it happens in SourceManager and ASTReader. By splitting the actual vector in pages of the same size and allocating the pages only when they are needed, using this containers reduces the memory usage by a factor 4 for the cases relevant to the ALICE experiment ROOT / cling usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13808
https://github.com/root-project/root/pull/13809:87,Modifiability,Flexible,FlexibleInterpVar,87,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13809
https://github.com/root-project/root/pull/13809:256,Testability,log,log-normal,256,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13809
https://github.com/root-project/root/pull/13809:412,Testability,log,log,412,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13809
https://github.com/root-project/root/pull/13809:426,Usability,Clear,Clearly,426,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13809
https://github.com/root-project/root/pull/13810:20,Deployability,release,release,20,This is final 7.5.0 release.; Branch 7.5 will be used as base for ROOT 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13810
https://github.com/root-project/root/issues/13811:2778,Availability,failure,failure,2778,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:251,Deployability,release,releases,251,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. # TL;DR. ROOT doesn't work on SWAN within any Spark job, unless these environment variables are explicitly set in the worker env beforehand:. * `PATH`: `/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:319,Deployability,release,releases,319,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. # TL;DR. ROOT doesn't work on SWAN within any Spark job, unless these environment variables are explicitly set in the worker env beforehand:. * `PATH`: `/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:2024,Deployability,patch,patch,2024,"ADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:3143,Deployability,release,releases,3143,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:3211,Deployability,release,releases,3211,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:3583,Deployability,Install,Installation,3583,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:157,Modifiability,variab,variables,157,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. # TL;DR. ROOT doesn't work on SWAN within any Spark job, unless these environment variables are explicitly set in the worker env beforehand:. * `PATH`: `/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:937,Modifiability,variab,variables,937,"bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:2444,Modifiability,variab,variable,2444,"CH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:1236,Testability,LOG,LOGNAME,1236,"bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/issues/13811:2847,Usability,simpl,simply,2847,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13811
https://github.com/root-project/root/pull/13812:186,Testability,test,test,186,This also includes rudimentary support for numeric integrals in 1D with; the codegen backend as a demonstrator. A second commit cleans up the `RooFuncWrapper` class a little bit. A unit test that fits a 1D function created with the RooClassFactory using `codegen` is also added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13812
https://github.com/root-project/root/pull/13813:168,Availability,error,error,168,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:45,Deployability,hotfix,hotfixes,45,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:874,Deployability,update,updated,874,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:174,Integrability,message,message,174,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:138,Modifiability,variab,variable,138,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:577,Modifiability,Flexible,FlexibleInterpVars,577,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:620,Modifiability,variab,variables,620,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:360,Testability,test,test,360,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13813:844,Testability,test,tested,844,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13813
https://github.com/root-project/root/pull/13814:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13814
https://github.com/root-project/root/pull/13814:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13814
https://github.com/root-project/root/issues/13815:670,Availability,error,error,670,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13815
https://github.com/root-project/root/issues/13815:1454,Availability,error,error,1454,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13815
https://github.com/root-project/root/issues/13815:1788,Availability,error,error,1788,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13815
https://github.com/root-project/root/issues/13815:237,Deployability,upgrade,upgrade,237,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13815
https://github.com/root-project/root/issues/13815:356,Testability,test,test,356,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13815
https://github.com/root-project/root/issues/13816:525,Deployability,Install,Installation,525,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running a python macro with ""python -i df106_HiggsToFourLeptons.py"", the legend does not appear on web canvas. ; ![Screenshot 2023-10-05 at 17 11 28](https://github.com/root-project/root/assets/80402204/411a96dc-e713-41a7-ab94-75c4bc5d5441). ### Reproducer. I'm attaching the macro and the spec file needed to run it. . [reproducer.zip](https://github.com/root-project/root/files/12829592/reproducer.zip). ### ROOT version. current master . ### Installation method. source. ### Operating system. macOS/all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13816
https://github.com/root-project/root/pull/13817:56,Safety,detect,detect,56,Already in virtual class introduce IsWeb() method.; Let detect web canvas without need to link against `Gpad` library. Fixes #13816,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13817
https://github.com/root-project/root/pull/13818:148,Integrability,depend,dependency,148,Speed-up CNN and RNN tutorials in TMVA (use less epochs) and add some fixes for IMT and to not use root-config in the python versions. ; Add also a dependency in the Python tutorials on the C++ to avoid conflicts with the same file name. Remove not needed veto for the no-imt case for the TMVA_CNN_Classification.C tutorial introduced in #13712,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13818
https://github.com/root-project/root/pull/13818:104,Modifiability,config,config,104,Speed-up CNN and RNN tutorials in TMVA (use less epochs) and add some fixes for IMT and to not use root-config in the python versions. ; Add also a dependency in the Python tutorials on the C++ to avoid conflicts with the same file name. Remove not needed veto for the no-imt case for the TMVA_CNN_Classification.C tutorial introduced in #13712,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13818
https://github.com/root-project/root/pull/13818:197,Safety,avoid,avoid,197,Speed-up CNN and RNN tutorials in TMVA (use less epochs) and add some fixes for IMT and to not use root-config in the python versions. ; Add also a dependency in the Python tutorials on the C++ to avoid conflicts with the same file name. Remove not needed veto for the no-imt case for the TMVA_CNN_Classification.C tutorial introduced in #13712,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13818
https://github.com/root-project/root/pull/13820:198,Deployability,update,updated,198,in presence of an overloaded operator().; The test for these changes can be found in roottest: https://github.com/root-project/roottest/pull/1024. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). Fixes: https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13820
https://github.com/root-project/root/pull/13820:46,Testability,test,test,46,in presence of an overloaded operator().; The test for these changes can be found in roottest: https://github.com/root-project/roottest/pull/1024. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). Fixes: https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13820
https://github.com/root-project/root/pull/13820:168,Testability,test,tested,168,in presence of an overloaded operator().; The test for these changes can be found in roottest: https://github.com/root-project/roottest/pull/1024. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). Fixes: https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13820
https://github.com/root-project/root/pull/13821:203,Availability,failure,failures,203,The changes in the commits are taken from upstream. Each commit references the upstream commit(s) that were needed to implement those changes. This should fix #13410 and hopefully not provoke other test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13821
https://github.com/root-project/root/pull/13821:198,Testability,test,test,198,The changes in the commits are taken from upstream. Each commit references the upstream commit(s) that were needed to implement those changes. This should fix #13410 and hopefully not provoke other test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13821
https://github.com/root-project/root/pull/13822:65,Availability,error,errors,65,"Fix the case of using KS test when one of the histogram has zero errors (i.e is a function). Improve KS test adding possibility to specify number of toys by using option ""X=number"" for example ""X=1000"". This PR fixes the issue #13697",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13822
https://github.com/root-project/root/pull/13822:25,Testability,test,test,25,"Fix the case of using KS test when one of the histogram has zero errors (i.e is a function). Improve KS test adding possibility to specify number of toys by using option ""X=number"" for example ""X=1000"". This PR fixes the issue #13697",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13822
https://github.com/root-project/root/pull/13822:104,Testability,test,test,104,"Fix the case of using KS test when one of the histogram has zero errors (i.e is a function). Improve KS test adding possibility to specify number of toys by using option ""X=number"" for example ""X=1000"". This PR fixes the issue #13697",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13822
https://github.com/root-project/root/pull/13823:215,Deployability,update,updated,215,# This Pull request:; bumps the version of built-in Vc to 1.4.4 which does not use any more the deprecated std::iterator in favour of traits. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes warnings on Fedora,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13823
https://github.com/root-project/root/pull/13823:185,Testability,test,tested,185,# This Pull request:; bumps the version of built-in Vc to 1.4.4 which does not use any more the deprecated std::iterator in favour of traits. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes warnings on Fedora,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13823
https://github.com/root-project/root/pull/13824:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13824
https://github.com/root-project/root/pull/13824:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13824
https://github.com/root-project/root/issues/13825:347,Availability,error,error,347,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. the libpng included in latest root/afterimage is 1.2.55 . The modern version is 1.6.40. This causes problems at run time:; libpng warning: Application was compiled with png.h from libpng-1.6.39; libpng warning: Application is running with png.c from libpng-1.2.55; libpng error: Incompatible libpng version in application and library. ### Reproducer. I dont think a reproduced is needed. ### ROOT version. | From tags/v6-28-06@v6-28-06 |. ### Installation method. brew. ### Operating system. macos. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13825
https://github.com/root-project/root/issues/13825:518,Deployability,Install,Installation,518,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. the libpng included in latest root/afterimage is 1.2.55 . The modern version is 1.6.40. This causes problems at run time:; libpng warning: Application was compiled with png.h from libpng-1.6.39; libpng warning: Application is running with png.c from libpng-1.2.55; libpng error: Incompatible libpng version in application and library. ### Reproducer. I dont think a reproduced is needed. ### ROOT version. | From tags/v6-28-06@v6-28-06 |. ### Installation method. brew. ### Operating system. macos. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13825
https://github.com/root-project/root/pull/13826:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13826
https://github.com/root-project/root/pull/13826:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13826
https://github.com/root-project/root/pull/13827:161,Deployability,update,updated,161,# This Pull request: is a backport of https://github.com/root-project/root/pull/11844/. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13827
https://github.com/root-project/root/pull/13827:131,Testability,test,tested,131,# This Pull request: is a backport of https://github.com/root-project/root/pull/11844/. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13827
https://github.com/root-project/root/pull/13831:188,Deployability,update,updated,188,to fix warnings due to an unused variable in non-debug builds. # This Pull request:. ## Changes or fixes:; compilation warnings of TMVA. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13831
https://github.com/root-project/root/pull/13831:33,Modifiability,variab,variable,33,to fix warnings due to an unused variable in non-debug builds. # This Pull request:. ## Changes or fixes:; compilation warnings of TMVA. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13831
https://github.com/root-project/root/pull/13831:158,Testability,test,tested,158,to fix warnings due to an unused variable in non-debug builds. # This Pull request:. ## Changes or fixes:; compilation warnings of TMVA. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13831
https://github.com/root-project/root/pull/13833:33,Modifiability,variab,variable,33,to fix warnings due to an unused variable in non-debug builds. A BP of https://github.com/root-project/root/pull/13831,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13833
https://github.com/root-project/root/issues/13834:117,Availability,down,downloaded,117,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Today I upgraded my macos system to 14.0, downloaded the source code for v6.28/06 and compiled it, after that root works fine and drawing works fine, but TBrowser doesn't work!; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/bf938e44-b07b-4760-878a-7600a2e41ee5). ### Reproducer. run root -l; TBrowser a. and saw this picture; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/7e8f1a54-9304-49ba-bbd6-c3a088a5a81a). ### ROOT version. v6.28/06 . ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:83,Deployability,upgrade,upgraded,83,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Today I upgraded my macos system to 14.0, downloaded the source code for v6.28/06 and compiled it, after that root works fine and drawing works fine, but TBrowser doesn't work!; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/bf938e44-b07b-4760-878a-7600a2e41ee5). ### Reproducer. run root -l; TBrowser a. and saw this picture; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/7e8f1a54-9304-49ba-bbd6-c3a088a5a81a). ### ROOT version. v6.28/06 . ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:565,Deployability,Install,Installation,565,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Today I upgraded my macos system to 14.0, downloaded the source code for v6.28/06 and compiled it, after that root works fine and drawing works fine, but TBrowser doesn't work!; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/bf938e44-b07b-4760-878a-7600a2e41ee5). ### Reproducer. run root -l; TBrowser a. and saw this picture; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/7e8f1a54-9304-49ba-bbd6-c3a088a5a81a). ### ROOT version. v6.28/06 . ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/pull/13835:31,Modifiability,variab,variable,31,to avoid warnings about unused variable. This is possible because in master c++17 is enforced.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13835
https://github.com/root-project/root/pull/13835:3,Safety,avoid,avoid,3,to avoid warnings about unused variable. This is possible because in master c++17 is enforced.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13835
https://github.com/root-project/root/pull/13839:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13839
https://github.com/root-project/root/pull/13839:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13839
https://github.com/root-project/root/pull/13840:286,Deployability,update,updated,286,# This Pull request:. ## Changes or fixes:. All the current usage of fTasks assumes that it owns its contents. Instead of dealing with this everywhere manually use the `SetOwner(kTRUE)` member function to declare this more explicitly. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:256,Testability,test,tested,256,# This Pull request:. ## Changes or fixes:. All the current usage of fTasks assumes that it owns its contents. Instead of dealing with this everywhere manually use the `SetOwner(kTRUE)` member function to declare this more explicitly. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13842:219,Deployability,update,update,219,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:488,Deployability,update,update,488,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:888,Deployability,update,update,888,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1032,Deployability,update,updated,1032,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1302,Deployability,update,update,1302,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1571,Deployability,update,update,1571,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1971,Deployability,update,update,1971,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:129,Modifiability,extend,extended,129,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1212,Modifiability,extend,extended,1212,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:168,Security,hash,hashing,168,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1251,Security,hash,hashing,1251,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/pull/13842:1002,Testability,test,tested,1002,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13842
https://github.com/root-project/root/issues/13843:380,Deployability,Install,Installation,380,### Explain what you would like to see improved and how. Improve RConcurrentHashColl by moving it declaration/implementation from Thread to IO and by renaming some of the functions to clarify their intent. See; https://github.com/root-project/root/pull/12847/files#r1232327876; and; https://github.com/root-project/root/pull/12847/files#r1232331243. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. Related to the solution for https://github.com/root-project/root/issues/12783,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13843
https://github.com/root-project/root/issues/13845:2998,Availability,Error,Error,2998,"ar const*, TInterpreter::EErrorCode*) + 0xdb4 from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550417514c in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) + 0xe8 from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3078,Availability,error,errors,3078,"rom /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550417514c in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) + 0xe8 from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3209,Availability,Error,Error,3209,"/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3262,Availability,error,errors,3262,"/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3354,Availability,Error,Error,3354,"om /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3415,Availability,error,errors,3415,"om /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3773,Deployability,Install,Install,3773,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3811,Deployability,update,update,3811,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3827,Deployability,install,install,3827,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4014,Deployability,patch,patch,4014,"ot] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Oper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4510,Deployability,install,install,4510,"ot remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4541,Deployability,install,install,4541,"ot remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4662,Deployability,patch,patch,4662,"ot remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4766,Deployability,install,install,4766," Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT inside that container on a qemu/docker arm64 emulation, with the same results. ## Still, why would you want to do that???. We have provided ARM containers for our users at the Electron-Ion Collider for a while now. In the absence of ARM nodes on our container build cluster, we build these using emulation. Aside from a rare major dependency recompile, this works well enough. As of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4941,Deployability,Install,Installation,4941,"project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT inside that container on a qemu/docker arm64 emulation, with the same results. ## Still, why would you want to do that???. We have provided ARM containers for our users at the Electron-Ion Collider for a while now. In the absence of ARM nodes on our container build cluster, we build these using emulation. Aside from a rare major dependency recompile, this works well enough. As of ROOT v6.28 we have had to stop providing ARM images for our users because the C++20 feature of the upgrade was more important than the continued ARM support. Nevertheless, we ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5873,Deployability,upgrade,upgrade,5873," a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT inside that container on a qemu/docker arm64 emulation, with the same results. ## Still, why would you want to do that???. We have provided ARM containers for our users at the Electron-Ion Collider for a while now. In the absence of ARM nodes on our container build cluster, we build these using emulation. Aside from a rare major dependency recompile, this works well enough. As of ROOT v6.28 we have had to stop providing ARM images for our users because the C++20 feature of the upgrade was more important than the continued ARM support. Nevertheless, we would like to bring back ARM support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:342,Integrability,depend,dependencies,342,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As of https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, building ROOT inside a docker container for arm64 architectures on a x86_64 host system using qemu emulation fails on the hsimple.C test:; ```; Consolidate compiler generated dependencies of target GeomBuilder; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Generating etc/allDict.cxx.pch; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Linking CXX shared library ../../lib/libGeomBuilder.so. Generating PCH for core core/clingutils core/imt core/multiproc core/rint core/thread graf2d/gpad graf2d/graf graf2d/postscript graf3d/g3d gui/fitpanel gui/gui hist/hist hist/histpainter io/io math/genvector math/mathcore math/matrix math/minuit math/physics math/smatrix math/vecops net/net tree/tree tree/treeplayer tree/treeviewer. make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target GeomBuilder; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target onepcm; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Generating tutorials/hsimple.root. Processing hsimple.C... *** Break *** segmentation violation; Generating stack trace...; 0x000000550424be2c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550424c598 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550432bef4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504338200 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550433a1d4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x00000055043253ec in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550415c38c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504174cf4 in TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3789,Integrability,depend,dependencies,3789,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5722,Integrability,depend,dependency,5722," a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT inside that container on a qemu/docker arm64 emulation, with the same results. ## Still, why would you want to do that???. We have provided ARM containers for our users at the Electron-Ion Collider for a while now. In the absence of ARM nodes on our container build cluster, we build these using emulation. Aside from a rare major dependency recompile, this works well enough. As of ROOT v6.28 we have had to stop providing ARM images for our users because the C++20 feature of the upgrade was more important than the continued ARM support. Nevertheless, we would like to bring back ARM support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4098,Modifiability,Config,Configure,4098,"ot remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:299,Testability,test,test,299,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As of https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, building ROOT inside a docker container for arm64 architectures on a x86_64 host system using qemu emulation fails on the hsimple.C test:; ```; Consolidate compiler generated dependencies of target GeomBuilder; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Generating etc/allDict.cxx.pch; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Linking CXX shared library ../../lib/libGeomBuilder.so. Generating PCH for core core/clingutils core/imt core/multiproc core/rint core/thread graf2d/gpad graf2d/graf graf2d/postscript graf3d/g3d gui/fitpanel gui/gui hist/hist hist/histpainter io/io math/genvector math/mathcore math/matrix math/minuit math/physics math/smatrix math/vecops net/net tree/tree tree/treeplayer tree/treeviewer. make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target GeomBuilder; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target onepcm; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Generating tutorials/hsimple.root. Processing hsimple.C... *** Break *** segmentation violation; Generating stack trace...; 0x000000550424be2c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550424c598 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550432bef4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504338200 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550433a1d4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x00000055043253ec in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550415c38c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504174cf4 in TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13846:1515,Availability,Error,Error,1515,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:1841,Deployability,Install,Installation,1841,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:1661,Modifiability,variab,variable,1661,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:467,Performance,Load,Load,467,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/pull/13847:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13847
https://github.com/root-project/root/pull/13847:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13847
https://github.com/root-project/root/issues/13848:1110,Deployability,Install,Installation,1110,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See https://root-forum.cern.ch/t/shift-of-row-index-in-tmatrixtsparse/56525. According to Eddy it's a bug in the initialization of a sparse matrix with a row index not starting at 0. ### Reproducer. ```c++; void testSparse(Int_t msize=5); {; TMatrixDSparse m1(1,4,0,msize-1);; {; Int_t nr = 4*msize;; Int_t *irow = new Int_t[nr];; Int_t *icol = new Int_t[nr];; Double_t *val = new Double_t[nr];. Int_t n = 0;; for (UInt_t i = m1.GetRowLwb(); i <= m1.GetRowUpb(); i++) {; for (UInt_t j = m1.GetColLwb(); j <= m1.GetColUpb(); j++) {; irow[n] = i;; icol[n] = j;; val[n] = TMath::Pi()*i+TMath::E()*j;; n++;; }; }; m1.SetMatrixArray(nr,irow,icol,val);; delete [] irow;; delete [] icol;; delete [] val;; }. m1.Print();. TMatrixD m2(1,4,0,msize-1);; for (UInt_t i = m2.GetRowLwb(); i <= m2.GetRowUpb(); i++); for (UInt_t j = m2.GetColLwb(); j <= m2.GetColUpb(); j++); m2(i,j) = TMath::Pi()*i+TMath::E()*j;; m2.Print();. std::cout << ""matrices identical "" << ((m1 == m2) ? ""OK"" : ""FAILED"") << std::endl;; }; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13848
https://github.com/root-project/root/issues/13848:287,Testability,test,testSparse,287,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See https://root-forum.cern.ch/t/shift-of-row-index-in-tmatrixtsparse/56525. According to Eddy it's a bug in the initialization of a sparse matrix with a row index not starting at 0. ### Reproducer. ```c++; void testSparse(Int_t msize=5); {; TMatrixDSparse m1(1,4,0,msize-1);; {; Int_t nr = 4*msize;; Int_t *irow = new Int_t[nr];; Int_t *icol = new Int_t[nr];; Double_t *val = new Double_t[nr];. Int_t n = 0;; for (UInt_t i = m1.GetRowLwb(); i <= m1.GetRowUpb(); i++) {; for (UInt_t j = m1.GetColLwb(); j <= m1.GetColUpb(); j++) {; irow[n] = i;; icol[n] = j;; val[n] = TMath::Pi()*i+TMath::E()*j;; n++;; }; }; m1.SetMatrixArray(nr,irow,icol,val);; delete [] irow;; delete [] icol;; delete [] val;; }. m1.Print();. TMatrixD m2(1,4,0,msize-1);; for (UInt_t i = m2.GetRowLwb(); i <= m2.GetRowUpb(); i++); for (UInt_t j = m2.GetColLwb(); j <= m2.GetColUpb(); j++); m2(i,j) = TMath::Pi()*i+TMath::E()*j;; m2.Print();. std::cout << ""matrices identical "" << ((m1 == m2) ? ""OK"" : ""FAILED"") << std::endl;; }; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13848
https://github.com/root-project/root/pull/13850:127,Deployability,update,updated,127,"# This Pull request:. ## Changes or fixes:; Backport jitlink ppc64 backend. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This is based on https://github.com/hahnjo/root/tree/llvm16, however I didn't find the base repository in the list when I was creating this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:97,Testability,test,tested,97,"# This Pull request:. ## Changes or fixes:; Backport jitlink ppc64 backend. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This is based on https://github.com/hahnjo/root/tree/llvm16, however I didn't find the base repository in the list when I was creating this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/issues/13851:140,Deployability,upgrade,upgrade,140,"### Description. Since around beginning of August, the test `roottest-python-regression-regression` crashes on Fedora - coinciding with the upgrade of GCC 13.1.0 to GCC 13.2.0:; ```; Unhandled cleanup; missing full expression marker?; UNREACHABLE executed at /github/home/ROOT-CI/src/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:14945!; ```. After heavily reducing the test case, this is caused by a `constexpr` destructor and a very specific combination of template instantiations in different modules. See the upstream report in https://github.com/llvm/llvm-project/issues/68702. ### Reproducer. Build with at least GCC 13.2.0 (or rather `libstdc++` from GCC 13.2.0) and C++20 on Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13851
https://github.com/root-project/root/issues/13851:55,Testability,test,test,55,"### Description. Since around beginning of August, the test `roottest-python-regression-regression` crashes on Fedora - coinciding with the upgrade of GCC 13.1.0 to GCC 13.2.0:; ```; Unhandled cleanup; missing full expression marker?; UNREACHABLE executed at /github/home/ROOT-CI/src/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:14945!; ```. After heavily reducing the test case, this is caused by a `constexpr` destructor and a very specific combination of template instantiations in different modules. See the upstream report in https://github.com/llvm/llvm-project/issues/68702. ### Reproducer. Build with at least GCC 13.2.0 (or rather `libstdc++` from GCC 13.2.0) and C++20 on Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13851
https://github.com/root-project/root/issues/13851:380,Testability,test,test,380,"### Description. Since around beginning of August, the test `roottest-python-regression-regression` crashes on Fedora - coinciding with the upgrade of GCC 13.1.0 to GCC 13.2.0:; ```; Unhandled cleanup; missing full expression marker?; UNREACHABLE executed at /github/home/ROOT-CI/src/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:14945!; ```. After heavily reducing the test case, this is caused by a `constexpr` destructor and a very specific combination of template instantiations in different modules. See the upstream report in https://github.com/llvm/llvm-project/issues/68702. ### Reproducer. Build with at least GCC 13.2.0 (or rather `libstdc++` from GCC 13.2.0) and C++20 on Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13851
https://github.com/root-project/root/issues/13852:118,Availability,down,download,118,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:475,Availability,error,error,475,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:491,Availability,Error,Error,491,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:927,Availability,error,error,927,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:1021,Availability,error,error,1021,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:511,Modifiability,Variab,VariableMetricBuilder,511,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/pull/13853:54,Modifiability,variab,variable,54,"When importing a `TH1` into a RooDataHist, the RooFit variable ranges are automatically adjusted to the nearest `TH1` bin boundaries. Then, the number of the corresponding `TH1` bin is stored in a ""offset"" variable to be used later when filling the RooDataHist. For this range adjustment, there are two code branches. One for the uniform case, and one for non-uniform binning. The uniform binning code branch was a bit weird, because it also created a non-uniform `RooBinning` object, only used to determine the original `TH1` bin of the lower adjusted boundary via; `RooBinning::rawBinNumber()`. But this can just be done with `TAxis::FindBin()`. Hence, we don't even need this confusing `rawBinNumber()` function as an implementation detail of RooFit and can get rid of it. With this change, we don't need a non-uniform `RooBinning` object in the uniform binning code branch anymore, and also circumvent an crash in the nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-debian10-i386,SPEC=noimt/12007/testReport/projectroot/test/test_stressroofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:206,Modifiability,variab,variable,206,"When importing a `TH1` into a RooDataHist, the RooFit variable ranges are automatically adjusted to the nearest `TH1` bin boundaries. Then, the number of the corresponding `TH1` bin is stored in a ""offset"" variable to be used later when filling the RooDataHist. For this range adjustment, there are two code branches. One for the uniform case, and one for non-uniform binning. The uniform binning code branch was a bit weird, because it also created a non-uniform `RooBinning` object, only used to determine the original `TH1` bin of the lower adjusted boundary via; `RooBinning::rawBinNumber()`. But this can just be done with `TAxis::FindBin()`. Hence, we don't even need this confusing `rawBinNumber()` function as an implementation detail of RooFit and can get rid of it. With this change, we don't need a non-uniform `RooBinning` object in the uniform binning code branch anymore, and also circumvent an crash in the nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-debian10-i386,SPEC=noimt/12007/testReport/projectroot/test/test_stressroofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:1049,Testability,test,testReport,1049,"When importing a `TH1` into a RooDataHist, the RooFit variable ranges are automatically adjusted to the nearest `TH1` bin boundaries. Then, the number of the corresponding `TH1` bin is stored in a ""offset"" variable to be used later when filling the RooDataHist. For this range adjustment, there are two code branches. One for the uniform case, and one for non-uniform binning. The uniform binning code branch was a bit weird, because it also created a non-uniform `RooBinning` object, only used to determine the original `TH1` bin of the lower adjusted boundary via; `RooBinning::rawBinNumber()`. But this can just be done with `TAxis::FindBin()`. Hence, we don't even need this confusing `rawBinNumber()` function as an implementation detail of RooFit and can get rid of it. With this change, we don't need a non-uniform `RooBinning` object in the uniform binning code branch anymore, and also circumvent an crash in the nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-debian10-i386,SPEC=noimt/12007/testReport/projectroot/test/test_stressroofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:1072,Testability,test,test,1072,"When importing a `TH1` into a RooDataHist, the RooFit variable ranges are automatically adjusted to the nearest `TH1` bin boundaries. Then, the number of the corresponding `TH1` bin is stored in a ""offset"" variable to be used later when filling the RooDataHist. For this range adjustment, there are two code branches. One for the uniform case, and one for non-uniform binning. The uniform binning code branch was a bit weird, because it also created a non-uniform `RooBinning` object, only used to determine the original `TH1` bin of the lower adjusted boundary via; `RooBinning::rawBinNumber()`. But this can just be done with `TAxis::FindBin()`. Hence, we don't even need this confusing `rawBinNumber()` function as an implementation detail of RooFit and can get rid of it. With this change, we don't need a non-uniform `RooBinning` object in the uniform binning code branch anymore, and also circumvent an crash in the nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-debian10-i386,SPEC=noimt/12007/testReport/projectroot/test/test_stressroofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13854:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13854
https://github.com/root-project/root/pull/13854:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13854
https://github.com/root-project/root/pull/13858:277,Deployability,update,updated,277,# This Pull request:. This PR adds an initial working prototype for merging RNTuple objects. The usage is demonstrated in the provided test. Let's keep this in draft mode for now to allow further discussion. Tagging @jblomer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/pull/13858:135,Testability,test,test,135,# This Pull request:. This PR adds an initial working prototype for merging RNTuple objects. The usage is demonstrated in the provided test. Let's keep this in draft mode for now to allow further discussion. Tagging @jblomer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/pull/13858:247,Testability,test,tested,247,# This Pull request:. This PR adds an initial working prototype for merging RNTuple objects. The usage is demonstrated in the provided test. Let's keep this in draft mode for now to allow further discussion. Tagging @jblomer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/issues/13861:226,Availability,mainten,maintenance,226,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:436,Deployability,Install,Installation,436,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:337,Usability,simpl,simplifications,337,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/pull/13862:48,Integrability,depend,dependencies,48,"The `math/mlp` library is very small and has no dependencies outside the minimal ROOT:; https://github.com/root-project/root/blob/master/math/mlp/CMakeLists.txt. Therefore, I think it's not worth it to have an extra build option to disable this component. Removing build options helps in reducing the test matrix and user confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13862
https://github.com/root-project/root/pull/13862:301,Testability,test,test,301,"The `math/mlp` library is very small and has no dependencies outside the minimal ROOT:; https://github.com/root-project/root/blob/master/math/mlp/CMakeLists.txt. Therefore, I think it's not worth it to have an extra build option to disable this component. Removing build options helps in reducing the test matrix and user confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13862
https://github.com/root-project/root/pull/13863:299,Deployability,update,updated,299,# This Pull request:. ## Changes or fixes:. src/RBDT.cxx is a source file of libTMVAUtils and should not also be asource file of libTMVA. Remove it.; Adjust test using symbols defined in this source file to link to libTMVAUtils instead of libTMVA. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This change should alse be ported to 6.28.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13863
https://github.com/root-project/root/pull/13863:157,Testability,test,test,157,# This Pull request:. ## Changes or fixes:. src/RBDT.cxx is a source file of libTMVAUtils and should not also be asource file of libTMVA. Remove it.; Adjust test using symbols defined in this source file to link to libTMVAUtils instead of libTMVA. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This change should alse be ported to 6.28.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13863
https://github.com/root-project/root/pull/13863:269,Testability,test,tested,269,# This Pull request:. ## Changes or fixes:. src/RBDT.cxx is a source file of libTMVAUtils and should not also be asource file of libTMVA. Remove it.; Adjust test using symbols defined in this source file to link to libTMVAUtils instead of libTMVA. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This change should alse be ported to 6.28.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13863
https://github.com/root-project/root/issues/13864:5690,Deployability,Install,Installation,5690,"ersions/3.12/Python] PyEval_EvalCode (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] builtin_exec (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] cfunction_vectorcall_FASTCALL_KEYWORDS (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyEval_EvalFrameDefault (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] PyEval_EvalCode (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] builtin_exec (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] cfunction_vectorcall_FASTCALL_KEYWORDS (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyEval_EvalFrameDefault (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] object_vacall (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] PyObject_CallMethodObjArgs (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] PyImport_ImportModuleLevelObject (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyEval_EvalFrameDefault (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] PyEval_EvalCode (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] run_mod (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] PyRun_SimpleStringFlags (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] Py_RunMain (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] pymain_main (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] Py_BytesMain (no debug info); [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. Take ROOT master and Python 3.12, build it. ### ROOT version. master. ### Installation method. Official Python distribution. ### Operating system. MacOS (I suspect that it's also Linux). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13864
https://github.com/root-project/root/issues/13864:1713,Safety,abort,abort,1713,"e '\s'; m = re.match('\s*(const\s+)?(RVec\w+|RVec<[\w\s]+>)', t); ```. Then, upon ROOT import, the system crashes:; ```; ~>python -c ""import ROOT""; [/foo/build/lib/libcppyy_backend3_12.so] (anonymous namespace)::do_trace(int) /foo/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:184; [/foo/build/lib/libcppyy_backend3_12.so] (anonymous namespace)::TExceptionHandlerImp::HandleException(int) /foo/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; [/foo/build/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /foo/root/core/unix/src/TUnixSystem.cxx:3626; [/foo/build/lib/libCore.so] SigHandler(ESignals) /foo/root/core/unix/src/TUnixSystem.cxx:402; [/foo/build/lib/libCore.so] sighandler(int) /foo/root/core/unix/src/TUnixSystem.cxx:3603; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/usr/lib/system/libsystem_pthread.dylib] pthread_kill (no debug info); [/usr/lib/system/libsystem_c.dylib] abort (no debug info); [/usr/lib/system/libsystem_c.dylib] err (no debug info); [/foo/build/lib/libcppyy3_12.so] PyMethod_GET_SELF(_object*) /Library/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/classobject.h:40; [/foo/build/lib/libcppyy3_12.so] CPyCppyy::im_descr_get(_object*, _object*, _object*) /foo/root/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:215; [/Library/Frameworks/Python.framework/Versions/3.12/Python] _Py_type_getattro_impl (no debug info); [/foo/build/lib/libcppyy3_12.so] CPyCppyy::meta_getattro(_object*, _object*) /foo/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:308; [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyObject_LookupAttr (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] builtin_getattr (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyEval_EvalFrameDefault (no debug info); [/foo/build/lib/libcppyy3_12.so] CPyCppyy::Pythonize(_object*, std::__1::basic_string<char, std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13864
https://github.com/root-project/root/issues/13865:168,Availability,Error,Error,168,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:807,Deployability,Install,Installation,807,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:244,Integrability,message,message,244,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:226,Modifiability,Config,Config,226,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:387,Modifiability,Config,Config,387,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13866:977,Deployability,Install,Installation,977,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Under some special circumstances, when trying to use completely legitimnate template functions from PyROOT, crashes occur. ### Reproducer. ```python; import ROOT. v = ROOT.std.vector['float']([1,2,3]); print(v). # not representable; print (ROOT.cling.printValue['std::vector<float>'](v). # Destroys pyroot; '''; File ""work/issue_12817/a.py"", line 6, in <module>; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.ll.AbortSignal: Could not instantiate printValue<std::vector<float>>:; string cling::printValue(const ROOT::Math::LorentzVector<vector<float> >* v) =>; AbortSignal: abort from C++; program state was reset; '''; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))). # This destroys pyroot; #print (ROOT.cling.printValue['std::vector<int>'](v)); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13866
https://github.com/root-project/root/issues/13866:583,Safety,Abort,AbortSignal,583,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Under some special circumstances, when trying to use completely legitimnate template functions from PyROOT, crashes occur. ### Reproducer. ```python; import ROOT. v = ROOT.std.vector['float']([1,2,3]); print(v). # not representable; print (ROOT.cling.printValue['std::vector<float>'](v). # Destroys pyroot; '''; File ""work/issue_12817/a.py"", line 6, in <module>; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.ll.AbortSignal: Could not instantiate printValue<std::vector<float>>:; string cling::printValue(const ROOT::Math::LorentzVector<vector<float> >* v) =>; AbortSignal: abort from C++; program state was reset; '''; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))). # This destroys pyroot; #print (ROOT.cling.printValue['std::vector<int>'](v)); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13866
https://github.com/root-project/root/issues/13866:732,Safety,Abort,AbortSignal,732,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Under some special circumstances, when trying to use completely legitimnate template functions from PyROOT, crashes occur. ### Reproducer. ```python; import ROOT. v = ROOT.std.vector['float']([1,2,3]); print(v). # not representable; print (ROOT.cling.printValue['std::vector<float>'](v). # Destroys pyroot; '''; File ""work/issue_12817/a.py"", line 6, in <module>; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.ll.AbortSignal: Could not instantiate printValue<std::vector<float>>:; string cling::printValue(const ROOT::Math::LorentzVector<vector<float> >* v) =>; AbortSignal: abort from C++; program state was reset; '''; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))). # This destroys pyroot; #print (ROOT.cling.printValue['std::vector<int>'](v)); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13866
https://github.com/root-project/root/issues/13866:745,Safety,abort,abort,745,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Under some special circumstances, when trying to use completely legitimnate template functions from PyROOT, crashes occur. ### Reproducer. ```python; import ROOT. v = ROOT.std.vector['float']([1,2,3]); print(v). # not representable; print (ROOT.cling.printValue['std::vector<float>'](v). # Destroys pyroot; '''; File ""work/issue_12817/a.py"", line 6, in <module>; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.ll.AbortSignal: Could not instantiate printValue<std::vector<float>>:; string cling::printValue(const ROOT::Math::LorentzVector<vector<float> >* v) =>; AbortSignal: abort from C++; program state was reset; '''; print (ROOT.cling.printValue['std::vector<float>'](ROOT.AddressOf(v))). # This destroys pyroot; #print (ROOT.cling.printValue['std::vector<int>'](v)); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13866
https://github.com/root-project/root/pull/13867:51,Availability,error,errors,51,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13867
https://github.com/root-project/root/pull/13867:3,Deployability,Update,Update,3,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13867
https://github.com/root-project/root/pull/13867:32,Modifiability,plugin,plugin,32,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13867
https://github.com/root-project/root/pull/13867:99,Modifiability,plugin,plugin,99,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13867
https://github.com/root-project/root/pull/13870:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13812; - https://github.com/root-project/root/pull/13784; - https://github.com/root-project/root/pull/13853; - https://github.com/root-project/root/pull/13813. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; *None*,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13870
https://github.com/root-project/root/issues/13875:382,Deployability,Install,Installation,382,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Objects of a class with a deleted new operator cannot be created in Python. That affects the `ROOT::Experimental::RResult` class, which uses a deleted `new` to enforce stack allocation. ### Reproducer; ```Python; import ROOT. result = ROOT.Experimental.RResult[""int""](0); ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13875
https://github.com/root-project/root/pull/13876:671,Deployability,update,updated,671,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:18,Performance,optimiz,optimization,18,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:641,Testability,test,tested,641,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/issues/13877:352,Deployability,Install,Installation,352,### Check duplicate issues. - [X] Checked for duplicates. ### Description. RNTuple runs into an endless recursion when a class references itself (directly or indirectly). This needs more thought on how to handle this case. ### Reproducer. Try creating a field of the class. ```; class T {; std::unique_ptr<T> t;; };; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13877
https://github.com/root-project/root/issues/13878:275,Deployability,Install,Installation,275,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It is division by 0 in the code. ### Reproducer. Just in root session type:; ```; root [0] auto h2 = new TH1I(""h2"", ""h2"", 100, -5, 5);; root [1] h2->GetSkewness(1); ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13878
https://github.com/root-project/root/pull/13879:119,Modifiability,variab,variables,119,"The `if(roofit_multiprocess AND NOT minuit2)` check should be done after `ROOT_APPLY_OPTIONS()`, because otherwise the variables will not be defined as the defaults if the user didn't define them explicitly. This avoids warnings when not defining the `minuit2` option when setting `roofit_multiprocess=ON`. Follows up directly on 3acc0e601bd. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13879
https://github.com/root-project/root/pull/13879:213,Safety,avoid,avoids,213,"The `if(roofit_multiprocess AND NOT minuit2)` check should be done after `ROOT_APPLY_OPTIONS()`, because otherwise the variables will not be defined as the defaults if the user didn't define them explicitly. This avoids warnings when not defining the `minuit2` option when setting `roofit_multiprocess=ON`. Follows up directly on 3acc0e601bd. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13879
https://github.com/root-project/root/issues/13880:701,Deployability,Install,Installation,701,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If display histogram, zoom in with mouse wheel an then zoom out, content of stats box changes.; Most probably due to the fact that `TAxis::kAxisRange` flag is not reset after unzooming. ### Reproducer. Load and display histogram with the command:; ```; root --web=off -l https://root.cern/js/files/hsimple.root -e 'hpxpy->Draw()' ; ```; And then zoom in/out with mouse wheel. . Before:; ![before](https://github.com/root-project/root/assets/4936580/82dba545-b9ed-4a2d-b59a-aff1a72a5ece). After:; ![after](https://github.com/root-project/root/assets/4936580/6659d04d-65c2-4e0f-b872-564ce3b34b01). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13880
https://github.com/root-project/root/issues/13880:277,Performance,Load,Load,277,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If display histogram, zoom in with mouse wheel an then zoom out, content of stats box changes.; Most probably due to the fact that `TAxis::kAxisRange` flag is not reset after unzooming. ### Reproducer. Load and display histogram with the command:; ```; root --web=off -l https://root.cern/js/files/hsimple.root -e 'hpxpy->Draw()' ; ```; And then zoom in/out with mouse wheel. . Before:; ![before](https://github.com/root-project/root/assets/4936580/82dba545-b9ed-4a2d-b59a-aff1a72a5ece). After:; ![after](https://github.com/root-project/root/assets/4936580/6659d04d-65c2-4e0f-b872-564ce3b34b01). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13880
https://github.com/root-project/root/pull/13884:57,Availability,error,error,57,"## Description:; This Pull Request fixes a typographical error in the README.md file. ## Changes Made:; Corrected ""histograming"" to ""histogramming"" in the README.md file. ## Additional Information:; This fix is not related to any existing issue. It's a minor typo that I noticed while reviewing the README. Thank you for considering this contribution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13884
https://github.com/root-project/root/pull/13885:209,Availability,echo,echo,209,"Fix Cocoa GUI for MacOS14 and Clang15. . The following collection of patches was provided by Timur Pocheptsoff <tpochep@mail.ru>. - [x] Fix TBrowser ""white window""; - [x] Fix TBrowser text editor (it does not echo text until the window is resized); - [x] Fix the OpenGL viewer. Fixes https://github.com/root-project/root/issues/13834",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:69,Deployability,patch,patches,69,"Fix Cocoa GUI for MacOS14 and Clang15. . The following collection of patches was provided by Timur Pocheptsoff <tpochep@mail.ru>. - [x] Fix TBrowser ""white window""; - [x] Fix TBrowser text editor (it does not echo text until the window is resized); - [x] Fix the OpenGL viewer. Fixes https://github.com/root-project/root/issues/13834",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/issues/13886:737,Availability,error,errors,737,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:885,Availability,error,errors-on-linux,885,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:1122,Availability,error,errors-on-linux,1122,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:70,Deployability,configurat,configuration,70,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:364,Deployability,configurat,configuration,364,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:466,Deployability,Install,Installation,466,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:702,Deployability,configurat,configuration,702,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:70,Modifiability,config,configuration,70,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:364,Modifiability,config,configuration,364,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:702,Modifiability,config,configuration,702,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/pull/13887:25,Availability,avail,available,25,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13887
https://github.com/root-project/root/pull/13887:264,Deployability,update,updated,264,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13887
https://github.com/root-project/root/pull/13887:234,Testability,test,tested,234,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13887
https://github.com/root-project/root/pull/13887:92,Usability,simpl,simplified,92,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13887
https://github.com/root-project/root/pull/13888:30,Availability,error,error,30,Fix the following compilation error with the `-Wpedantic` compiler flag; ```; [81%] Building... ... ... ... error: extra ';' [-Wpedantic]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13888
https://github.com/root-project/root/pull/13888:108,Availability,error,error,108,Fix the following compilation error with the `-Wpedantic` compiler flag; ```; [81%] Building... ... ... ... error: extra ';' [-Wpedantic]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13888
https://github.com/root-project/root/pull/13889:20,Availability,avail,available,20,"Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13889
https://github.com/root-project/root/pull/13890:514,Availability,error,error,514,"Also support the `Offset(""bin"")` feature in simultaneous fits with the; legacy evaluation backend (e.g., the old test statistic classes). In this case, The top-level `RooNLLVar` actually doesn't do anything; but contains pointers to the NLLs for the individual channels. The; function call to enable the offsetting must be delegated to those. A unit test that covers this is also implemented. Note that for the new CPU evaluation backend, this is working already. A second commit in this PR is fixing a copy-paste error in the functions that define the evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13890
https://github.com/root-project/root/pull/13890:113,Testability,test,test,113,"Also support the `Offset(""bin"")` feature in simultaneous fits with the; legacy evaluation backend (e.g., the old test statistic classes). In this case, The top-level `RooNLLVar` actually doesn't do anything; but contains pointers to the NLLs for the individual channels. The; function call to enable the offsetting must be delegated to those. A unit test that covers this is also implemented. Note that for the new CPU evaluation backend, this is working already. A second commit in this PR is fixing a copy-paste error in the functions that define the evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13890
https://github.com/root-project/root/pull/13890:350,Testability,test,test,350,"Also support the `Offset(""bin"")` feature in simultaneous fits with the; legacy evaluation backend (e.g., the old test statistic classes). In this case, The top-level `RooNLLVar` actually doesn't do anything; but contains pointers to the NLLs for the individual channels. The; function call to enable the offsetting must be delegated to those. A unit test that covers this is also implemented. Note that for the new CPU evaluation backend, this is working already. A second commit in this PR is fixing a copy-paste error in the functions that define the evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13890
https://github.com/root-project/root/pull/13891:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13879; - https://github.com/root-project/root/pull/13881; - https://github.com/root-project/root/pull/13883; - https://github.com/root-project/root/pull/12390; - https://github.com/root-project/root/pull/7539; - https://github.com/root-project/root/pull/13894; - https://github.com/root-project/root/pull/7993; - https://github.com/root-project/root/pull/5361; - https://github.com/root-project/root/pull/7687. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13870,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13891
https://github.com/root-project/root/pull/13892:106,Modifiability,config,config,106,"Like for RooFit previously, this commit applies the `clang-tidy` suggestions from the battle-tested CMSSW config file: https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. I scrolled over the changes, and they look unintrusive. It's mostly replacing `0` and `1` literals with `false` and `true`, replaces the included headers, and uses more `empty()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:93,Testability,test,tested,93,"Like for RooFit previously, this commit applies the `clang-tidy` suggestions from the battle-tested CMSSW config file: https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. I scrolled over the changes, and they look unintrusive. It's mostly replacing `0` and `1` literals with `false` and `true`, replaces the included headers, and uses more `empty()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13893:307,Deployability,release,release,307,1. Fix - expand item in hierarchy painter; 2. Fix - correctly use saved TF1 values for non-equidistant bins ; 3. Fix - in log scales replace 10^1 label by 10; 4. Fix - vertical align of log labels on X axis; 5. Fix - second click of the same item in hierarchy painter. Branch 7.5 of jsroot is base for 6.30 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13893
https://github.com/root-project/root/pull/13893:122,Testability,log,log,122,1. Fix - expand item in hierarchy painter; 2. Fix - correctly use saved TF1 values for non-equidistant bins ; 3. Fix - in log scales replace 10^1 label by 10; 4. Fix - vertical align of log labels on X axis; 5. Fix - second click of the same item in hierarchy painter. Branch 7.5 of jsroot is base for 6.30 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13893
https://github.com/root-project/root/pull/13893:186,Testability,log,log,186,1. Fix - expand item in hierarchy painter; 2. Fix - correctly use saved TF1 values for non-equidistant bins ; 3. Fix - in log scales replace 10^1 label by 10; 4. Fix - vertical align of log labels on X axis; 5. Fix - second click of the same item in hierarchy painter. Branch 7.5 of jsroot is base for 6.30 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13893
https://github.com/root-project/root/pull/13894:590,Availability,error,error,590,"The `R__ALWAYS_INLINE` macro was introduced by commit b7c9be5 in TBufferJSON. However, it breaks the build with GCC and the `-Og` flag, for debug-compatible optimizations:. ```txt; In member function ‘void TBufferJSON::JsonWriteFastArray(const T*, Int_t, const char*, void (TBufferJSON::*)(const T*, Int_t, const char*)) [with T = bool]’,; inlined from ‘virtual void TBufferJSON::WriteFastArray(const Bool_t*, Int_t)’ at /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3296:22:; /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3034:23: error: inlining failed in call to ‘always_inline’ ‘void TBufferJSON::JsonWriteArrayCompress(const T*, Int_t, const char*) [with T = bool]’: function not considered for inlining; 3034 | R__ALWAYS_INLINE void TBufferJSON::JsonWriteArrayCompress(const T *vname, Int_t arrsize, const char *typname); ```. Libraries other than ROOT have also encountered similar problems: https://github.com/Cyan4973/xxHash/pull/804. The `R__ALWAYS_INLINE` macro is probably not necessary for these templated functions, because the compiler figures out itself whether it's worth to inline the templated functions or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/pull/13894:157,Performance,optimiz,optimizations,157,"The `R__ALWAYS_INLINE` macro was introduced by commit b7c9be5 in TBufferJSON. However, it breaks the build with GCC and the `-Og` flag, for debug-compatible optimizations:. ```txt; In member function ‘void TBufferJSON::JsonWriteFastArray(const T*, Int_t, const char*, void (TBufferJSON::*)(const T*, Int_t, const char*)) [with T = bool]’,; inlined from ‘virtual void TBufferJSON::WriteFastArray(const Bool_t*, Int_t)’ at /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3296:22:; /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3034:23: error: inlining failed in call to ‘always_inline’ ‘void TBufferJSON::JsonWriteArrayCompress(const T*, Int_t, const char*) [with T = bool]’: function not considered for inlining; 3034 | R__ALWAYS_INLINE void TBufferJSON::JsonWriteArrayCompress(const T *vname, Int_t arrsize, const char *typname); ```. Libraries other than ROOT have also encountered similar problems: https://github.com/Cyan4973/xxHash/pull/804. The `R__ALWAYS_INLINE` macro is probably not necessary for these templated functions, because the compiler figures out itself whether it's worth to inline the templated functions or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/issues/13895:167,Availability,error,errors,167,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. when doing a pol1 fit for the TGraphErrors in PyROOT, fitter goes nuts if slope is<0, and x errors< y errors.; easily reproducible; all conditions must be met; using guesses doesn't help, not limiting.; i tried limiting/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:177,Availability,error,errors,177,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. when doing a pol1 fit for the TGraphErrors in PyROOT, fitter goes nuts if slope is<0, and x errors< y errors.; easily reproducible; all conditions must be met; using guesses doesn't help, not limiting.; i tried limiting/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:561,Availability,ERROR,ERROR,561,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. when doing a pol1 fit for the TGraphErrors in PyROOT, fitter goes nuts if slope is<0, and x errors< y errors.; easily reproducible; all conditions must be met; using guesses doesn't help, not limiting.; i tried limiting/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:625,Availability,ERROR,ERROR,625,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. when doing a pol1 fit for the TGraphErrors in PyROOT, fitter goes nuts if slope is<0, and x errors< y errors.; easily reproducible; all conditions must be met; using guesses doesn't help, not limiting.; i tried limiting/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:1543,Availability,error,error,1543,".27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:1939,Availability,RELIAB,RELIABILITY,1939,"ay([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2225,Availability,ERROR,ERROR,2225," on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2296,Availability,ERROR,ERROR,2296,"thod. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2434,Availability,ERROR,ERROR,2434,"from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2538,Availability,ERROR,ERROR,2538,"inux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2609,Availability,ERROR,ERROR,2609,"***. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:2813,Availability,ERROR,ERROR,2813,"*********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGAT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3059,Availability,ERROR,ERROR,3059,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3125,Availability,ERROR,ERROR,3125,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3268,Availability,ERROR,ERROR,3268,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3539,Availability,ERROR,ERROR,3539,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3713,Availability,ERROR,ERROR,3713,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3767,Availability,ERROR,ERRORS,3767,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:3791,Availability,ERROR,ERROR,3791,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:1286,Deployability,Install,Installation,1286,"g/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:1320,Deployability,install,installer,1320,"ions shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:1404,Testability,test,tested,1404,"typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/pull/13897:324,Deployability,update,updated,324,# This Pull request:. Adds RNTuple support for `std::atomic<T>`. The inner type `T` has to be an I/O supported type. On-disk representation is identical between atomic `T` and plain `T` except for an extra marker field for the atomic wrapper. CMS MiniAOD use atomic types. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13897
https://github.com/root-project/root/pull/13897:234,Integrability,wrap,wrapper,234,# This Pull request:. Adds RNTuple support for `std::atomic<T>`. The inner type `T` has to be an I/O supported type. On-disk representation is identical between atomic `T` and plain `T` except for an extra marker field for the atomic wrapper. CMS MiniAOD use atomic types. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13897
https://github.com/root-project/root/pull/13897:294,Testability,test,tested,294,# This Pull request:. Adds RNTuple support for `std::atomic<T>`. The inner type `T` has to be an I/O supported type. On-disk representation is identical between atomic `T` and plain `T` except for an extra marker field for the atomic wrapper. CMS MiniAOD use atomic types. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13897
https://github.com/root-project/root/pull/13898:116,Availability,avail,available,116,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13898
https://github.com/root-project/root/pull/13898:360,Deployability,update,updated,360,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13898
https://github.com/root-project/root/pull/13898:36,Modifiability,config,config,36,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13898
https://github.com/root-project/root/pull/13898:330,Testability,test,tested,330,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13898
https://github.com/root-project/root/pull/13898:219,Usability,simpl,simple,219,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13898
https://github.com/root-project/root/pull/13900:280,Testability,Test,Test,280,This fixes #13574. This prevents complains about the internals of `unique_ptr` when we are just investigating its suitability for streaming. . Also do not complains about a transient `std::tuple` even if we can not stream it (for example if one of component is a private entity). Test at https://github.com/root-project/roottest/pull/1030,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13901:670,Deployability,update,updated,670,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13901
https://github.com/root-project/root/pull/13901:17,Performance,optimiz,optimization,17,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13901
https://github.com/root-project/root/pull/13901:640,Testability,test,tested,640,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13901
https://github.com/root-project/root/pull/13902:349,Deployability,update,updated,349,"These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. Fixes https://github.com/root-project/root/issues/13543. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:319,Testability,test,tested,319,"These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. Fixes https://github.com/root-project/root/issues/13543. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13903:91,Performance,perform,performs,91,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13903
https://github.com/root-project/root/pull/13903:103,Testability,assert,assert,103,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13903
https://github.com/root-project/root/pull/13903:206,Testability,assert,assert,206,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13903
https://github.com/root-project/root/pull/13903:500,Testability,assert,assert,500,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13903
https://github.com/root-project/root/issues/13906:264,Availability,Error,Error,264,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Tutorial macro crashes when running:; ```; root -l ""tutorials/fit/fit2dHist.C(11)"" ; ```. ### Reproducer. Produces output:; ```; Processing tutorials/fit/fit2dHist.C(11)...; Do global fit; Error in <ROOT::Math::Fitter::SetFCN>: wrong fit parameter settings; terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13906
https://github.com/root-project/root/issues/13906:515,Deployability,Install,Installation,515,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Tutorial macro crashes when running:; ```; root -l ""tutorials/fit/fit2dHist.C(11)"" ; ```. ### Reproducer. Produces output:; ```; Processing tutorials/fit/fit2dHist.C(11)...; Do global fit; Error in <ROOT::Math::Fitter::SetFCN>: wrong fit parameter settings; terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13906
https://github.com/root-project/root/pull/13907:112,Availability,down,down,112,"Implemented the systematic variations in the Higgs to Four Leptons tutorial.; The revised plot shows the up and down variations; of the total Monte Carlo weight (scale factor), together with; the uncertainty band in between those lines.; The C++ version of the full tutorial is now also available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13907
https://github.com/root-project/root/pull/13907:287,Availability,avail,available,287,"Implemented the systematic variations in the Higgs to Four Leptons tutorial.; The revised plot shows the up and down variations; of the total Monte Carlo weight (scale factor), together with; the uncertainty band in between those lines.; The C++ version of the full tutorial is now also available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13907
https://github.com/root-project/root/pull/13908:155,Testability,log,logv,155,"1. Correctly fill stats box with fit function parameters; 2. Correctly show `#chi^{2}` in stats box; 3. Support color palette in th3 drawings; 4. Support ""logv"" draw option for all histogram classes - log scale for content; 5. Support ""[cutg]"" draw option for TH2/TF2 surface plots; 6. Fix fit2dHist.C macro - do not draw interim fit results; 7. Implement tickz draw option, used for color palette ticks; 8. Implement skewness and kurtosis calculations for histogram stats box",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13908
https://github.com/root-project/root/pull/13908:201,Testability,log,log,201,"1. Correctly fill stats box with fit function parameters; 2. Correctly show `#chi^{2}` in stats box; 3. Support color palette in th3 drawings; 4. Support ""logv"" draw option for all histogram classes - log scale for content; 5. Support ""[cutg]"" draw option for TH2/TF2 surface plots; 6. Fix fit2dHist.C macro - do not draw interim fit results; 7. Implement tickz draw option, used for color palette ticks; 8. Implement skewness and kurtosis calculations for histogram stats box",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13908
https://github.com/root-project/root/pull/13909:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890; - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13909
https://github.com/root-project/root/issues/13910:298,Availability,failure,failure,298,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1054,Availability,error,errors,1054,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1240,Deployability,Install,Installation,1240,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:194,Usability,clear,clear,194,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/pull/13912:91,Performance,perform,performs,91,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:103,Testability,assert,assert,103,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:206,Testability,assert,assert,206,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:404,Testability,assert,assert,404,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:748,Testability,assert,assert-free,748,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/issues/13913:165,Availability,failure,failure,165,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1539,Deployability,Install,Installation,1539,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:155,Testability,assert,assertion,155,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:487,Testability,Assert,Assertion,487,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1044,Testability,test,test,1044,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/pull/13915:38,Deployability,configurat,configuration,38,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:382,Deployability,configurat,configuration,382,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:507,Deployability,configurat,configuration,507,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:158,Integrability,interface,interface,158,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:38,Modifiability,config,configuration,38,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:258,Modifiability,config,config,258,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:382,Modifiability,config,configuration,382,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:507,Modifiability,config,configuration,507,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:55,Safety,avoid,avoid,55,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:328,Safety,avoid,avoided,328,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:584,Safety,Avoid,Avoid,584,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13916:22,Usability,progress bar,progress bar,22,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13916
https://github.com/root-project/root/issues/13917:1098,Deployability,Install,Installation,1098,"### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/pull/13918:167,Availability,error,errors,167,"This pull request fixes the search for contour points in Minuit2. ; Three separated problems were identified (see the commit messages); - a bug in Minos for computing errors when close to the border; - an issue in finding the contour point in case the first attempt failed.; - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:125,Integrability,message,messages,125,"This pull request fixes the search for contour points in Minuit2. ; Three separated problems were identified (see the commit messages); - a bug in Minos for computing errors when close to the border; - an issue in finding the contour point in case the first attempt failed.; - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13921:22,Usability,progress bar,progress bar,22,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13921
https://github.com/root-project/root/issues/13922:584,Deployability,Install,Installation,584,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS.; 2. Setup LCG view with the latest ROOT; ```; lsetup ""views LCG_104b x86_64-el9-gcc13-opt""; ```; 3. Inspect any file with `rootls`.; 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13924:473,Deployability,configurat,configuration,473,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:65,Integrability,wrap,wrapper,65,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:102,Integrability,interface,interface,102,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:831,Integrability,interface,interface,831,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:473,Modifiability,config,configuration,473,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:124,Usability,usab,usability,124,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/pull/13925:56,Availability,error,errors,56,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:149,Availability,error,errors,149,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:188,Availability,failure,failure,188,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:226,Testability,test,test,226,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:492,Testability,test,test,492,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13926:134,Availability,error,errors,134,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:274,Availability,failure,failures,274,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:883,Availability,Error,Error,883,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:952,Availability,Error,Error,952,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:164,Deployability,configurat,configurations,164,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1359,Deployability,configurat,configurations,1359,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:164,Modifiability,config,configurations,164,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1359,Modifiability,config,configurations,1359,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1324,Performance,concurren,concurrently,1324,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:128,Safety,avoid,avoid,128,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1433,Testability,test,tested,1433,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/issues/13927:300,Availability,failure,failure,300,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1009,Deployability,release,releases,1009,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1023,Deployability,Install,Installation,1023,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:338,Usability,Simpl,Simple,338,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/pull/13929:84,Usability,guid,guide,84,Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13929
https://github.com/root-project/root/pull/13930:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911; - https://github.com/root-project/root/pull/13914; - https://github.com/root-project/root/pull/13109; - https://github.com/root-project/root/pull/13905; - https://github.com/root-project/root/pull/13925; - https://github.com/root-project/root/pull/13912; - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13909,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13931:298,Deployability,update,updated,298,"# This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer.; Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:268,Testability,test,tested,268,"# This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer.; Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13934:137,Performance,perform,performed,137,"In some old examples ""same"" and ""sames"" draw options for TF1 was used. ; Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13936:127,Deployability,Update,Update,127,1. Properly use saved buffers in functions; 2. Properly invoke context menu; 3. Support histograms creation for `TGraph2D`; 4. Update JSROOT code. Backport some changes which will be submitted to master soon,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13937:111,Deployability,Update,Update,111,"1. Call TF1::Save with non-zero arguments, avoiding #13927 ; 2. Supports histogram creation for `TGraph2D`; 3. Update JSROOT with correspondent changes; 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:43,Safety,avoid,avoiding,43,"1. Call TF1::Save with non-zero arguments, avoiding #13927 ; 2. Supports histogram creation for `TGraph2D`; 3. Update JSROOT with correspondent changes; 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13939:910,Integrability,interface,interface,910,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1037,Integrability,interface,interfaces,1037,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1082,Integrability,interface,interfaces,1082,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:670,Usability,simpl,simply,670,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13940:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918; - https://github.com/root-project/root/pull/13931; - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13941:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13942:72,Modifiability,config,configured,72,"In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. ; Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13942
https://github.com/root-project/root/pull/13943:72,Modifiability,config,configured,72,"In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13943
https://github.com/root-project/root/pull/13944:86,Deployability,release,release,86,Others are taken care by linked issues and will end up in the list of bugfixes of the release notes automatically,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13944
https://github.com/root-project/root/pull/13945:72,Modifiability,config,configured,72,"In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13945
https://github.com/root-project/root/pull/13946:81,Deployability,install,installation,81,# This Pull request:. ## Changes or fixes:; - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:208,Deployability,update,updated,208,# This Pull request:. ## Changes or fixes:; - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:178,Testability,test,tested,178,# This Pull request:. ## Changes or fixes:; - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13947:245,Deployability,update,updated,245,* Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13947:215,Testability,test,tested,215,* Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13948:227,Deployability,update,updated,227,Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:197,Testability,test,tested,197,Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13949:190,Availability,Error,Error,190,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:404,Availability,failure,failure,404,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:515,Testability,test,tests,515,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13950:86,Integrability,wrap,wrapped,86,"Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13953:67,Deployability,configurat,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:67,Modifiability,config,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:262,Performance,perform,performance-for-range-copy,262,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:294,Performance,perform,performance-unnecessary-copy-initialization,294,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13954:67,Deployability,configurat,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:67,Modifiability,config,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:262,Performance,perform,performance-for-range-copy,262,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:294,Performance,perform,performance-unnecessary-copy-initialization,294,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13956:170,Deployability,update,updated,170,"Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy!. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13956:140,Testability,test,tested,140,"Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy!. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13957:159,Deployability,update,updated,159,parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:129,Testability,test,tested,129,parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/issues/13958:580,Deployability,Install,Installation,580,"### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment.; - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:241,Usability,clear,clear,241,"### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment.; - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13962:188,Availability,error,error-thnsparse,188,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:279,Deployability,Install,Installation,279,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13964:527,Deployability,Install,Installation,527,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:; ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```; $ root --web=off; root [0] h->Draw();; ... save the image as png; ... exit root; ... look at the png; ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok.; - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13965:423,Deployability,Install,Installation,423,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:480,Deployability,release,release,480,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:114,Testability,assert,assertion,114,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:218,Testability,Assert,Assertion,218,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:91,Usability,simpl,simple,91,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/pull/13966:118,Usability,simpl,simplify,118,This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13967:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13970:218,Deployability,update,updated,218,From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:188,Testability,test,tested,188,From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13972:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13972:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13974:0,Deployability,Patch,Patches,0,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:254,Deployability,update,updated,254,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:163,Testability,test,tested,163,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:224,Testability,test,tested,224,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13975:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13975:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13976:13,Deployability,release,release,13,Add TScatter release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13976
https://github.com/root-project/root/pull/13978:174,Deployability,Update,Update,174,Correctly call TF1::Save with full range to be sure storing is correct; Support functions in TMultiGraph; Create real histogram for TGraph2D when `tri` option is configured; Update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:162,Modifiability,config,configured,162,Correctly call TF1::Save with full range to be sure storing is correct; Support functions in TMultiGraph; Create real histogram for TGraph2D when `tri` option is configured; Update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13979:36,Testability,test,testing,36,Correctly write number of bins; Add testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13979
https://github.com/root-project/root/pull/13980:640,Modifiability,config,configured,640,1. Fix - correctly set visibility level for geo drawing; 2. Fix - use more factor for number of nodes in geo drawing; 3. Fix - add missing Chebyshev0 function; 4. Fix - provide Gaus with normalization; 5. Fix - call 3D rendering after adding TPolyLine3D; 6. Fix - properly add interactive resize elements; 7. Fix - drop handling on tabs layout; 8. Fix - member-wise streaming of std::map #262; 9. Fix - typo in expandItem; 10. Fix - add missing import in RPavePainter; 11. Fix - prevent drawing of empty TGraph; 12. Fix - use semicolon in RH3; 13. Fix - prevent zero division when drawing TGraph exclusion; 14. Fix - draw th2 col bins with configured y bar; 15. Fix - let handle derived classes from TH1/TH2 #269; 16. Fix - add support of #mp symbol; 17. Fix - support TMath::Sq() function; 18. Fix - prevent drawing of empty TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13986:57,Modifiability,variab,variable,57,"In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13987:57,Modifiability,variab,variable,57,"In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13988:67,Deployability,configurat,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:67,Modifiability,config,configuration,67,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:262,Performance,perform,performance-for-range-copy,262,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:294,Performance,perform,performance-unnecessary-copy-initialization,294,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13989:214,Usability,simpl,simply,214,"# This Pull request:; In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13991:928,Availability,error,errors,928,"This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned; commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check; in `cmake/modules/SearchInstalledSoftware.cmake`:; ```cmake; if(tmva-gpu AND NOT CUDA_FOUND); set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE); endif(); ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not; used. That means that `tmva-gpu` was silently disabled, and not building; successfully (which I had wrongly concluded because of the absence of; errors). This check needs to be replaced with; `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the; `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular; `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with; `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only; `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT; itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html; * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:727,Modifiability,variab,variable,727,"This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned; commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check; in `cmake/modules/SearchInstalledSoftware.cmake`:; ```cmake; if(tmva-gpu AND NOT CUDA_FOUND); set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE); endif(); ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not; used. That means that `tmva-gpu` was silently disabled, and not building; successfully (which I had wrongly concluded because of the absence of; errors). This check needs to be replaced with; `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the; `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular; `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with; `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only; `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT; itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html; * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:643,Performance,CACHE,CACHE,643,"This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned; commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check; in `cmake/modules/SearchInstalledSoftware.cmake`:; ```cmake; if(tmva-gpu AND NOT CUDA_FOUND); set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE); endif(); ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not; used. That means that `tmva-gpu` was silently disabled, and not building; successfully (which I had wrongly concluded because of the absence of; errors). This check needs to be replaced with; `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the; `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular; `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with; `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only; `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT; itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html; * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13995:165,Deployability,update,updated,165,# This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake; It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:135,Testability,test,tested,135,# This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake; It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/issues/13996:5669,Availability,ERROR,ERROR,5669,"ental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Found TTree: O2fdd_001; Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]; Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]; Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]; Convert leaf fTimeA [Float_t] --> field fTimeA [float]; Convert leaf fTimeC [Float_t] --> field fTimeC [float]; Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]; Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; =================================================================; ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0; #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0); #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25; #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65; #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297; #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #6 0x10469a73c in main ao2dToAO2NT.cxx:163; #7 0x186307f24 (<unknown module>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9254,Availability,error,error,9254,"te if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; };",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10414,Availability,error,error,10414,"ional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)ne",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10727,Availability,error,error,10727,", 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10836,Availability,error,error,10836,"e; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; // Create a model from the input tree; auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; // The dynamic cast to TBranch should never fail for GetListOfBranches(); assert(b);. // We assume every branch has a single leaf; a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13632,Availability,down,downloaded,13632,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14364,Deployability,Install,Installation,14364,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7714,Energy Efficiency,allocate,allocated,7714,"230090,0x00010b230094); freed by thread T0 here:; #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0); #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25; #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65; #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297; #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #6 0x10469a73c in main ao2dToAO2NT.cxx:163; #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:; #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8893,Integrability,message,message,8893,"ib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9098,Integrability,message,message,9098,"zer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9140,Integrability,message,message,9140,"zer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9197,Integrability,message,message,9197,"==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9223,Integrability,message,message,9223,"==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9279,Integrability,message,message,9279,"te if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; };",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9305,Integrability,message,message,9305,"te if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; };",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9521,Integrability,message,message,9521," file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9909,Integrability,message,message,9909," file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10022,Integrability,message,message,10022," file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13560,Modifiability,config,config,13560,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8210,Safety,ABORT,ABORTING,8210,"::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297; #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #6 0x10469a73c in main ao2dToAO2NT.cxx:163; #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:; #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8229,Safety,abort,abort,8229,"::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297; #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #6 0x10469a73c in main ao2dToAO2NT.cxx:163; #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:; #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:220,Testability,test,testdata,220,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```; TDirectoryFile; Found TDirectoryFile: DF_2463920048222775916; Found TTree: DbgEventExtra; Convert leaf fStart [Int_t] --> field fStart [std::int32_t]; Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]; Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Found TTree: O2bc; Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]; Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]; Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]; Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Found TTree: O2calo; Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]; Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]; Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]; Convert leaf fTime [Float_t] --> field fTime [float]; Convert leaf fCellType [Char_t] --> field fCellType [char]; Convert leaf fCaloType [Char_t] --> field fCaloType [char]; Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9174,Testability,log,log,9174,"==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11143,Testability,log,log,11143,"e; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; // Create a model from the input tree; auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; // The dynamic cast to TBranch should never fail for GetListOfBranches(); assert(b);. // We assume every branch has a single leaf; a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11544,Testability,log,log,11544,"; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; // Create a model from the input tree; auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; // The dynamic cast to TBranch should never fail for GetListOfBranches(); assert(b);. // We assume every branch has a single leaf; auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch; auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();; std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]""; << "" --> ""; << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached; // to the model's default entry, that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11970,Testability,assert,assert,11970,"es in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; // Create a model from the input tree; auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; // The dynamic cast to TBranch should never fail for GetListOfBranches(); assert(b);. // We assume every branch has a single leaf; auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch; auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();; std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]""; << "" --> ""; << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->Fir",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13643,Testability,test,test,13643,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13712,Testability,test,testdata,13712,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/pull/13997:197,Availability,fault,fault,197,"# This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/14002:53,Modifiability,Extend,Extend,53,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:660,Modifiability,inherit,inherited,660,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:207,Usability,simpl,simplify,207,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:388,Usability,Simpl,Simplify,388,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14003:148,Deployability,release,release,148,"So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`; to work for `roofit_multiprocess`, which is explained in the build; options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they; are needed. This PR superseeds two other PRs:; * https://github.com/root-project/root/pull/13995; * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:244,Deployability,release,released,244,"So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`; to work for `roofit_multiprocess`, which is explained in the build; options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they; are needed. This PR superseeds two other PRs:; * https://github.com/root-project/root/pull/13995; * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:66,Integrability,depend,depending,66,"So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`; to work for `roofit_multiprocess`, which is explained in the build; options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they; are needed. This PR superseeds two other PRs:; * https://github.com/root-project/root/pull/13995; * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/issues/14007:1945,Deployability,Install,Installation,1945,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++; #include <TFile.h>; #include <TTree.h>; #include <TDirectory.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #undef NDEBUG; #include <cassert>. int writeTree(); {; TFile* f;; int x = 0;; f = new TFile(""foo.root"", ""RECREATE"");; auto* dir = f->mkdir(""dir"");; dir->cd();; auto* tree = new TTree(""T"", ""a Tree"");; tree->Branch(""x"", &x, ""x/D"");; for (int i = 0; i < 10; i++) {; x = i;; tree->Fill();; }; tree->Write();. using namespace ROOT::Experimental;; // Create and fill an RNTuple; auto model = RNTupleModel::Create();; auto wrPt = model->MakeField<float>(""pt"", 42.0);. {; RNTupleWriteOptions options;; options.SetContainerFormat(ENTupleContainerFormat::kBare);; auto* bar = f->mkdir(""bar"");; bar->cd();; ; auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);; bool ok = bar->cd();. ntuple->Fill();; ntuple->CommitCluster();; *wrPt = 24.0;; ntuple->Fill();; *wrPt = 12.0;; ntuple->Fill();; ntuple->CommitCluster();; }. return 0;; }; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/pull/14011:694,Availability,redundant,redundant-string-cstr,694,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:295,Deployability,release,release,295,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:804,Deployability,release,release,804,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:501,Performance,perform,performance-inefficient-algorithm,501,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:538,Performance,perform,performance-inefficient-vector-operation,538,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:582,Performance,perform,performance-faster-string-find,582,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:616,Performance,perform,performance-move-const-arg,616,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:694,Safety,redund,redundant-string-cstr,694,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/issues/14012:924,Deployability,Install,Installation,924,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; root [0] .L sparsehist.C ; root [1] .x sparsehist.C ; Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255.; Abort trap: 6; ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 02 2023, 22:29:51 |; | From heads/master-13574@v6-31-01-108-g1cf66addc0 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:256,Safety,Abort,Abort,256,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; root [0] .L sparsehist.C ; root [1] .x sparsehist.C ; Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255.; Abort trap: 6; ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 02 2023, 22:29:51 |; | From heads/master-13574@v6-31-01-108-g1cf66addc0 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:134,Testability,Assert,Assertion,134,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; root [0] .L sparsehist.C ; root [1] .x sparsehist.C ; Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255.; Abort trap: 6; ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 02 2023, 22:29:51 |; | From heads/master-13574@v6-31-01-108-g1cf66addc0 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/pull/14013:67,Deployability,Update,Update,67,"1. Fix small problems in glvox2.C, let ot work with web canvas; 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14015:359,Deployability,update,updates,359,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:620,Deployability,update,updated,620,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:590,Testability,test,tested,590,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/issues/14016:1671,Availability,error,error,1671,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1553,Deployability,Install,Installation,1553,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:317,Testability,Test,TestSfinae,317,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:738,Testability,test,testing,738,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:748,Testability,Test,TestSfinae,748,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:809,Testability,test,testing,809,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:878,Testability,test,testing,878,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:938,Testability,test,testing,938,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:958,Testability,Test,TestSfinae,958,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:981,Testability,test,testing,981,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template igno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1012,Testability,test,testing,1012,"Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1750,Testability,Test,TestSfinae,1750,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1775,Testability,Test,TestSfinae,1775,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/pull/14017:80,Integrability,Interface,Interface,80,# This Pull request:; Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:; Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:221,Testability,test,tested,221,# This Pull request:; Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:; Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14018:660,Availability,error,errors,660,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:771,Deployability,update,updated,771,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:741,Testability,test,tested,741,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14019:70,Deployability,release,release,70,This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14019
https://github.com/root-project/root/pull/14021:274,Deployability,integrat,integrating,274,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:380,Deployability,integrat,integration-of-roobdecay-and-rooabsanaconvpdf,380,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:771,Deployability,integrat,integration,771,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:274,Integrability,integrat,integrating,274,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:380,Integrability,integrat,integration-of-roobdecay-and-rooabsanaconvpdf,380,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:771,Integrability,integrat,integration,771,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:445,Modifiability,rewrite,rewrites,445,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:618,Modifiability,refactor,refactored,618,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:738,Modifiability,refactor,refactored,738,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:530,Safety,avoid,avoid,530,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:757,Testability,test,tested,757,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:783,Testability,test,tests,783,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:880,Testability,test,test,880,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14022:88,Availability,error,error,88,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:536,Deployability,Update,Update,536,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:70,Usability,Simpl,Simple,70,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/issues/14024:1192,Deployability,Install,Installation,1192,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```; git fetch origin refs/pull/13900/head:master-13574; git checkout master-13574; git rebase master; ; From https://github.com/root-project/root; ```. but we have as part of the cmake invocation. ```; -- Found roottest: /github/home/ROOT-CI/src/roottest; -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574); From https://github.com/pcanal/roottest; * [new branch] master-13574 -> master-13574; Switched to branch 'master-13574'; ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/pull/14025:36,Usability,Guid,Guide,36,Fix also links to the correct Users Guide and keep when needed link to old web site using the correct link : https://tmva.sourceforge.net/old_site/. This PR fixes #7627,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14025
https://github.com/root-project/root/issues/14030:478,Deployability,Install,Installation,478,"### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:156,Safety,avoid,avoid,156,"### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14032:298,Availability,failure,failures,298,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:319,Availability,Error,Error,319,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:348,Availability,error,error,348,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:375,Availability,Error,Error,375,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:404,Availability,error,error,404,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:431,Availability,Error,Error,431,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:460,Availability,error,error,460,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:487,Availability,Error,Error,487,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:516,Availability,error,error,516,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:543,Availability,Error,Error,543,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:572,Availability,error,error,572,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:599,Availability,Error,Error,599,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:628,Availability,error,error,628,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:655,Availability,Error,Error,655,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:684,Availability,error,error,684,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:711,Availability,Error,Error,711,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:740,Availability,error,error,740,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1077,Deployability,Install,Installation,1077,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/pull/14034:117,Safety,avoid,avoids,117,"At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:33,Testability,test,tests,33,"At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/issues/14037:8935,Deployability,release,release,8935,"valid next size (fast); ninja: build stopped: subcommand failed.; ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D); - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification.; Thanks!. ### Reproducer. ```; mkdir root_build;; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; cd root_build; cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16; ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9672,Deployability,Install,Installation,9672,"valid next size (fast); ninja: build stopped: subcommand failed.; ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D); - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification.; Thanks!. ### Reproducer. ```; mkdir root_build;; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; cd root_build; cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16; ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5252,Modifiability,variab,variable,5252," char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so; #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so; #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so; #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so; #23 0x00000000004011ad in main (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1561,Performance,optimiz,optimized,1561,"iler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash.; This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1703,Performance,optimiz,optimized,1703,"sr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash.; This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::Simpli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2350,Usability,simpl,simplifyCFG,2350,"tions; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2444,Usability,Simpl,SimplifyCFGOptions,2444,"tions; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2683,Usability,Simpl,SimplifyCFGOptions,2683,"c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2790,Usability,simpl,simplifyFunctionCFGImpl,2790,"07f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2893,Usability,Simpl,SimplifyCFGOptions,2893,"07f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5998,Usability,simpl,simplifyCFG,5998,"t the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6092,Usability,Simpl,SimplifyCFGOptions,6092,"t the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6331,Usability,Simpl,SimplifyCFGOptions,6331,"g at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6438,Usability,simpl,simplifyFunctionCFGImpl,6438,"chment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6541,Usability,Simpl,SimplifyCFGOptions,6541,"chment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9514,Usability,clear,clear,9514,"valid next size (fast); ninja: build stopped: subcommand failed.; ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D); - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification.; Thanks!. ### Reproducer. ```; mkdir root_build;; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; cd root_build; cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16; ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/pull/14038:2486,Availability,error,error,2486,"t contains the source TTree.; --outfile, -o path; The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet.; This may be the same file as the input file. Note that in this case the name of the target RNTuple should; be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:; --rntuple, -r name; The name of the target RNTuple.; This argument is optional. When not provided, the name of the source TTree will be used.; --compression, -c compression; The compression settings of the target RNTuple, provided as an integer.; This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),; where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} ; and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression).; If not specified, the default zstd (505) compression is used.; --unzipped-page-size size; The desired approximate unzipped (in-memory) page size in bytes, provided as an integer.; If not specified, the default size of 64 * 1024 bytes is used.; --zipped-cluster-size size; The desired approximate zipped cluster size in bytes, provided as an integer.; If not specified, the default size of 50 * 1000 * 1000 bytes is used.; --max-unzipped-cluster-size size; The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer.; If not specified, the default size of 512 * 1024 * 1024 bytes is used.; --convert-dots; Whether to convert dots in branch names (if present) to underscores in field names.; RNTuple does not allow for dots in field names, so this option will convert them to underscores.; If not specified, no conversion happens and an error is thrown when branch names with dots are encountered.; --verbose, -v; Whether to print schema information and progress.; If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1062,Safety,avoid,avoid,1062,"is PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```; Usage:; ttree2rntuple (--ttree|-t) name; (--infile|-i) path; (--outfile|-o) path; [(--rntuple|-r) name]; [(--compression|-c) compression]; [--unzipped-page-size size]; [--zipped-cluster-size size]; [--max-unzipped-cluster-size size]; [--convert-dots]; [(--verbose|-v)]; ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:; --ttree, -t name; The name of the source TTree to convert to RNTuple.; --infile, -i path; The path to the ROOT file that contains the source TTree.; --outfile, -o path; The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet.; This may be the same file as the input file. Note that in this case the name of the target RNTuple should; be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:; --rntuple, -r name; The name of the target RNTuple.; This argument is optional. When not provided, the name of the source TTree will be used.; --compression, -c compression; The compression settings of the target RNTuple, provided as an integer.; This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),; where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} ; and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression).; If not specified, the default zstd (505) compression is used.; --unzipped-page-size size; The desired approximate unzipped (in-memory) page size in bytes, provided as an integer.; If not specified, the default size of 64 * 1024 bytes is used.; --zipped-cluster-size size; The desired approximate zipped cluster size in bytes, provided as an integer.; If not specified, the default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14039:1282,Availability,error,error,1282,"urse, the width of the terminal will determine where the lines break):; ```; Usage:; rootreadspeed --files fname1 [fname2 ...]; --trees tname1 [tname2 ...]; (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]); [--threads nthreads]; [--tasks-per-worker ntasks]; rootreadspeed (--help|-h); ; Use -h for usage help, --help for detailed information. Arguments:; Specifying files and trees:; --files fname1 [fname2...]; The list of ROOT files to read from. --trees tname1 [tname2...]; The list of TTrees to read from the files.; If only one TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1432,Availability,error,error,1432,"all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]); [--threads nthreads]; [--tasks-per-worker ntasks]; rootreadspeed (--help|-h); ; Use -h for usage help, --help for detailed information. Arguments:; Specifying files and trees:; --files fname1 [fname2...]; The list of ROOT files to read from. --trees tname1 [tname2...]; The list of TTrees to read from the files.; If only one TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1620,Availability,avail,available,1620,"-help|-h); ; Use -h for usage help, --help for detailed information. Arguments:; Specifying files and trees:; --files fname1 [fname2...]; The list of ROOT files to read from. --trees tname1 [tname2...]; The list of TTrees to read from the files.; If only one TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5571,Availability,echo,echo,5571,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1952,Deployability,configurat,configurations,1952,"ne TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6451,Energy Efficiency,reduce,reduced,6451,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6027,Integrability,interface,interfaces,6027,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1952,Modifiability,config,configurations,1952,"ne TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1824,Performance,bottleneck,bottlenecks,1824,"ne TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1891,Performance,throughput,throughput,1891,"ne TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2093,Performance,throughput,throughputs,2093,"d using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2171,Performance,Throughput,Throughput,2171,"anch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2184,Performance,Throughput,Throughput,2184,"s with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2543,Performance,Throughput,Throughput,2543,"of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3060,Performance,optimiz,optimize,3060,"ughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3170,Performance,perform,performant,3170,"ughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3235,Performance,optimiz,optimize,3235,"se will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3411,Performance,perform,performant,3411,"se will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3600,Performance,bottleneck,bottleneck,3600,"luding decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is simila",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4165,Performance,perform,performance,4165,"hine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4676,Performance,Throughput,Throughput,4676,"The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4877,Performance,bottleneck,bottleneck,4877,"The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5219,Performance,cache,cache,5219,"f your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5467,Performance,cache,cache,5467,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5497,Performance,cache,cache,5497,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5664,Performance,cache,cache,5664,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5947,Performance,bottleneck,bottleneck,5947,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5985,Performance,perform,performed,5985,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3942,Security,access,access,3942,"analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2411,Testability,test,test,2411,"with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2969,Testability,log,logic,2969,"y providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6007,Testability,log,logic,6007,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5484,Usability,clear,clearing,5484,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14040:713,Deployability,update,update,713,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:163,Security,access,access,163,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:184,Security,hash,hashed,184,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:388,Security,access,access,388,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:7,Testability,log,logic,7,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:609,Testability,log,logic,609,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14041:694,Availability,redundant,redundant-string-cstr,694,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:295,Deployability,release,release,295,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:804,Deployability,release,release,804,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:501,Performance,perform,performance-inefficient-algorithm,501,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:538,Performance,perform,performance-inefficient-vector-operation,538,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:582,Performance,perform,performance-faster-string-find,582,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:616,Performance,perform,performance-move-const-arg,616,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:694,Safety,redund,redundant-string-cstr,694,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14043:38,Integrability,depend,depend,38,"It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame!. This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14044:2059,Availability,error,error,2059,"Benchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]; 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/); ```. I'm sure similar warnings also pop up in other places, but I just; happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:530,Deployability,Update,UpdateCArraysPtrs,530,"This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt; In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,; from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,; from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2148,Deployability,Update,UpdateCArraysPtrs,2148,"Benchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]; 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/); ```. I'm sure similar warnings also pop up in other places, but I just; happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:5,Safety,avoid,avoids,5,"This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt; In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,; from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,; from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14045:125,Modifiability,config,configured,125,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:7,Performance,scalab,scalable,7,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:599,Testability,test,testing,599,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:662,Testability,test,test,662,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14047:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021; - https://github.com/root-project/root/pull/14043; - https://github.com/root-project/root/pull/14044; - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - https://github.com/root-project/root/pull/14026; - https://github.com/root-project/root/pull/13863; - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13940,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:305,Integrability,depend,dependency,305,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021; - https://github.com/root-project/root/pull/14043; - https://github.com/root-project/root/pull/14044; - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - https://github.com/root-project/root/pull/14026; - https://github.com/root-project/root/pull/13863; - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13940,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14048:55,Availability,error,error,55,"As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:133,Availability,error,error,133,"As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14050:125,Safety,avoid,avoid,125,# This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots; - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:251,Testability,test,tested,251,# This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots; - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/issues/14051:729,Deployability,Install,Installation,729,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/pull/14052:126,Deployability,update,update,126,"This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist.; 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:; a. looking at the merge commit create by github; b. extracting the parents commit (from base and from the incoming branch); c. checkout the incoming branch commit; d. rebasing the base branch onto it. An alternative implementation could have been; e. checkout the commit merge; f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:457,Deployability,update,update,457,"This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist.; 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:; a. looking at the merge commit create by github; b. extracting the parents commit (from base and from the incoming branch); c. checkout the incoming branch commit; d. rebasing the base branch onto it. An alternative implementation could have been; e. checkout the commit merge; f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14053:55,Testability,test,test,55,# This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:69,Testability,test,testfile,69,# This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14054:154,Modifiability,config,configure,154,1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget; 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry; 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/issues/14055:2199,Deployability,Install,Installation,2199," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF; ```; the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON; ```; but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON; ```; and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:; ```; root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:377,Safety,detect,detected,377,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF; ```; the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON; ```; but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON; ```; and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:; ```; root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |; | From tags/v6-28-06@v6-28-06 |; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:338,Testability,test,tests,338,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF; ```; the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON; ```; but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON; ```; and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:; ```; root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |; | From tags/v6-28-06@v6-28-06 |; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1039,Testability,test,tests,1039,"uested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF; ```; the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON; ```; but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON; ```; and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:; ```; root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo',",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/pull/14056:32,Modifiability,refactor,refactoring,32,"This gives us more freedom when refactoring things to also support code; generation with AD. Also apply other code modernizations, like less use of `TString` or; delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14058:231,Integrability,interface,interface,231,Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. ; This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in ; `GSLMCIntegrator::ExtraOptions()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/issues/14061:267,Deployability,configurat,configuration,267,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:267,Modifiability,config,configuration,267,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:365,Security,hash,hash,365,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:689,Security,hash,hash,689,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:315,Testability,test,test,315,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:722,Testability,test,tests,722,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:230,Usability,usab,usable,230,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14062:385,Availability,failure,failure,385,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**; cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen; [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 73%] Linking CXX executable src/rootcling_stage1; [ 73%] Built target rootcling_stage1; [ 73%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:843,Availability,error,error,843,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**; cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen; [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 73%] Linking CXX executable src/rootcling_stage1; [ 73%] Built target rootcling_stage1; [ 73%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1275,Availability,error,error,1275,"pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen; [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 73%] Linking CXX executable src/rootcling_stage1; [ 73%] Built target rootcling_stage1; [ 73%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1725,Availability,error,error,1725,Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; Wh,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2153,Availability,error,error,2153, ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2453,Availability,error,error,2453,"ation is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2995,Availability,error,error,2995,"put_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3149,Availability,error,error,3149,"eclaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3482,Availability,error,error,3482,"td'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3815,Availability,error,error,3815,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3974,Availability,error,error,3974,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4334,Availability,error,error,4334,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4403,Availability,Error,Error,4403,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4410,Availability,Error,Error,4410,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4537,Availability,Error,Error,4537,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4621,Availability,Error,Error,4621,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4721,Deployability,Install,Installation,4721,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4416,Performance,load,loading,4416,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3362,Testability,assert,assert,3362,"ange_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3462,Testability,stub,stubs,3462,"0: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootclin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3494,Testability,stub,stubs-,3494,"td'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3537,Testability,stub,stubs-,3537," in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/pull/14063:275,Energy Efficiency,reduce,reduce,275,"TColor::GetColor(r,g,b) uses 5bit threshold by; default to create new colors. This differs; from normal X11 with 8bit colors. As a result,; images produced in batch and in interactive; session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and; reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:293,Safety,detect,detecting,293,"TColor::GetColor(r,g,b) uses 5bit threshold by; default to create new colors. This differs; from normal X11 with 8bit colors. As a result,; images produced in batch and in interactive; session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and; reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/issues/14065:135,Security,expose,expose,135,"### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python; ROOT.SetFont(""MyCustomFont.otf""); ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/pull/14066:0,Deployability,Update,Update,0,Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14066
https://github.com/root-project/root/pull/14067:470,Deployability,update,updated,470,"# This Pull request:; Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:; This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:191,Security,hash,hash,191,"# This Pull request:; Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:; This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:440,Testability,test,tested,440,"# This Pull request:; Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:; This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/issues/14068:984,Deployability,patch,patches,984,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1831,Deployability,patch,patches,1831,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:2012,Deployability,Install,Installation,2012,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:571,Modifiability,config,config,571,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:648,Modifiability,config,config,648,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1176,Modifiability,config,config,1176,"-----; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1285,Modifiability,config,config,1285,"OT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1376,Modifiability,config,config,1376,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1500,Modifiability,config,config,1500,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:2208,Modifiability,config,config,2208,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/pull/14069:8,Modifiability,extend,extends,8,"This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:153,Testability,test,tests,153,"This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:320,Testability,test,test,320,"This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14070:182,Safety,avoid,avoids,182,Apply the suggestions by the following two checks:. * `cppcoreguidelines-prefer-member-initializer`; * `modernize-use-default-member-init`. This makes the code much less verbose and avoids possible mistakes in the initialization. I carefully went over the changes manually to make sure that they are correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14070
https://github.com/root-project/root/issues/14102:3775,Availability,error,error,3775,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':; TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':; TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':; TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':; TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow; collect2: error: ld returned 1 exit status; gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3897,Availability,Error,Error,3897,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':; TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':; TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':; TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':; TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow; collect2: error: ld returned 1 exit status; gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3992,Availability,Error,Error,3992,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':; TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':; TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':; TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':; TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow; collect2: error: ld returned 1 exit status; gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4032,Availability,Error,Error,4032,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':; TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':; TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':; TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':; TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow; collect2: error: ld returned 1 exit status; gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/pull/14072:312,Safety,avoid,avoid,312,"This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14072:63,Testability,test,testing,63,"This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14074:38,Integrability,depend,dependency,38,"* Removes unneeded custom pdfs; * Fix dependency of RooStats tutorials on HistFactory test data creation; * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:86,Testability,test,test,86,"* Removes unneeded custom pdfs; * Fix dependency of RooStats tutorials on HistFactory test data creation; * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/issues/14075:2766,Availability,Error,Error,2766,"ead #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44; frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195; frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154; frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378; frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107; frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11; frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5572,Deployability,Install,Installation,5572,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32; frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19; frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22; frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19; frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22; frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9; frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6; frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24; frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb); ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5636,Deployability,RELEASE,RELEASE-,5636,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32; frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19; frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22; frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19; frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22; frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9; frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6; frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24; frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb); ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:848,Modifiability,plugin,plugins,848,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter.; Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):; ````; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1052,Performance,optimiz,optimize-regalloc,1052,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter.; Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):; ````; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1190,Performance,cache,cache-path,1190,"``; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1897,Safety,abort,abort,1897," interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44; frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195; frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154; frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14076:837,Deployability,Install,Installation,837,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution?; Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```; from ctypes import c_double, c_int; from ROOT import TFile, TTree,TCanvas; guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""); i = c_int(1); a = c_double(2.2); b = c_double(0.0). ming.Branch(""i"", i, ""i/I""); ming.Branch(""a"", a, ""a/D""); ming.Branch(""b"", a, ""b/D""). for j in range(100):; i = j; a = i * 0.1; b = a * a * 9; ming.Fill(); ; ming.Write(); # BUG; ming.Scan(); ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/pull/14077:658,Availability,error,error,658,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:694,Availability,failure,failure,694,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:809,Availability,error,errors,809,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:945,Availability,error,error,945,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1049,Deployability,update,updated,1049,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:664,Integrability,message,messages,664,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:951,Integrability,message,messages,951,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:975,Testability,log,logs,975,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1019,Testability,test,tested,1019,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14078:107,Deployability,update,updated,107,# This Pull request:. ## Changes or fixes:; Fix a typo. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:77,Testability,test,tested,77,# This Pull request:. ## Changes or fixes:; Fix a typo. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14080:189,Deployability,update,updated,189,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14080:159,Testability,test,tested,159,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14081:189,Deployability,update,updated,189,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14081:159,Testability,test,tested,159,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14082:359,Deployability,update,updates,359,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:569,Deployability,update,update,569,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:656,Deployability,update,updated,656,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:626,Testability,test,tested,626,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/issues/14084:887,Availability,error,error,887,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2388,Availability,Failure,Failure,2388,"roject/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::pair<char,std::int64_t> is in state: 2 and has: ; OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:485,Deployability,configurat,configuration,485,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:485,Modifiability,config,configuration,485,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2172,Security,checksum,checksum,2172,"roject/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::pair<char,std::int64_t> is in state: 2 and has: ; OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:334,Testability,test,tests,334,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1255,Testability,test,test,1255,"dules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::pair<char,std::int64_t> is in state: 2 and has: ; OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:3728,Testability,test,test,3728,"istOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440; #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", ; typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478; #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:3963,Testability,test,test,3963,"istOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440; #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", ; typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478; #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14085:217,Availability,ERROR,ERROR,217,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:655,Deployability,install,install,655,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1374,Deployability,Install,Installation,1374,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:115,Performance,optimiz,optimized,115,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/pull/14086:482,Deployability,update,update,482,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:72,Usability,Simpl,Simple,72,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14087:254,Testability,test,test,254,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:312,Testability,test,test,312,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:378,Testability,test,test,378,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:466,Testability,test,test,466,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:501,Testability,test,test,501,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:584,Testability,test,test,584,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:613,Testability,test,test,613,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:700,Testability,test,test,700,"Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```; void test(); {; TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");; TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");; if (res) { res->Next(); delete res; }; res = db->Query(""INSERT INTO test VALUES('1st');""; ""INSERT INTO test VALUES('2nd');"");; if (res) { res->Next(); delete res; }; }; ```; ```; $ root test.C; root [0]; Processing test.C...; Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14088:84,Deployability,Update,Update,84,Side effect when RBrowser runs and macro opens new TCanvas.; In such case `TCanvas::Update()` was not block and macro may fail because of it.; Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:195,Deployability,Update,Update,195,Side effect when RBrowser runs and macro opens new TCanvas.; In such case `TCanvas::Update()` was not block and macro may fail because of it.; Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14089:135,Deployability,update,updated,135,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:8,Modifiability,extend,extends,8,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:105,Testability,test,tested,105,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14090:22,Deployability,update,update,22,This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/issues/14091:523,Availability,error,errors,523,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,; It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```; #include ""TAxis.h""; #include ""Riostream.h""; #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x); {; //; // Get correct bin number from x value for TAxis ax; // ; Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);; return retVal;; }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0); {; //; // Test TAxis bug ; // ; TAxis *ax=new TAxis (nBins, xMin, xMax);; cout << ""Root version : "" << gROOT->GetVersion() << endl; ; for (Int_t i=1;i<=ax->GetNbins();i++); {; cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) ; << "" : "" << ; GetRightBin (ax, ax->GetBinLowEdge (i)); ; if (i != ax->FindBin (ax->GetBinLowEdge (i))); {; cout << "" <= Bug!!! "";; }; cout << endl;; }; cout << endl;; }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1469,Deployability,Install,Installation,1469,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,; It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```; #include ""TAxis.h""; #include ""Riostream.h""; #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x); {; //; // Get correct bin number from x value for TAxis ax; // ; Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);; return retVal;; }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0); {; //; // Test TAxis bug ; // ; TAxis *ax=new TAxis (nBins, xMin, xMax);; cout << ""Root version : "" << gROOT->GetVersion() << endl; ; for (Int_t i=1;i<=ax->GetNbins();i++); {; cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) ; << "" : "" << ; GetRightBin (ax, ax->GetBinLowEdge (i)); ; if (i != ax->FindBin (ax->GetBinLowEdge (i))); {; cout << "" <= Bug!!! "";; }; cout << endl;; }; cout << endl;; }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1007,Testability,Test,Test,1007,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,; It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```; #include ""TAxis.h""; #include ""Riostream.h""; #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x); {; //; // Get correct bin number from x value for TAxis ax; // ; Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);; return retVal;; }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0); {; //; // Test TAxis bug ; // ; TAxis *ax=new TAxis (nBins, xMin, xMax);; cout << ""Root version : "" << gROOT->GetVersion() << endl; ; for (Int_t i=1;i<=ax->GetNbins();i++); {; cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) ; << "" : "" << ; GetRightBin (ax, ax->GetBinLowEdge (i)); ; if (i != ax->FindBin (ax->GetBinLowEdge (i))); {; cout << "" <= Bug!!! "";; }; cout << endl;; }; cout << endl;; }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/pull/14092:154,Safety,avoid,avoid,154,Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:133,Testability,log,log,133,Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14093:372,Energy Efficiency,charge,charged-current,372,"This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/issues/14096:169,Availability,error,error,169,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:544,Deployability,Install,InstallArea,544,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:751,Deployability,Install,InstallArea,751,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:958,Deployability,Install,InstallArea,958,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2804,Deployability,Install,Installation,2804,".2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code causing the core dump; ```; if (rename(localPath, targetPath) != 0){; std::cout << ""File could not be renamed. Copying instead."" << std::endl;; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; remove(localPath.Data());; }; ```; Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```; > root -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/08 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |; | From tags/v6-28-08@v6-28-08 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:633,Security,Access,AccessPathName,633,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1542,Testability,test,test,1542,"xternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code causing the core dump; ```; if (rename(localPath, targetPath) != 0){; std::cout << ""File could not be renamed. Copying instead."" << std::endl;; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; remove(localPath.Data());; }; ```; Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```; > root -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/08 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14097:883,Deployability,Install,Installation,883,"### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do; ```python; import ROOT; from zork import dork; ```; I get; ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""path/to/ROOT/_facade.py"", line 154, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'zork'; ```; Whereas without this I just get; ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'zork'; ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/pull/14099:456,Deployability,update,updated,456,This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:426,Testability,test,tested,426,This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14100:205,Integrability,depend,depends,205,"In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:; https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/issues/14101:541,Deployability,Install,Installation,541,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation?. - class description should explain what it's for, usage examples; - each function needs documentation explaining parameters and what the function does; - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/pull/14105:43,Availability,error,error,43,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:303,Integrability,depend,depending,303,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:592,Testability,test,test,592,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:234,Usability,clear,clear,234,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14106:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14107:54,Availability,toler,tolerance,54,"This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:88,Testability,test,test,88,"This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14109:109,Deployability,update,updated,109,fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:79,Testability,test,tested,79,fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14111:249,Deployability,update,updated,249,# This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:219,Testability,test,tested,219,# This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14112:139,Deployability,update,updated,139,# This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:65,Testability,test,test,65,# This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:109,Testability,test,tested,109,# This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/issues/14113:1020,Availability,Error,Error,1020," ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | We",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1685,Availability,error,errors,1685,"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:86,Deployability,install,installed,86,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1726,Deployability,Install,Install,1726,"fault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the foll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2213,Deployability,patch,patches,2213,"cal/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2441,Deployability,Install,Installation,2441,"cal/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2543,Deployability,update,update,2543,"cal/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1121,Integrability,message,message,1121,"cation is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1661,Modifiability,Config,Configuring,1661,"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1883,Modifiability,CONFIG,CONFIG,1883,"/usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:289,Safety,Detect,Detecting,289,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:323,Safety,Detect,Detecting,323,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:498,Safety,Detect,Detecting,498,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:531,Safety,Detect,Detecting,531,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:571,Safety,Detect,Detecting,571,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:607,Safety,Detect,Detecting,607,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:787,Safety,Detect,Detecting,787,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:822,Safety,Detect,Detecting,822,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1777,Usability,simpl,simple,1777,"pped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/pull/14115:96,Deployability,configurat,configuration,96,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:96,Modifiability,config,configuration,96,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:55,Testability,test,test,55,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14119:326,Deployability,release,releases,326,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:216,Integrability,message,messages,216,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:59,Modifiability,config,configured,59,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:306,Security,secur,secure,306,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:156,Testability,test,tested,156,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14120:247,Testability,test,test,247,"This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/issues/14121:88,Availability,failure,failure,88,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:414,Availability,Error,Error,414,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:499,Availability,error,error,499,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:488,Integrability,message,message,488,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:522,Safety,abort,aborted,522,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:17,Testability,test,test,17,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:83,Testability,test,test,83,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:116,Testability,Test,TestSupport,116,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:262,Testability,test,test,262,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/pull/14125:80,Safety,avoid,avoids,80,These tutorials don't need to create an output root file of the traiining. This avoids potential problem of running the tutorials in parallel and writing on the same file,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14125
https://github.com/root-project/root/pull/14129:464,Deployability,update,updated,464,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:64,Performance,load,load,64,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:273,Performance,load,loaded,273,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:112,Safety,abort,aborting,112,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:137,Testability,assert,assert,137,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:434,Testability,test,tested,434,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14130:120,Availability,redundant,redundant,120,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:120,Safety,redund,redundant,120,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:243,Safety,Avoid,Avoid,243,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:234,Usability,guid,guide,234,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14131:396,Deployability,update,updated,396,"With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/pull/14131:366,Testability,test,tested,366,"With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/issues/14132:2768,Deployability,patch,patches,2768,"int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2800,Deployability,Install,Installation,2800,"int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2897,Deployability,release,release,2897,"int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:1076,Modifiability,config,config,1076,"tting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // this should triggr the snapshot; *act;; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:1896,Modifiability,config,config,1896,";; // this should triggr the snapshot; *act;; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora releas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:395,Testability,test,test,395,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // this should triggr the snapshot; *act;; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/pull/14135:87,Integrability,interface,interface,87,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:415,Security,access,access,415,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:59,Testability,test,test,59,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:210,Testability,assert,assert,210,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:52,Usability,simpl,simple,52,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14136:697,Deployability,integrat,integrate,697,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:697,Integrability,integrat,integrate,697,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:342,Security,authenticat,authentication,342,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:942,Security,checksum,checksum,942,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1123,Security,checksum,checksum,1123,"into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1343,Security,checksum,checksum,1343,"into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1429,Security,checksum,checksum,1429,"into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:2005,Security,checksum,checksum,2005,"into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14137:475,Deployability,update,updated,475,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:283,Modifiability,config,config,283,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:445,Testability,test,tested,445,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/issues/14138:125,Availability,error,errors,125,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:207,Availability,error,error,207,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:347,Availability,error,error,347,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:475,Availability,error,error,475,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:608,Availability,error,error,608,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:762,Availability,error,error,762,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:928,Availability,error,error,928,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1263,Availability,error,errors,1263,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1295,Availability,error,errors,1295,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1108,Deployability,Install,Installation,1108,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/pull/14139:251,Deployability,update,updated,251,"# This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:221,Testability,test,tested,221,"# This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14140:180,Deployability,update,updated,180,nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:150,Testability,test,tested,150,nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14141:194,Deployability,update,updated,194,"This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:164,Testability,test,tested,164,"This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14142:678,Deployability,Update,UpdateSchema,678,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:247,Integrability,wrap,wrapping,247,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:713,Integrability,depend,depends,713,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:653,Safety,Avoid,Avoid,653,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:1074,Safety,avoid,avoid,1074,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:773,Security,access,access,773,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:908,Testability,benchmark,benchmark,908,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14143:56,Performance,perform,performace,56,"It's a minor change that might or might not give better performace, but at least it means we can close this JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-6954",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14143
https://github.com/root-project/root/pull/14144:115,Integrability,depend,dependence,115,Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:37,Modifiability,config,config,37,Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:59,Modifiability,config,config,59,Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14145:92,Availability,error,errors,92,"Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:243,Availability,Error,Error,243,"Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14146:40,Availability,error,error,40,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:281,Availability,Error,Error,281,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:300,Availability,error,error,300,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:462,Availability,error,error,462,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:491,Availability,error,error,491,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:610,Availability,Error,Error,610,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:512,Modifiability,config,config,512,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/issues/14147:177,Modifiability,variab,variables,177,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:240,Modifiability,variab,variables,240,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:989,Modifiability,variab,variables,989,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1112,Modifiability,variab,variables,1112,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/pull/14149:93,Availability,error,error,93,"This reverts commit b327dd8fd159494666842607708140c429fa4055.; This should fix the following error:; ```; Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate; ```; as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:106,Availability,Error,Error,106,"This reverts commit b327dd8fd159494666842607708140c429fa4055.; This should fix the following error:; ```; Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate; ```; as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:132,Security,Authenticat,Authenticate,132,"This reverts commit b327dd8fd159494666842607708140c429fa4055.; This should fix the following error:; ```; Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate; ```; as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/issues/14153:511,Deployability,Update,Update,511,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram.; Then you draw it with COLZ.; Resulting canvas is empty.; In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```; auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);; h2->AddBinContent(16,5);; h2->Draw(""COLZ"");; ```. Nothing happens now, canvas is empty. You are forced to:. ```; h2->SetEntries(1); gPad->Modified();; gPad->Update();; ```. In contrast, with TH1, all works fine without calling SetEntries:. ```; auto h = new TH1I(""h"", ""h"", 10, 0, 1);; h->AddBinContent(3,5); h->Draw(); ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:877,Deployability,Install,Installation,877,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram.; Then you draw it with COLZ.; Resulting canvas is empty.; In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```; auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);; h2->AddBinContent(16,5);; h2->Draw(""COLZ"");; ```. Nothing happens now, canvas is empty. You are forced to:. ```; h2->SetEntries(1); gPad->Modified();; gPad->Update();; ```. In contrast, with TH1, all works fine without calling SetEntries:. ```; auto h = new TH1I(""h"", ""h"", 10, 0, 1);; h->AddBinContent(3,5); h->Draw(); ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/pull/14154:241,Availability,avail,available,241,"# This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`; You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:317,Deployability,update,updated,317,"# This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`; You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:287,Testability,test,tested,287,"# This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`; You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/issues/14155:3517,Availability,Error,Error,3517,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3693,Deployability,Install,Installation,3693,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3613,Integrability,message,message,3613,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2336,Modifiability,variab,variable,2336,"ce/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:988,Performance,optimiz,optimized,988,"heck duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1138,Performance,optimiz,optimized,1138,"enkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1920,Performance,optimiz,optimized,1920,"sdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1942,Performance,optimiz,optimized,1942,"sdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1969,Performance,optimiz,optimized,1969,"sdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3271,Performance,optimiz,optimized,3271,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3293,Performance,optimiz,optimized,3293,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3320,Performance,optimiz,optimized,3320,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:463,Safety,timeout,timeout,463,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:166,Testability,test,testReport,166,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:352,Testability,TEST,TEST,352,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:513,Testability,TEST,TEST,513,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3495,Testability,TEST,TEST,3495,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14156:235,Availability,error,errors,235,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:271,Availability,error,error,271,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:440,Availability,error,error,440,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2894,Deployability,Install,Installation,2894,"0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unwinding in libgcc; // assumes that two unwinding objects (for example coming from two modules); // are non-overlapping, which is hard to guarantee with separate allocations; // for the individual code sections.; ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```; import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():; ROOT.gInterpreter.ProcessLine ('aaa();'); return. def printstats (i):; vmsize = int (open('/proc/self/statm').read().split()[0]); nvma = len (open('/proc/self/maps').readlines()); print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'); return. for i in range(30000):; if i%100 == 0: printstats (i); once(); ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:285,Energy Efficiency,allocate,allocate,285,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:183,Performance,load,loaded,183,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1478,Performance,perform,performance,1478,"t what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unwinding in libgcc; // assumes that two unwinding objects (for example coming from two modules); // are non-overlapping, which is hard to guarantee with separate allocations; // for the individual code sections.; ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```; import RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:596,Usability,simpl,simple,596,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14157:161,Availability,error,errors,161,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:656,Availability,error,error,656,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:611,Deployability,configurat,configuration,611,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:666,Deployability,patch,patch,666,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1483,Deployability,Install,Installation,1483,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:611,Modifiability,config,configuration,611,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:522,Safety,abort,aborts,522,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14159:127,Availability,Error,Error,127,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:276,Availability,error,errors,276,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:577,Availability,error,error,577,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:219,Deployability,INSTALL,INSTALL,219,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:380,Deployability,INSTALL,INSTALL,380,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:698,Deployability,Install,Installation,698,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:874,Deployability,release,release,874,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:155,Integrability,message,message,155,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:252,Modifiability,Config,Configuring,252,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:1215,Security,access,access,1215,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/pull/14160:98,Availability,error,errors,98,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14160
https://github.com/root-project/root/pull/14160:643,Deployability,update,updated,643,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14160
https://github.com/root-project/root/pull/14160:287,Modifiability,variab,variable,287,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14160
https://github.com/root-project/root/pull/14160:613,Testability,test,tested,613,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14160
https://github.com/root-project/root/issues/14162:149,Availability,error,error,149,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:173,Availability,Error,Error,173,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:221,Availability,Error,Error,221,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:269,Availability,Error,Error,269,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:566,Deployability,install,installed,566,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:1376,Deployability,Install,Installation,1376,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14162:584,Integrability,depend,dependencies,584,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14162
https://github.com/root-project/root/issues/14163:193,Availability,error,error,193,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:278,Availability,Error,Error,278,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1202,Availability,error,error,1202,"elated to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1906,Availability,Error,Error,1906,"ovides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:178,Deployability,release,release,178,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:480,Deployability,configurat,configuration,480,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:582,Deployability,configurat,configuration,582,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:754,Deployability,install,installation,754,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:981,Deployability,install,installed,981,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1169,Deployability,install,install,1169,"th the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:3084,Deployability,Install,Installation,3084,"v. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:3112,Deployability,Release,Release,3112,"v. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1986,Integrability,message,message,1986,"cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:480,Modifiability,config,configuration,480,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:582,Modifiability,config,configuration,582,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:732,Modifiability,config,config,732,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:2576,Modifiability,CONFIG,CONFIG,2576,"v. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1339,Safety,Detect,Detecting,1339,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1373,Safety,Detect,Detecting,1373,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1470,Safety,Detect,Detecting,1470,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1503,Safety,Detect,Detecting,1503,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1543,Safety,Detect,Detecting,1543,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1579,Safety,Detect,Detecting,1579,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1681,Safety,Detect,Detecting,1681,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1716,Safety,Detect,Detecting,1716,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/issues/14163:1227,Testability,test,testroot,1227,"f it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14163
https://github.com/root-project/root/pull/14164:271,Availability,Failure,Failure,271,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:71,Deployability,Integrat,IntegrateSubrange,71,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:402,Deployability,Integrat,IntegrateSubrange,402,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:486,Deployability,update,updated,486,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:71,Integrability,Integrat,IntegrateSubrange,71,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:402,Integrability,Integrat,IntegrateSubrange,402,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:240,Testability,test,test,240,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:245,Testability,test,testRooTruthModel,245,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14164:456,Testability,test,tested,456,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14164
https://github.com/root-project/root/pull/14166:178,Deployability,update,updated,178,# This Pull request:. ## Changes or fixes:. Bad formatting of list in https://root.cern.ch/doc/master/classTGNumberEntry.html. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14166
https://github.com/root-project/root/pull/14166:148,Testability,test,tested,148,# This Pull request:. ## Changes or fixes:. Bad formatting of list in https://root.cern.ch/doc/master/classTGNumberEntry.html. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14166
https://github.com/root-project/root/pull/14167:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14164; - https://github.com/root-project/root/pull/14185; - https://github.com/root-project/root/pull/14174. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14047,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14167
https://github.com/root-project/root/pull/14168:129,Availability,error,erroring,129,"It's a very common pattern in the RooFit implementation and user code to check the type when adding to a `RooAbsCollection`, and erroring out if the type is not correct. This commit suggests a function in `RooAbsCollection` to do exactly this, drastically reducing the code duplication in RooFit and experiment frameworks like CMS combine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14168
https://github.com/root-project/root/issues/14169:179,Availability,error,error,179,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14169
https://github.com/root-project/root/issues/14169:198,Availability,Error,Error,198,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14169
https://github.com/root-project/root/issues/14169:424,Deployability,Install,Installation,424,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14169
https://github.com/root-project/root/issues/14169:233,Integrability,depend,dependencies,233,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14169
https://github.com/root-project/root/issues/14169:124,Modifiability,config,configure,124,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14169
https://github.com/root-project/root/pull/14170:72,Deployability,configurat,configuration,72,"This reverts commit 2ee691da61ca51e4dd857ac8c88f778948fb49a7, it breaks configuration with the latest XRootD 5.6.3, for example already found in EPEL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14170
https://github.com/root-project/root/pull/14170:72,Modifiability,config,configuration,72,"This reverts commit 2ee691da61ca51e4dd857ac8c88f778948fb49a7, it breaks configuration with the latest XRootD 5.6.3, for example already found in EPEL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14170
https://github.com/root-project/root/issues/14171:98,Availability,avail,available,98,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1351,Availability,error,error,1351,"``; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:2157,Availability,Error,Error,2157,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:185,Deployability,update,update-mode,185,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:438,Deployability,update,update,438,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1062,Deployability,update,updated,1062,"``; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1242,Deployability,update,updated,1242,"``; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1452,Deployability,update,updated,1452,"ach file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1869,Deployability,update,updated,1869,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:2102,Deployability,update,updated,2102,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:2715,Deployability,Install,Installation,2715,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:467,Performance,load,loading,467,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:1895,Testability,test,testFile,1895,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:2128,Testability,test,testFile,2128,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/issues/14171:519,Usability,simpl,simple,519,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14171
https://github.com/root-project/root/pull/14172:558,Deployability,update,updated,558,# This Pull request:. ## Changes or fixes:. Fix the K&R style definitions in builtin zlib as they will no longer be supported by future C standards and currently emit warnings on clang builds:. ```; zlib/deflate.c:393:13: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; int ZEXPORT deflateResetKeep (strm); ```. This also seems to have landed in upstream zlib in version 1.3 (see [zlib.net](https://zlib.net/). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). The same changes as in iLCSoft/SIO#20,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14172
https://github.com/root-project/root/pull/14172:528,Testability,test,tested,528,# This Pull request:. ## Changes or fixes:. Fix the K&R style definitions in builtin zlib as they will no longer be supported by future C standards and currently emit warnings on clang builds:. ```; zlib/deflate.c:393:13: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; int ZEXPORT deflateResetKeep (strm); ```. This also seems to have landed in upstream zlib in version 1.3 (see [zlib.net](https://zlib.net/). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). The same changes as in iLCSoft/SIO#20,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14172
https://github.com/root-project/root/issues/14173:983,Deployability,Install,Installation,983,"### Explain what you would like to see improved and how. I am missing a couple of methods inside `THnD` class that I use frequently when working with the usual `TH1D`, `TH2D`, ... classes. I am missing something like: `std::vector <Double_t> GetBinCenter(std::vector<Int_t> idx)` that simply returns the center of the bin using the ranges and number of bins. Simple implementation such as for each component doing:. ```; xMin + (xMax-xMin)*((double)bin-0.5)/Nbins;; ```. where `xMin`, `xMax`, `Nbins` are known for each dimensions inside `THnD` and `bin` is the corresponding bin where we want to know its coordinate. Perhaps there is another way to achieve this (please let me know), but it would be interesting that there would be coherence between `TH` and `THn` methods. Also a method to get the integral would be interesting. See this post:. https://root-forum.cern.ch/t/method-to-calculate-integral-in-a-thnd/57276. Thanks for considering!. ### ROOT version. ROOT 6.26/02. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14173
https://github.com/root-project/root/issues/14173:285,Usability,simpl,simply,285,"### Explain what you would like to see improved and how. I am missing a couple of methods inside `THnD` class that I use frequently when working with the usual `TH1D`, `TH2D`, ... classes. I am missing something like: `std::vector <Double_t> GetBinCenter(std::vector<Int_t> idx)` that simply returns the center of the bin using the ranges and number of bins. Simple implementation such as for each component doing:. ```; xMin + (xMax-xMin)*((double)bin-0.5)/Nbins;; ```. where `xMin`, `xMax`, `Nbins` are known for each dimensions inside `THnD` and `bin` is the corresponding bin where we want to know its coordinate. Perhaps there is another way to achieve this (please let me know), but it would be interesting that there would be coherence between `TH` and `THn` methods. Also a method to get the integral would be interesting. See this post:. https://root-forum.cern.ch/t/method-to-calculate-integral-in-a-thnd/57276. Thanks for considering!. ### ROOT version. ROOT 6.26/02. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14173
https://github.com/root-project/root/issues/14173:359,Usability,Simpl,Simple,359,"### Explain what you would like to see improved and how. I am missing a couple of methods inside `THnD` class that I use frequently when working with the usual `TH1D`, `TH2D`, ... classes. I am missing something like: `std::vector <Double_t> GetBinCenter(std::vector<Int_t> idx)` that simply returns the center of the bin using the ranges and number of bins. Simple implementation such as for each component doing:. ```; xMin + (xMax-xMin)*((double)bin-0.5)/Nbins;; ```. where `xMin`, `xMax`, `Nbins` are known for each dimensions inside `THnD` and `bin` is the corresponding bin where we want to know its coordinate. Perhaps there is another way to achieve this (please let me know), but it would be interesting that there would be coherence between `TH` and `THn` methods. Also a method to get the integral would be interesting. See this post:. https://root-forum.cern.ch/t/method-to-calculate-integral-in-a-thnd/57276. Thanks for considering!. ### ROOT version. ROOT 6.26/02. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14173
https://github.com/root-project/root/pull/14174:574,Availability,avail,available,574,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:638,Availability,error,error,638,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:737,Availability,error,error,737,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:806,Availability,ERROR,ERROR,806,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:537,Deployability,install,install,537,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:953,Deployability,Install,Install,953,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:1041,Deployability,install,installed,1041,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:1181,Deployability,configurat,configuration,1181,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:108,Integrability,interface,interface,108,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:426,Integrability,rout,routine,426,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:1250,Integrability,rout,routines,1250,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14174:1181,Modifiability,config,configuration,1181,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14174
https://github.com/root-project/root/pull/14175:268,Energy Efficiency,schedul,schedule,268,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14175
https://github.com/root-project/root/pull/14175:140,Modifiability,Extend,Extends,140,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14175
https://github.com/root-project/root/pull/14175:168,Modifiability,plugin,plugin,168,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14175
https://github.com/root-project/root/pull/14175:219,Modifiability,Extend,Extends,219,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14175
https://github.com/root-project/root/pull/14175:391,Testability,test,tested,391,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14175
https://github.com/root-project/root/pull/14176:61,Deployability,install,installed,61,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14176:220,Deployability,install,installation,220,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14176:337,Deployability,patch,patches,337,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14176:451,Deployability,update,updated,451,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14176:109,Modifiability,config,configurable,109,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14176:421,Testability,test,tested,421,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14176
https://github.com/root-project/root/pull/14177:64,Deployability,release,release,64,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14177:364,Integrability,interface,interface,364,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14177:696,Integrability,interface,interfaces,696,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14177:132,Safety,detect,detect,132,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14177:500,Safety,safe,safe,500,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14177:691,Safety,safe,safe,691,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14177
https://github.com/root-project/root/pull/14178:834,Deployability,update,updated,834,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14178
https://github.com/root-project/root/pull/14178:755,Integrability,rout,route,755,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14178
https://github.com/root-project/root/pull/14178:653,Modifiability,variab,variable,653,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14178
https://github.com/root-project/root/pull/14178:804,Testability,test,tested,804,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14178
https://github.com/root-project/root/pull/14178:630,Usability,learn,learn,630,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14178
https://github.com/root-project/root/pull/14179:8,Testability,test,test,8,"The old test statistic headers and classes should not be used anymore,; since the test statistics should be created with the higher-level; functions `createNLL()` and `createChi2()`. This allows us more; flexibility in the implementation, and to phase out the old test; statistics classes eventually.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14179
https://github.com/root-project/root/pull/14179:82,Testability,test,test,82,"The old test statistic headers and classes should not be used anymore,; since the test statistics should be created with the higher-level; functions `createNLL()` and `createChi2()`. This allows us more; flexibility in the implementation, and to phase out the old test; statistics classes eventually.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14179
https://github.com/root-project/root/pull/14179:264,Testability,test,test,264,"The old test statistic headers and classes should not be used anymore,; since the test statistics should be created with the higher-level; functions `createNLL()` and `createChi2()`. This allows us more; flexibility in the implementation, and to phase out the old test; statistics classes eventually.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14179
https://github.com/root-project/root/pull/14180:202,Deployability,release,released,202,"**Do not merge for now**. Migrates finding XRootD to the `XRootDConfig.cmake` from XRootD itself. This repeats the second commit of #13752, which was rightfully reverted by #14170. Once xrootd 5.6.4 is released, the `XRootDConfig.cmake` shipped by XRootD should actually work for ROOT. When this xrootd version lands on `cvmfs` and Fedora/EPEL, this PR can be merged. I just opened it now already so this story is not forgotten (including all the relevant links). See also the discussion after https://github.com/root-project/root/issues/12631#issuecomment-1838178520. Closes #12631.; Closes #11750.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14180
https://github.com/root-project/root/pull/14181:179,Performance,load,loaded,179,"This PR fixes the way data member offsets are determined for `std::pair` fields. The previous implementation used an auto-generated TClass for `std::pair` without its information loaded in the interpreter (as explained in #14084), which for ROOT builds *with* runtime C++ modules enabled is no problem, but without would need the addition of some dictionaries, most notably for `std::map` fields. In #14084, a fix is proposed which works. However, I also discovered that the way that is currently used to get the data member offsets for `std::tuple` fields through `TRealData` also works, so I opted to implement that one instead for consistency's sake (if there are reasons this implementation is problematic, we should also change it for `RTupleField`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14181
https://github.com/root-project/root/pull/14182:57,Modifiability,variab,variable,57,"In standalone builds, it could otherwise happen that the variable is not set during the first CMake invocation and tests fail because they are unable to locate the LLVM headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14182
https://github.com/root-project/root/pull/14182:115,Testability,test,tests,115,"In standalone builds, it could otherwise happen that the variable is not set during the first CMake invocation and tests fail because they are unable to locate the LLVM headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14182
https://github.com/root-project/root/pull/14184:442,Deployability,update,updated,442,"# This Pull request:. Adds type support for multidimensional C style arrays. For the time being, the support is limited to the construction of fields from type strings through `RFieldBase::Create`. Support for construction through template parameters `MakeField` is subject to a follow-up PR. ## Changes or fixes:. Enables RNTuple support for classes with multidimensional C array members . ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14184
https://github.com/root-project/root/pull/14184:412,Testability,test,tested,412,"# This Pull request:. Adds type support for multidimensional C style arrays. For the time being, the support is limited to the construction of fields from type strings through `RFieldBase::Create`. Support for construction through template parameters `MakeField` is subject to a follow-up PR. ## Changes or fixes:. Enables RNTuple support for classes with multidimensional C array members . ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14184
https://github.com/root-project/root/pull/14185:266,Availability,robust,robust,266,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14185
https://github.com/root-project/root/pull/14185:45,Modifiability,refactor,refactoring,45,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14185
https://github.com/root-project/root/pull/14185:576,Security,validat,validated,576,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14185
https://github.com/root-project/root/issues/14186:1401,Availability,echo,echo,1401,"es go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1371,Deployability,patch,patches,1371,"oaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1482,Deployability,patch,patches,1482,"is appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See abo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1631,Deployability,patch,patches,1631,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1657,Deployability,patch,patches,1657,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:2510,Deployability,patch,patches,2510,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:2523,Deployability,Install,Installation,2523,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1091,Energy Efficiency,reduce,reduced,1091,"had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1142,Integrability,depend,depend,1142,"had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:556,Modifiability,inherit,inheritance,556,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:258,Performance,optimiz,optimized,258,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:373,Performance,load,loaded,373,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:461,Performance,load,loading,461,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:2098,Performance,load,loading,2098,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:2062,Safety,abort,abort,2062,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:178,Testability,assert,assertions,178,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1172,Testability,test,test,1172,"sertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1539,Testability,test,test,1539,"we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:1816,Testability,Assert,Assertion,1816,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/issues/14186:2078,Testability,test,test,2078,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14186
https://github.com/root-project/root/pull/14187:136,Deployability,install,installation,136,"By moving the header currently hidden in `src/RooFit` to `inc/RooFit` we can allow a roottest build to work when built with an external installation of ROOT. To preserve the intent of the header, the functions declared are moved to the `RooFit::Internal` namespace, as they are not meant for public use. ## Context. This is required for the conda nightlies builds, which build roottest after having built ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14187
https://github.com/root-project/root/issues/14188:244,Availability,Error,Error,244,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:446,Deployability,configurat,configuration,446,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:548,Deployability,configurat,configuration,548,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:720,Deployability,install,installation,720,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:947,Deployability,install,installed,947,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:1139,Deployability,release,release,1139,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:1827,Deployability,Install,Installation,1827,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:1855,Deployability,Release,Release,1855,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:446,Modifiability,config,configuration,446,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:548,Modifiability,config,configuration,548,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:698,Modifiability,config,config,698,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/issues/14188:1319,Modifiability,CONFIG,CONFIG,1319,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14188
https://github.com/root-project/root/pull/14189:100,Security,expose,expose,100,Introduce `RWebWindowsManager::SetLoopbackMode()` to let change binding to loopback device . Do not expose current directory via webgui http server. Do not provide list of window on default webpage. Do not allow to reconnect to RBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14189
https://github.com/root-project/root/pull/14191:124,Deployability,update,updated,124,# This Pull request:; Adding documentation for the RDatasetSpec class. ; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14101,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14191
https://github.com/root-project/root/pull/14191:94,Testability,test,tested,94,# This Pull request:; Adding documentation for the RDatasetSpec class. ; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14101,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14191
https://github.com/root-project/root/pull/14193:15,Energy Efficiency,schedul,scheduler,15,"Without a task scheduler, seal in `CommitPage`. This avoids a page allocation and, in most cases, a copy of the uncompressed buffer (unless the element type is mappable and compression is disabled, in which case the sealed page would otherwise alias the page buffer). It also ensures that `CommitCluster` can vector-commit all sealed pages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14193
https://github.com/root-project/root/pull/14193:53,Safety,avoid,avoids,53,"Without a task scheduler, seal in `CommitPage`. This avoids a page allocation and, in most cases, a copy of the uncompressed buffer (unless the element type is mappable and compression is disabled, in which case the sealed page would otherwise alias the page buffer). It also ensures that `CommitCluster` can vector-commit all sealed pages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14193
https://github.com/root-project/root/issues/14195:388,Availability,Error,Error,388,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:985,Availability,error,errors,985,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:1145,Deployability,Install,Installation,1145,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:468,Integrability,message,message,468,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:166,Modifiability,variab,variables,166,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:961,Modifiability,Config,Configuring,961,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/issues/14195:896,Performance,Load,LoadROOT,896,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14195
https://github.com/root-project/root/pull/14196:79,Security,access,access,79,# This Pull request:. Adds `FromRNTuple` for vectors of file names. Gives easy access to the RNTuple chains in RDF through PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14196
https://github.com/root-project/root/issues/14198:563,Deployability,Install,Installation,563,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On MacOS the address of the name returned by `type_index` for the `type_info` of numerical types (and `void`) is incorrectly tagged by the value printer as an invalid address. . ### Reproducer. ```; root.exe -b -l; root [0] std::type_index(typeid(TObject)).name(); (const char *) ""7TObject""; root [1] std::type_index(typeid(int)).name(); (const char *) 0x19eab659c <invalid memory address>; root [2] std::cout << (const char *) 0x19eab659c << '\n';; i; ```. ### ROOT version. master. ### Installation method. from sorce. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14198
https://github.com/root-project/root/issues/14199:3267,Deployability,Install,Installation,3267,"rg/artexternals/root/v6_28_06b/Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF29824CD: GetClassSharedLibsForModule (TCling.cxx:6957); ==201374== by 0xF29824CD: TCling::GetClassSharedLibs(char const*) (TCling.cxx:7061); ==201374== by 0xF2965186: TCling::ShallowAutoLoadImpl(char const*) (TCling.cxx:6119); ==201374== by 0xF2983220: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (TCling.cxx:6172); ==201374== by 0xF2983743: TCling::AutoLoad(char const*, bool) (TCling.cxx:6284); ==201374== by 0xF29838A5: TCling::AutoLoad(std::type_info const&, bool) (TCling.cxx:6103); ==201374== by 0x14EB2D47: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) (TClass.cxx:3316); ==201374== by 0x139AA957: GetClass (TClass.h:628); ==201374== by 0x139AA957: GetClassHelper<std::tuple<char const*> > (TClass.h:644); ==201374== by 0x139AA957: GetClass<std::tuple<char const*> > (TClass.h:654); ==201374== by 0x139AA957: long TPluginHandler::ExecPluginImpl<char const*>(char const* const&) (TPluginManager.h:175); ==201374== by 0x139A9B5C: ExecPlugin<char const*> (TPluginManager.h:218); ==201374== by 0x139A9B5C: ROOT::Math::Factory::CreateMinimizer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Factory.cxx:100); ```. ### Reproducer. See https://github.com/art-framework-suite/art/issues/142. ### ROOT version. master, v6.30, v6.28. ### Installation method. from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14199
https://github.com/root-project/root/issues/14199:1871,Security,hash,hash,1871,"Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF345DBD2: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /cvmfs/mu2e.opensciencegrid.org/artexternals/root/v6_28_06b/Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF2A57896: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /cvmfs/mu2e.opensciencegrid.org/artexternals/root/v6_28_06b/Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF29824CD: GetClassSharedLibsForModule (TCling.cxx:6957); ==201374== by 0xF29824CD: TCling::GetClassSharedLibs(char const*) (TCling.cxx:7061); ==201374== by 0xF2965186: TCling::ShallowAutoLoadImpl(char const*) (TCling.cxx:6119); ==201374== by 0xF2983220: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (TCling.cxx:6172); ==201374== by 0xF2983743: TCling::AutoLoad(char const*, bool) (TCling.cxx:6284); ==201374== by 0xF29838A5: TCling::AutoLoad(std::type_info const&, bool) (TCling.cxx:6103); ==201374== by 0x14EB2D47: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) (TClass.cxx:3316); ==201374== by 0x139AA957: GetClass (TClass.h:628); ==201374== by 0x139AA957: GetClassHelper<std::tuple<char const*> > (TClass.h:644); ==201374== by 0x139AA957: GetClass<std::tuple<char const*> > (TClass.h:654); ==201374== by 0x139AA957: long TPluginHandler::ExecPluginImpl<char const*>(char const* const&) (TPluginManager.h:175); ==201374== by 0x139A9B5C: ExecPlugin<char const*> (TPluginManager.h:218); ==201374== by 0x139A9B5C: ROOT::Math::Factory:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14199
https://github.com/root-project/root/pull/14200:216,Performance,load,load,216,This was reported at https://github.com/art-framework-suite/art/issues/142 and is due to the combination of; (a) We do not generate dictionary for std::tuple instances (b) When TClass::GetClass is called it tries to load the dictonary until there is a full TClass object is in memory (c) The emulated std::tuple TClass are marked as 'not loaded' (d) Searching for the TClass for a templated class will cost memory (during the lookup of the instantiation). (e) TPluginManager::ExecPluginImpl was looking up the TClass for the typle `std::type< list of arguments>`. The lookup induced in (e) in the user's case (root built with runtime cxx module on) lead to some memory allocation in Clang while trying to find out if there was now a library or dictionary to load. This fixes #14199,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14200
https://github.com/root-project/root/pull/14200:338,Performance,load,loaded,338,This was reported at https://github.com/art-framework-suite/art/issues/142 and is due to the combination of; (a) We do not generate dictionary for std::tuple instances (b) When TClass::GetClass is called it tries to load the dictonary until there is a full TClass object is in memory (c) The emulated std::tuple TClass are marked as 'not loaded' (d) Searching for the TClass for a templated class will cost memory (during the lookup of the instantiation). (e) TPluginManager::ExecPluginImpl was looking up the TClass for the typle `std::type< list of arguments>`. The lookup induced in (e) in the user's case (root built with runtime cxx module on) lead to some memory allocation in Clang while trying to find out if there was now a library or dictionary to load. This fixes #14199,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14200
https://github.com/root-project/root/pull/14200:758,Performance,load,load,758,This was reported at https://github.com/art-framework-suite/art/issues/142 and is due to the combination of; (a) We do not generate dictionary for std::tuple instances (b) When TClass::GetClass is called it tries to load the dictonary until there is a full TClass object is in memory (c) The emulated std::tuple TClass are marked as 'not loaded' (d) Searching for the TClass for a templated class will cost memory (during the lookup of the instantiation). (e) TPluginManager::ExecPluginImpl was looking up the TClass for the typle `std::type< list of arguments>`. The lookup induced in (e) in the user's case (root built with runtime cxx module on) lead to some memory allocation in Clang while trying to find out if there was now a library or dictionary to load. This fixes #14199,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14200
https://github.com/root-project/root/pull/14201:48,Deployability,install,installation,48,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/pull/14201:531,Deployability,update,updated,531,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/pull/14201:568,Deployability,update,updated,568,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/pull/14201:137,Modifiability,variab,variable,137,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/pull/14201:227,Modifiability,variab,variable,227,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/pull/14201:501,Testability,test,tested,501,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14201
https://github.com/root-project/root/issues/14205:9,Deployability,upgrade,upgrade,9,"With the upgrade to LLVM 16, `llvm::Optional` is a deprecated / legacy alias of `std::optional`: https://github.com/llvm/llvm-project/commit/2916b99182752b1aece8cc4479d8d6a20b5e02da Likewise, `llvm::None` / `llvm::NoneType` become `std::nullopt` / `std::nullopt_t`: https://github.com/llvm/llvm-project/commit/abfe65a12b77f9f0292d3ec70bd9fc3b9c13d905. These transitional aliases are removed with LLVM 17: https://github.com/llvm/llvm-project/commit/397f2e9ebee8d8e45547e90dd05228d7f965df67 To prepare for this, we should replace, in `core/metacling/` and `interpreter/cling`; * [ ] all spellings of `llvm::Optional` with `std::optional`,; * [ ] all spellings of `llvm::None` / `llvm::NoneType` with `std::nullopt` / `std::nullopt_t`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14205
https://github.com/root-project/root/pull/14206:11,Availability,error,errors,11,minor typo errors solved... # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14206
https://github.com/root-project/root/pull/14206:123,Deployability,update,updated,123,minor typo errors solved... # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14206
https://github.com/root-project/root/pull/14206:93,Testability,test,tested,93,minor typo errors solved... # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14206
https://github.com/root-project/root/issues/14207:447,Availability,error,error,447,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:519,Availability,error,error,519,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:732,Availability,error,error,732,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:796,Availability,error,error,796,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:1211,Deployability,Install,Installation,1211,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:762,Integrability,Protocol,Protocol,762,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14207:825,Integrability,Protocol,Protocol,825,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14207
https://github.com/root-project/root/issues/14209:53,Deployability,upgrade,upgraded,53,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14209
https://github.com/root-project/root/issues/14209:681,Deployability,upgrade,upgrades,681,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14209
https://github.com/root-project/root/issues/14209:374,Testability,log,logic,374,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14209
https://github.com/root-project/root/issues/14209:613,Testability,test,testing,613,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14209
https://github.com/root-project/root/issues/14210:174,Availability,avail,available,174,"* [ ] `DeclUnloader::VisitNamedDecl`: https://reviews.llvm.org/D119675 was committed in https://github.com/llvm/llvm-project/commit/8c0eb32d2aa0bc73c176d7b25f47bdf37f967d3b, available since LLVM 15:; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/DeclUnloader.cpp#L559-L563; * [ ] `ExternalInterpreterSource::ImportDecl`; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp#L100-L118. I'm pretty sure there are more - these are the first results grepping for `FIXME` and `TODO` in `interpreter/cling/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14210
https://github.com/root-project/root/pull/14212:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14212
https://github.com/root-project/root/pull/14212:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14212
https://github.com/root-project/root/pull/14213:93,Deployability,release,release,93,# This Pull request:; Adds some examples of subdirectory globbing with `TChain::Add` to 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14213
https://github.com/root-project/root/pull/14214:162,Deployability,update,updated,162,# This Pull request:. ## Changes or fixes:; https://mattermost.web.cern.ch/root/pl/eem7ubp74frpz8wu7bj1cutc9c. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14214
https://github.com/root-project/root/pull/14214:132,Testability,test,tested,132,# This Pull request:. ## Changes or fixes:; https://mattermost.web.cern.ch/root/pl/eem7ubp74frpz8wu7bj1cutc9c. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14214
https://github.com/root-project/root/issues/14215:1698,Deployability,Install,Installation,1698,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14215
https://github.com/root-project/root/issues/14215:888,Energy Efficiency,Charge,Charge,888,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14215
https://github.com/root-project/root/issues/14215:802,Modifiability,variab,variables,802,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14215
https://github.com/root-project/root/issues/14215:473,Usability,clear,clear,473,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14215
https://github.com/root-project/root/pull/14216:13,Deployability,update,update,13,There was an update to Pythia8 8.310 with my fix for compatibility with C++20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14216
https://github.com/root-project/root/issues/14217:395,Availability,error,error,395,"### Description. A C++ build of ROOT with GCC 13 works fine and passes all tests, *unless* also enabling Pythia8. Then suddenly `roottest-root-meta-MakeProject-examples` starts failing, as demonstrated with https://github.com/root-project/root/pull/14216:; ```; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: error: 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair' from module 'std.bits_stl_iterator_h' is not present in definition of 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' in module 'std.bits_stl_iterator_h'; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:197:17: note: declaration of 'pair' does not match; constexpr pair(const pair&) = default; ///< Copy constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:198:17: note: declaration of 'pair' does not match; constexpr pair(pair&&) = default; ///< Move constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:202:2: note: declaration of 'pair' does not match; pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:238:2: note: declaration of 'pair' does not match; pair(tuple<_Args1...>&, tuple<_Args2...>&,; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: declaration of 'pair' does not match; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: note: declaration of 'pair' does not match; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:315:2: note: declaration of 'pair' does not match; pair(_U1&& __x, _U2&& __y); ^; /usr/lib/gcc/x86_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14217
https://github.com/root-project/root/issues/14217:2929,Deployability,Install,Installation,2929,"./include/c++/13/bits/stl_pair.h:198:17: note: declaration of 'pair' does not match; constexpr pair(pair&&) = default; ///< Move constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:202:2: note: declaration of 'pair' does not match; pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:238:2: note: declaration of 'pair' does not match; pair(tuple<_Args1...>&, tuple<_Args2...>&,; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: declaration of 'pair' does not match; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: note: declaration of 'pair' does not match; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:315:2: note: declaration of 'pair' does not match; pair(_U1&& __x, _U2&& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:323:2: note: declaration of 'pair' does not match; pair(_U1&&, _U2&&) = delete;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:330:2: note: declaration of 'pair' does not match; pair(const pair<_U1, _U2>& __p); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:339:2: note: declaration of 'pair' does not match; pair(const pair<_U1, _U2>&) = delete;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:345:2: note: declaration of 'pair' does not match; pair(pair<_U1, _U2>&& __p); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:354:2: note: declaration of 'pair' does not match; pair(pair<_U1, _U2>&&) = delete;; ^; ```. ### Reproducer. Build with GCC 13, `CMAKE_CXX_STANDARD=20`, and Pythia8 8.310. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14217
https://github.com/root-project/root/issues/14217:75,Testability,test,tests,75,"### Description. A C++ build of ROOT with GCC 13 works fine and passes all tests, *unless* also enabling Pythia8. Then suddenly `roottest-root-meta-MakeProject-examples` starts failing, as demonstrated with https://github.com/root-project/root/pull/14216:; ```; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: error: 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair' from module 'std.bits_stl_iterator_h' is not present in definition of 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' in module 'std.bits_stl_iterator_h'; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:197:17: note: declaration of 'pair' does not match; constexpr pair(const pair&) = default; ///< Copy constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:198:17: note: declaration of 'pair' does not match; constexpr pair(pair&&) = default; ///< Move constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:202:2: note: declaration of 'pair' does not match; pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:238:2: note: declaration of 'pair' does not match; pair(tuple<_Args1...>&, tuple<_Args2...>&,; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: declaration of 'pair' does not match; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: note: declaration of 'pair' does not match; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:315:2: note: declaration of 'pair' does not match; pair(_U1&& __x, _U2&& __y); ^; /usr/lib/gcc/x86_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14217
https://github.com/root-project/root/pull/14218:471,Deployability,update,updated,471,# This Pull request:. Implements value printing for std::source_location. ## Changes or fixes:. Running `std::source_location::current()` ; now shows ; `(std::source_location) filename:line:function_name`. . Using `std::source_location` requires C++20: https://en.cppreference.com/w/cpp/utility/source_location. ```; root [0] std::source_location::current(); (std::source_location) ROOT_prompt_0:1:__cling_Un1Qu30; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14211,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14218
https://github.com/root-project/root/pull/14218:441,Testability,test,tested,441,# This Pull request:. Implements value printing for std::source_location. ## Changes or fixes:. Running `std::source_location::current()` ; now shows ; `(std::source_location) filename:line:function_name`. . Using `std::source_location` requires C++20: https://en.cppreference.com/w/cpp/utility/source_location. ```; root [0] std::source_location::current(); (std::source_location) ROOT_prompt_0:1:__cling_Un1Qu30; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14211,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14218
https://github.com/root-project/root/issues/14219:75,Usability,guid,guides,75,"LLVM 16 deprecated the `makeArrayRef` function in favor of using deduction guides: https://github.com/llvm/llvm-project/commit/36117cc46388d677359f1180bd536f80d0c5fe97 A future LLVM version will likely remove them (hasn't happened yet), so we should preemptively migrate away.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14219
https://github.com/root-project/root/pull/14221:215,Deployability,update,updated,215,# This Pull request:. Removes the usage of `llvm::makeArrayRef` in cling and use deduction guides (https://reviews.llvm.org/D140896) instead. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14219,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14221
https://github.com/root-project/root/pull/14221:185,Testability,test,tested,185,# This Pull request:. Removes the usage of `llvm::makeArrayRef` in cling and use deduction guides (https://reviews.llvm.org/D140896) instead. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14219,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14221
https://github.com/root-project/root/pull/14221:91,Usability,guid,guides,91,# This Pull request:. Removes the usage of `llvm::makeArrayRef` in cling and use deduction guides (https://reviews.llvm.org/D140896) instead. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14219,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14221
https://github.com/root-project/root/issues/14223:499,Deployability,install,installations,499,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14223:1618,Deployability,Install,Installation,1618,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14223:1654,Deployability,install,installed,1654,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14223:224,Performance,load,load,224,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14223:350,Performance,load,loading,350,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14223:641,Performance,Load,Load,641,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14223
https://github.com/root-project/root/issues/14225:1262,Availability,ERROR,ERROR,1262,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a HistFactory setup where one of the NormFactors is constant and set to -1. During the Workspace creation (HistoToWorkspaceFactoryFast) the code crashes:. ```; --------; RooFormulaVar::b2[ actualVars=(b) formula=""b*b"" ] = 0.294849. [#2] INFO:HistFactory -- making normFactor: mu_ttbar; [#2] INFO:HistFactory -- processing hist emu_OS_2b_Mc_regBin; [#2] INFO:HistFactory -- Mc_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:3386,Deployability,Configurat,Configuration,3386," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:3755,Deployability,Install,Installation,3755," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:1298,Modifiability,variab,variable,1298,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a HistFactory setup where one of the NormFactors is constant and set to -1. During the Workspace creation (HistoToWorkspaceFactoryFast) the code crashes:. ```; --------; RooFormulaVar::b2[ actualVars=(b) formula=""b*b"" ] = 0.294849. [#2] INFO:HistFactory -- making normFactor: mu_ttbar; [#2] INFO:HistFactory -- processing hist emu_OS_2b_Mc_regBin; [#2] INFO:HistFactory -- Mc_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:1408,Modifiability,variab,variable,1408,"emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:3386,Modifiability,Config,Configuration,3386," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:2176,Performance,optimiz,optimized,2176,"HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:2326,Performance,optimiz,optimized,2326,"ONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/issues/14225:3521,Usability,simpl,simple,3521," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14225
https://github.com/root-project/root/pull/14238:298,Availability,error,error,298,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14238
https://github.com/root-project/root/pull/14238:563,Availability,error,error,563,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14238
https://github.com/root-project/root/pull/14238:677,Availability,error,error,677,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14238
https://github.com/root-project/root/pull/14238:789,Deployability,update,updated,789,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14238
https://github.com/root-project/root/pull/14238:759,Testability,test,tested,759,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14238
https://github.com/root-project/root/pull/14243:222,Testability,test,test,222,"Recently, I have seen some use of the `RooBifurGauss` in the wild, so this commit is completing its implementation for the newest RooFit features:. 1. Support code generation of evaluation and analytical integral; 2. Unit test for fitting with AD; 3. Unit test for analytical integral, cross-checking with RooGaussian; 4. Code formatting",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14243
https://github.com/root-project/root/pull/14243:256,Testability,test,test,256,"Recently, I have seen some use of the `RooBifurGauss` in the wild, so this commit is completing its implementation for the newest RooFit features:. 1. Support code generation of evaluation and analytical integral; 2. Unit test for fitting with AD; 3. Unit test for analytical integral, cross-checking with RooGaussian; 4. Code formatting",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14243
https://github.com/root-project/root/issues/14244:584,Deployability,Install,Installation,584,"### Explain what you would like to see improved and how. The comparison operators of `const char*` with `std::string_view` defined in [TString.h](https://github.com/root-project/root/blob/master/core/base/inc/TString.h) should be defined as `constexpr` to be consistent with the std definition.; ```c++; constexpr inline Bool_t operator==(const char *s1, const std::string_view &s2); {; return std::string_view(s1) == s2;; }. constexpr inline Bool_t operator==(const std::string_view &s1, const char *s2); {; return s1 == std::string_view(s2);; }; ```. ### ROOT version. 6.30/02. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14244
https://github.com/root-project/root/pull/14245:161,Testability,test,tested,161,# This Pull request:. ## Changes or fixes:; Makes std::string_view comparison operators constexpr to be consistent with the std defintions. ## Checklist:. - [x] tested changes locally. This PR fixes #14244,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14245
https://github.com/root-project/root/pull/14246:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14209,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14246
https://github.com/root-project/root/pull/14246:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14209,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14246
https://github.com/root-project/root/issues/14247:200,Availability,Error,Error,200,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TGSpeedo no longer works on 6.30.02, it's missing the image speedo.gif. ### Reproducer. ```; root -l; root [0] new TGSpeedo; Error in <TGSpeedo::TGSpeedo::Build>: speedo.gif not found; (TGSpeedo *) 0x556984fae6a0; ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary release. ### Operating system. Ubuntu 22.04. ### Additional context. https://sft.its.cern.ch/jira/browse/ROOT-8552; https://forum.gsi.de/index.php?t=tree&th=3483&mid=13297&rid=0&rev=&reveal=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14247
https://github.com/root-project/root/issues/14247:493,Deployability,Install,Installation,493,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TGSpeedo no longer works on 6.30.02, it's missing the image speedo.gif. ### Reproducer. ```; root -l; root [0] new TGSpeedo; Error in <TGSpeedo::TGSpeedo::Build>: speedo.gif not found; (TGSpeedo *) 0x556984fae6a0; ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary release. ### Operating system. Ubuntu 22.04. ### Additional context. https://sft.its.cern.ch/jira/browse/ROOT-8552; https://forum.gsi.de/index.php?t=tree&th=3483&mid=13297&rid=0&rev=&reveal=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14247
https://github.com/root-project/root/issues/14247:521,Deployability,release,release,521,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TGSpeedo no longer works on 6.30.02, it's missing the image speedo.gif. ### Reproducer. ```; root -l; root [0] new TGSpeedo; Error in <TGSpeedo::TGSpeedo::Build>: speedo.gif not found; (TGSpeedo *) 0x556984fae6a0; ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary release. ### Operating system. Ubuntu 22.04. ### Additional context. https://sft.its.cern.ch/jira/browse/ROOT-8552; https://forum.gsi.de/index.php?t=tree&th=3483&mid=13297&rid=0&rev=&reveal=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14247
https://github.com/root-project/root/pull/14248:506,Deployability,patch,patch,506,"# This Pull request:. ## Changes or fixes:. In the current implementation, shapesys with no valid data (all constraints constant) are written out in an invalid way, making it impossible for the reader to then instantiate the correct number of parameters.; This PR fixes this by forcing the write-out of data with all-zeros for such invalid shapesys.; Alternatively, one could imagine dropping these shapesys completely, but that's maybe something of a policy decision that I don't want to make in a bugfix patch :). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14248
https://github.com/root-project/root/pull/14248:567,Deployability,update,updated,567,"# This Pull request:. ## Changes or fixes:. In the current implementation, shapesys with no valid data (all constraints constant) are written out in an invalid way, making it impossible for the reader to then instantiate the correct number of parameters.; This PR fixes this by forcing the write-out of data with all-zeros for such invalid shapesys.; Alternatively, one could imagine dropping these shapesys completely, but that's maybe something of a policy decision that I don't want to make in a bugfix patch :). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14248
https://github.com/root-project/root/pull/14248:537,Testability,test,tested,537,"# This Pull request:. ## Changes or fixes:. In the current implementation, shapesys with no valid data (all constraints constant) are written out in an invalid way, making it impossible for the reader to then instantiate the correct number of parameters.; This PR fixes this by forcing the write-out of data with all-zeros for such invalid shapesys.; Alternatively, one could imagine dropping these shapesys completely, but that's maybe something of a policy decision that I don't want to make in a bugfix patch :). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14248
https://github.com/root-project/root/pull/14249:344,Availability,error,error,344,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14249
https://github.com/root-project/root/pull/14249:460,Deployability,update,updated,460,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14249
https://github.com/root-project/root/pull/14249:180,Security,access,accessing,180,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14249
https://github.com/root-project/root/pull/14249:430,Testability,test,tested,430,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14249
https://github.com/root-project/root/issues/14250:1327,Availability,error,error,1327,"to build llvm 13.0.1; ```; cmake -DCMAKE_INSTALL_PREFIX=/opt/clang/13.0.1-gcc114 -DLLVM_ENABLE_PROJECTS=clang -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_APPEND_VC_REV=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_FFI=OFF -DLLVM_ENABLE_OCAMLDOC=OFF -DLLVM_ENABLE_Z3_SOLVER=OFF ../llvm-project/llvm; ```. then for root:; ```; cmake -DCMAKE_CXX_COMPILER=nvc++ -DCMAKE_C_COMPILER=nvc -DCMAKE_CXX_FLAGS=-std=c++17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF -Dwebgui=OFF -Dsqlite=OFF -Dssl=OFF -Dmysql=OFF -Doracle=OFF -Dpgsql=OFF -Ddavix=OFF -Dgfal=OFF -Dimt=OFF -Dbuiltin_llvm=OFF -DC_SUPPORTS_FPIC=true -DCXX_SUPPORTS_FPIC=true -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_INSTALL_PREFIX=/opt/root/v6-30-03_nvhpc239 ../src; ```. However this results in the following error:; ```; rootcling_stage1: /bld6/root/bld_nvhpc/interpreter/llvm-project/clang/include/clang/Driver/Options.inc:7564: lambda []()->auto::operator()()->auto: Assertion `ValuesWereAdded && ""Couldn't add values to OptTable!""' failed.; #0 0x000000000cb9e5b1 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x000000000cb9bf7e SignalHandler(int) Signals.cpp:0:0; #2 0x00007ffb0ce97630 __restore_rt sigaction.c:0:0; #3 0x00007ffb0a4f4387 raise (/lib64/libc.so.6+0x36387); #4 0x00007ffb0a4f5a78 abort (/lib64/libc.so.6+0x37a78); #5 0x00007ffb0a4ed1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #6 0x00007ffb0a4ed252 (/lib64/libc.so.6+0x2f252); #7 0x000000000628a2f0 clang::driver::getDriverOptTable()::'lambda'()::operator()() const /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:7569:1; #8 0x000000000628a22a clang::driver::getDriverOptTable() /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:43:1; #9 0x0000000004324c6c cling::CompilerOptions::Parse(int, char const* const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:556,Deployability,Release,Release,556,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm trying to build root with NVIDIA's nvc++, but there are issues (see https://github.com/root-project/root/issues/9036). So to sidestep this problem, I want to build llvm with g++ (11.4), and use that as an external component when building the rest of root with nvc++. This is my cmake to build llvm 13.0.1; ```; cmake -DCMAKE_INSTALL_PREFIX=/opt/clang/13.0.1-gcc114 -DLLVM_ENABLE_PROJECTS=clang -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_APPEND_VC_REV=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_FFI=OFF -DLLVM_ENABLE_OCAMLDOC=OFF -DLLVM_ENABLE_Z3_SOLVER=OFF ../llvm-project/llvm; ```. then for root:; ```; cmake -DCMAKE_CXX_COMPILER=nvc++ -DCMAKE_C_COMPILER=nvc -DCMAKE_CXX_FLAGS=-std=c++17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF -Dwebgui=OFF -Dsqlite=OFF -Dssl=OFF -Dmysql=OFF -Doracle=OFF -Dpgsql=OFF -Ddavix=OFF -Dgfal=OFF -Dimt=OFF -Dbuiltin_llvm=OFF -DC_SUPPORTS_FPIC=true -DCXX_SUPPORTS_FPIC=true -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_INSTALL_PREFIX=/opt/root/v6-30-03_nvhpc239 ../src; ```. However this results in the following error:; ```; rootcling_stage1: /bld6/root/bld_nvhpc/interpreter/llvm-project/clang/include/clang/Driver/Options.inc:7564: lambda []()->auto::operator()()->auto: Assertion `ValuesWereAdded && ""Couldn't add values to OptTable!""' failed.; #0 0x000000000cb9e5b1 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x000000000cb9bf7e SignalHandler(int) Signals.cpp:0:0; #2 0x00007ffb0ce97630 __restore_rt sigaction.c:0:0; #3 0x00007ffb0a4f4387 raise (/lib64/libc.so.6+0x36387); #4 0x00007ffb0a4f5a78 abort (/lib64/libc.so.6+0x37a78); #5 0x00007ffb0a4ed1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #6 0x00007ffb0a4ed252 (/lib64/libc.so.6+0x2f252); #7 0x000000000628a2f0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:8662,Deployability,patch,patches,8662,dexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /bld6/root/src/core/base/inc/LinkDef.h; Subprocess aborted; ```. I understand thought that a special version of clang is needed (at least that's what a warning in one of the CMakelists.txt states). Are there any instructions on how to build it or what patches need to be applied?. I've been using v6-30-03 for this. ### Reproducer. . ### ROOT version. v6-30-03. ### Installation method. source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:8776,Deployability,Install,Installation,8776,dexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /bld6/root/src/core/base/inc/LinkDef.h; Subprocess aborted; ```. I understand thought that a special version of clang is needed (at least that's what a warning in one of the CMakelists.txt states). Are there any instructions on how to build it or what patches need to be applied?. I've been using v6-30-03 for this. ### Reproducer. . ### ROOT version. v6-30-03. ### Installation method. source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:5699,Integrability,Message,MessageTypes,5699,nclude -I/bld6/root/src/core/base/inc -I/bld6/root/src/core/base/v7/inc -I/bld6/root/src/core/clib/inc -I/bld6/root/src/core/clingutils/inc -I/bld6/root/src/core/clingutils/res -I/bld6/root/src/core/cont/inc -I/bld6/root/src/core/foundation/inc -I/bld6/root/src/core/foundation/v7/inc -I/bld6/root/src/core/foundation/res -I/bld6/root/src/core/gui/inc -I/bld6/root/src/core/meta/inc -I/bld6/root/src/core/rint/inc -I/bld6/root/src/core/textinput/inc -I/bld6/root/src/core/textinput/src -I/bld6/root/src/core/thread/inc -I/bld6/root/src/core/zip/inc -I/bld6/root/src/core/lzma/inc -I/bld6/root/bld_nvhpc/include -I/bld6/root/src/core/lz4/inc -I/bld6/root/src/core/zstd/inc -I/bld6/root/src/builtins/zstd -I/bld6/root/src/core/unix/inc -I/bld6/root/src/core/unix/../clib/res -I/usr/include -I/bld6/root/src/builtins/xxhash -I/bld6/root/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:1826,Safety,abort,abort,1826,"vc++ -DCMAKE_C_COMPILER=nvc -DCMAKE_CXX_FLAGS=-std=c++17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF -Dwebgui=OFF -Dsqlite=OFF -Dssl=OFF -Dmysql=OFF -Doracle=OFF -Dpgsql=OFF -Ddavix=OFF -Dgfal=OFF -Dimt=OFF -Dbuiltin_llvm=OFF -DC_SUPPORTS_FPIC=true -DCXX_SUPPORTS_FPIC=true -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_INSTALL_PREFIX=/opt/root/v6-30-03_nvhpc239 ../src; ```. However this results in the following error:; ```; rootcling_stage1: /bld6/root/bld_nvhpc/interpreter/llvm-project/clang/include/clang/Driver/Options.inc:7564: lambda []()->auto::operator()()->auto: Assertion `ValuesWereAdded && ""Couldn't add values to OptTable!""' failed.; #0 0x000000000cb9e5b1 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x000000000cb9bf7e SignalHandler(int) Signals.cpp:0:0; #2 0x00007ffb0ce97630 __restore_rt sigaction.c:0:0; #3 0x00007ffb0a4f4387 raise (/lib64/libc.so.6+0x36387); #4 0x00007ffb0a4f5a78 abort (/lib64/libc.so.6+0x37a78); #5 0x00007ffb0a4ed1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #6 0x00007ffb0a4ed252 (/lib64/libc.so.6+0x2f252); #7 0x000000000628a2f0 clang::driver::getDriverOptTable()::'lambda'()::operator()() const /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:7569:1; #8 0x000000000628a22a clang::driver::getDriverOptTable() /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:43:1; #9 0x0000000004324c6c cling::CompilerOptions::Parse(int, char const* const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) /bld6/root/src/interpreter/cling/lib/Interpreter/InvocationOptions.cpp:152:1; #10 0x00000000043257e4 cling::InvocationOptions::InvocationOptions(int, char const* const*) /bld6/root/src/interpreter/cling/lib/Interpreter/InvocationOptions.cpp:265:1; #11 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:8461,Safety,abort,aborted,8461,dexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /bld6/root/src/core/base/inc/LinkDef.h; Subprocess aborted; ```. I understand thought that a special version of clang is needed (at least that's what a warning in one of the CMakelists.txt states). Are there any instructions on how to build it or what patches need to be applied?. I've been using v6-30-03 for this. ### Reproducer. . ### ROOT version. v6-30-03. ### Installation method. source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/issues/14250:1488,Testability,Assert,Assertion,1488,"-DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_APPEND_VC_REV=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_FFI=OFF -DLLVM_ENABLE_OCAMLDOC=OFF -DLLVM_ENABLE_Z3_SOLVER=OFF ../llvm-project/llvm; ```. then for root:; ```; cmake -DCMAKE_CXX_COMPILER=nvc++ -DCMAKE_C_COMPILER=nvc -DCMAKE_CXX_FLAGS=-std=c++17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF -Dwebgui=OFF -Dsqlite=OFF -Dssl=OFF -Dmysql=OFF -Doracle=OFF -Dpgsql=OFF -Ddavix=OFF -Dgfal=OFF -Dimt=OFF -Dbuiltin_llvm=OFF -DC_SUPPORTS_FPIC=true -DCXX_SUPPORTS_FPIC=true -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_INSTALL_PREFIX=/opt/root/v6-30-03_nvhpc239 ../src; ```. However this results in the following error:; ```; rootcling_stage1: /bld6/root/bld_nvhpc/interpreter/llvm-project/clang/include/clang/Driver/Options.inc:7564: lambda []()->auto::operator()()->auto: Assertion `ValuesWereAdded && ""Couldn't add values to OptTable!""' failed.; #0 0x000000000cb9e5b1 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x000000000cb9bf7e SignalHandler(int) Signals.cpp:0:0; #2 0x00007ffb0ce97630 __restore_rt sigaction.c:0:0; #3 0x00007ffb0a4f4387 raise (/lib64/libc.so.6+0x36387); #4 0x00007ffb0a4f5a78 abort (/lib64/libc.so.6+0x37a78); #5 0x00007ffb0a4ed1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #6 0x00007ffb0a4ed252 (/lib64/libc.so.6+0x2f252); #7 0x000000000628a2f0 clang::driver::getDriverOptTable()::'lambda'()::operator()() const /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:7569:1; #8 0x000000000628a22a clang::driver::getDriverOptTable() /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:43:1; #9 0x0000000004324c6c cling::CompilerOptions::Parse(int, char const* const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14250
https://github.com/root-project/root/pull/14251:514,Availability,ERROR,ERROR,514,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14251:622,Availability,ERROR,ERROR,622,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14251:652,Availability,error,error,652,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14251:338,Deployability,update,updated,338,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14251:306,Testability,test,tested,306,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14251:402,Testability,Test,Tests,402,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14251
https://github.com/root-project/root/pull/14252:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13111; - https://github.com/root-project/root/pull/14176; - https://github.com/root-project/root/pull/14248; - https://github.com/root-project/root/pull/14249; - https://github.com/root-project/root/pull/14251; - https://github.com/root-project/root/pull/14257; - https://github.com/root-project/root/pull/14253; - https://github.com/root-project/root/pull/14265; * at least the first commit that is not applying to new developments after 6.30; - https://github.com/root-project/root/pull/14266; - https://github.com/root-project/root/pull/14236. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14167,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14252
https://github.com/root-project/root/pull/14253:302,Availability,error,error-inputarguments-rooargset-error-argument-with-name-is-already-in-this-set-in-roomcstudy,302,"At some point in `RooGenProdProj::createIntegral()`, an intermediate integral object that should only live during the scope of the function is accidentally put in the `saveSet` output parameter. This needs to be fixed. Thanks to the following forum post for noticing this: https://root-forum.cern.ch/t/error-inputarguments-rooargset-error-argument-with-name-is-already-in-this-set-in-roomcstudy/57571",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14253
https://github.com/root-project/root/issues/14254:82,Availability,avail,available,82,"### Feature description. Hello everyone, I would like to try to make the software available on flathub. I would like to know if I can do it and if there are any kind of considerations I should have.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14254
https://github.com/root-project/root/issues/14255:1035,Deployability,Install,Installation,1035,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14255:506,Modifiability,Extend,ExtendPdf,506,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14255:561,Modifiability,Extend,ExtendPdf,561,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14255:1244,Modifiability,variab,variables,1244,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14255:1395,Modifiability,variab,variables,1395,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14255:1459,Modifiability,variab,variable,1459,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14255
https://github.com/root-project/root/issues/14256:1049,Deployability,Install,Installation,1049,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When creating a modified version of a histogram/graph it's useful to have the axis of the new variation emulate those of the original. Something like target.SetXXX( original.GetXXX()) should do the trick. And it does for almost everything. The exception are the Ticks. Where if idol has bits 9 & 10 (kTickPlus and kTickMinus) both false, GetTicks returns '+' which SetTicks encodes as bit 9 on and bit 10 off. This not only messes up the display of the ticks, but also the location of the tick labels and the axis' main title.; I'm working around that by manually called SetBit, so it's no longer a problem for me. But it just seems like an API bug. ### Reproducer. ```; TAxis idol, target;; target.SetTicks( idol.GetTicks() ); cout<<idol.TestBits( 1<<9 )<<"" --> ""<<target.TestBits( 1<<9 )<<endl;; ```. ### ROOT version. ```; 6.26/06; Built for linuxx8664gcc on Jul 28 2022, 18:08:51; From tags/v6-26-06@v6-26-06 ; With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 ; ``` . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14256
https://github.com/root-project/root/issues/14256:814,Testability,Test,TestBits,814,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When creating a modified version of a histogram/graph it's useful to have the axis of the new variation emulate those of the original. Something like target.SetXXX( original.GetXXX()) should do the trick. And it does for almost everything. The exception are the Ticks. Where if idol has bits 9 & 10 (kTickPlus and kTickMinus) both false, GetTicks returns '+' which SetTicks encodes as bit 9 on and bit 10 off. This not only messes up the display of the ticks, but also the location of the tick labels and the axis' main title.; I'm working around that by manually called SetBit, so it's no longer a problem for me. But it just seems like an API bug. ### Reproducer. ```; TAxis idol, target;; target.SetTicks( idol.GetTicks() ); cout<<idol.TestBits( 1<<9 )<<"" --> ""<<target.TestBits( 1<<9 )<<endl;; ```. ### ROOT version. ```; 6.26/06; Built for linuxx8664gcc on Jul 28 2022, 18:08:51; From tags/v6-26-06@v6-26-06 ; With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 ; ``` . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14256
https://github.com/root-project/root/issues/14256:848,Testability,Test,TestBits,848,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When creating a modified version of a histogram/graph it's useful to have the axis of the new variation emulate those of the original. Something like target.SetXXX( original.GetXXX()) should do the trick. And it does for almost everything. The exception are the Ticks. Where if idol has bits 9 & 10 (kTickPlus and kTickMinus) both false, GetTicks returns '+' which SetTicks encodes as bit 9 on and bit 10 off. This not only messes up the display of the ticks, but also the location of the tick labels and the axis' main title.; I'm working around that by manually called SetBit, so it's no longer a problem for me. But it just seems like an API bug. ### Reproducer. ```; TAxis idol, target;; target.SetTicks( idol.GetTicks() ); cout<<idol.TestBits( 1<<9 )<<"" --> ""<<target.TestBits( 1<<9 )<<endl;; ```. ### ROOT version. ```; 6.26/06; Built for linuxx8664gcc on Jul 28 2022, 18:08:51; From tags/v6-26-06@v6-26-06 ; With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 ; ``` . ### Installation method. Built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14256
https://github.com/root-project/root/pull/14257:140,Deployability,update,updated,140,# This Pull request:. ## Changes or fixes:. SetTicks(GetTicks) was not a unity operator. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14256,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14257
https://github.com/root-project/root/pull/14257:110,Testability,test,tested,110,# This Pull request:. ## Changes or fixes:. SetTicks(GetTicks) was not a unity operator. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14256,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14257
https://github.com/root-project/root/issues/14259:342,Availability,down,down,342,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14259
https://github.com/root-project/root/issues/14259:624,Deployability,Install,Installation,624,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14259
https://github.com/root-project/root/issues/14259:142,Modifiability,variab,variable,142,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14259
https://github.com/root-project/root/pull/14261:340,Availability,echo,echo,340,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:937,Availability,down,down,937,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:866,Deployability,patch,patch,866,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:1377,Deployability,patch,patch,1377,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:1221,Modifiability,variab,variable,1221,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:331,Testability,log,log,331,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:457,Testability,log,log,457,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:509,Testability,log,log,509,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:541,Testability,log,log,541,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:565,Testability,log,log,565,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:604,Testability,log,log,604,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:647,Testability,log,log,647,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:670,Testability,log,log,670,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:737,Testability,log,log,737,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:788,Testability,log,log,788,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:1291,Testability,log,log,1291,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14261:1342,Testability,log,log,1342,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14261
https://github.com/root-project/root/pull/14262:25,Deployability,update,updates,25,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14262
https://github.com/root-project/root/pull/14262:84,Deployability,update,updates,84,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14262
https://github.com/root-project/root/pull/14262:101,Deployability,update,updates,101,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14262
https://github.com/root-project/root/pull/14262:391,Deployability,update,update,391,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14262
https://github.com/root-project/root/pull/14262:428,Deployability,update,updates,428,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14262
https://github.com/root-project/root/issues/14263:720,Deployability,Install,Installation,720,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Bug found by Attilah here: https://github.com/root-project/root-docker/issues/64#issuecomment-1859787405. The only place where gsl is included publicly in ROOT is in TMVA:; ```; grep -r gsl/ /opt/root/*; `include/TMVA/DNN/Architectures/Cpu/Blas.h:#include ""gsl/gsl_cblas.h""`; ```; So cmake should link publicly to that library to make it a dependency, rather than privately. ### Reproducer. https://github.com/root-project/root-docker/issues/64. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. docker. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14263
https://github.com/root-project/root/issues/14263:415,Integrability,depend,dependency,415,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Bug found by Attilah here: https://github.com/root-project/root-docker/issues/64#issuecomment-1859787405. The only place where gsl is included publicly in ROOT is in TMVA:; ```; grep -r gsl/ /opt/root/*; `include/TMVA/DNN/Architectures/Cpu/Blas.h:#include ""gsl/gsl_cblas.h""`; ```; So cmake should link publicly to that library to make it a dependency, rather than privately. ### Reproducer. https://github.com/root-project/root-docker/issues/64. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. docker. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14263
https://github.com/root-project/root/pull/14264:298,Availability,error,error,298,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. (cherry picked from commit 1477d3adebf27a19f3a8b85f21c27a0a5649c7ff)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14264
https://github.com/root-project/root/pull/14264:541,Availability,error,error,541,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. (cherry picked from commit 1477d3adebf27a19f3a8b85f21c27a0a5649c7ff)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14264
https://github.com/root-project/root/pull/14264:655,Availability,error,error,655,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. (cherry picked from commit 1477d3adebf27a19f3a8b85f21c27a0a5649c7ff)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14264
https://github.com/root-project/root/pull/14266:34,Integrability,depend,dependency,34,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:137,Integrability,depend,dependency,137,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:180,Integrability,depend,dependency,180,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:208,Integrability,interface,interface,208,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:273,Integrability,depend,dependency,273,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:630,Integrability,interface,interface,630,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:659,Integrability,interface,interface,659,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:687,Modifiability,refactor,refactoring,687,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:126,Safety,avoid,avoid,126,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14266:716,Safety,avoid,avoid,716,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14266
https://github.com/root-project/root/pull/14267:156,Deployability,update,update,156,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:324,Deployability,update,updated,324,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:221,Energy Efficiency,Adapt,Adapt,221,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:221,Modifiability,Adapt,Adapt,221,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:188,Testability,test,testing,188,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:294,Testability,test,tested,294,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14271:148,Availability,error,errors,148,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:268,Deployability,update,updated,268,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:190,Modifiability,extend,extend,190,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:238,Testability,test,tested,238,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/issues/14272:1174,Availability,error,error,1174,"on, since the ABI stability always allowed us to do so (provided we override the compiler installation with one which was compiled on the runtime platform). This worked fine until v6.30.01. With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. C7 r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:297,Deployability,install,installation,297,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In our stack we have our own build of ROOT which is performed on CC7. We regularly use those builds on RHEL8 or any subsequent version, since the ABI stability always allowed us to do so (provided we override the compiler installation with one which was compiled on the runtime platform). This worked fine until v6.30.01. With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:2150,Deployability,Install,Installation,2150,". With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. C7 running on RHEL8. ### Additional context. This is a showstopper for ALICE to adopt ROOT 6.30.X and we will have to revert back to ROOT 6.28.8 immediately if a solution is not found by noon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:127,Performance,perform,performed,127,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In our stack we have our own build of ROOT which is performed on CC7. We regularly use those builds on RHEL8 or any subsequent version, since the ABI stability always allowed us to do so (provided we override the compiler installation with one which was compiled on the runtime platform). This worked fine until v6.30.01. With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/pull/14276:807,Deployability,patch,patch,807,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:4,Modifiability,variab,variables,4,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:95,Modifiability,variab,variables,95,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:261,Modifiability,variab,variables,261,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:439,Modifiability,variab,variables,439,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:576,Safety,avoid,avoided,576,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:138,Testability,test,test,138,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:848,Testability,log,log,848,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:933,Testability,log,log,933,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:997,Testability,log,log,997,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:1082,Testability,log,log,1082,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:131,Usability,simpl,simple,131,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/issues/14277:1401,Deployability,Install,Installation,1401,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14277
https://github.com/root-project/root/issues/14277:798,Modifiability,variab,variables,798,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14277
https://github.com/root-project/root/issues/14277:1072,Safety,avoid,avoid,1072,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14277
https://github.com/root-project/root/issues/14277:1224,Usability,simpl,simple,1224,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14277
https://github.com/root-project/root/issues/14283:1966,Deployability,Install,Installation,1966,"using VecGeom converter. If I use this converter in same macro that converts gdml to root, works fine but When I export it into root file and convert it again while importing root file, It crashes. This issue is already discussed with @agheata in https://root-forum.cern.ch/t/tessellated-volume-behave-like-box-after-transporting-with-geant-3-and-4-after-converting-cad-to-root-geometry/57083. Attached File:; Macro and required GDML file ; ```; void ConvertGDMLtoRootMacro() { ; TGeoManager* gGeoManager = new TGeoManager(""cbmsim"", """");; ; const TString _volumename = ""mainframe_02"";; const TString _file = _volumename + "".gdml"";; const TString _file_out = _volumename + "".root"";. TGeoVolume *_vol_assembly = new TGeoVolumeAssembly(_volumename);. gGeoManager->SetTopVolume(_vol_assembly);; TGDMLParse parser;; TGeoVolume *_gdml_vol = parser.GDMLReadFile(_file);; TObjArray *_node = _gdml_vol->GetNodes();. Int_t copy_number = 0;; for (int iNode = 0; iNode < _node->GetEntriesFast(); iNode++) {; TGeoNode *_fNode = (TGeoNode *)_node->At(iNode);; TGeoVolume *_fVol = (TGeoVolume *)_fNode->GetVolume();. _vol_assembly->AddNode(_fVol, copy_number, 0);; copy_number++;; }; _gdml_vol->Draw(""ogl"");; gGeoManager->CloseGeometry();; _vol_assembly->Export(_file_out);; ; // Convert to VecGeom tessellated solid; auto converter = TVirtualGeoConverter::Instance(gGeoManager);; if (!converter) {; printf(""Raytracing a tessellated shape without VecGeom support will just draw a box\n"");; } else {; converter->ConvertGeometry();; } ; _vol_assembly->Draw(""ogl"");; _vol_assembly->Raytrace(kTRUE);; _vol_assembly->RandomPoints(1000000,"""");; ; }; ```. Input GDML File:; https://drive.google.com/file/d/1FbQ6rK0fIDXamiAeHWVUxc4M7YcpjA0R/view?usp=sharing. ### Reproducer. mater branch of ROOT is configured with VecGeom.; run with root -l ConvertGDMLtoRootMacro.C. ### ROOT version. ROOT 6.31/01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:1861,Modifiability,config,configured,1861,"using VecGeom converter. If I use this converter in same macro that converts gdml to root, works fine but When I export it into root file and convert it again while importing root file, It crashes. This issue is already discussed with @agheata in https://root-forum.cern.ch/t/tessellated-volume-behave-like-box-after-transporting-with-geant-3-and-4-after-converting-cad-to-root-geometry/57083. Attached File:; Macro and required GDML file ; ```; void ConvertGDMLtoRootMacro() { ; TGeoManager* gGeoManager = new TGeoManager(""cbmsim"", """");; ; const TString _volumename = ""mainframe_02"";; const TString _file = _volumename + "".gdml"";; const TString _file_out = _volumename + "".root"";. TGeoVolume *_vol_assembly = new TGeoVolumeAssembly(_volumename);. gGeoManager->SetTopVolume(_vol_assembly);; TGDMLParse parser;; TGeoVolume *_gdml_vol = parser.GDMLReadFile(_file);; TObjArray *_node = _gdml_vol->GetNodes();. Int_t copy_number = 0;; for (int iNode = 0; iNode < _node->GetEntriesFast(); iNode++) {; TGeoNode *_fNode = (TGeoNode *)_node->At(iNode);; TGeoVolume *_fVol = (TGeoVolume *)_fNode->GetVolume();. _vol_assembly->AddNode(_fVol, copy_number, 0);; copy_number++;; }; _gdml_vol->Draw(""ogl"");; gGeoManager->CloseGeometry();; _vol_assembly->Export(_file_out);; ; // Convert to VecGeom tessellated solid; auto converter = TVirtualGeoConverter::Instance(gGeoManager);; if (!converter) {; printf(""Raytracing a tessellated shape without VecGeom support will just draw a box\n"");; } else {; converter->ConvertGeometry();; } ; _vol_assembly->Draw(""ogl"");; _vol_assembly->Raytrace(kTRUE);; _vol_assembly->RandomPoints(1000000,"""");; ; }; ```. Input GDML File:; https://drive.google.com/file/d/1FbQ6rK0fIDXamiAeHWVUxc4M7YcpjA0R/view?usp=sharing. ### Reproducer. mater branch of ROOT is configured with VecGeom.; run with root -l ConvertGDMLtoRootMacro.C. ### ROOT version. ROOT 6.31/01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/pull/14286:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14286
https://github.com/root-project/root/pull/14286:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14286
https://github.com/root-project/root/pull/14287:333,Deployability,patch,patch,333,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:479,Modifiability,variab,variable,479,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:81,Performance,load,loading,81,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:308,Performance,perform,performance,308,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:406,Performance,load,loading,406,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:158,Testability,log,logic,158,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14289:78,Availability,robust,robust,78,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:98,Availability,error,error,98,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:168,Availability,error,errors,168,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:388,Availability,error,error,388,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:423,Availability,error,errors,423,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:536,Deployability,update,updated,536,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:1082,Deployability,update,updated,1082,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:841,Modifiability,variab,variables,841,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:1052,Testability,test,tested,1052,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14290:64,Testability,test,test,64,"It fails on the `macOS ARM` platforms, until this is fixed, the test should be disabled. Also, some general code improvements in the test:. * use complex literals for brevity. * don't use test fixture (fixtures make sense if you need to re-use data, but here the members were reset in every test anyway). * disable verbose output by default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14290
https://github.com/root-project/root/pull/14290:133,Testability,test,test,133,"It fails on the `macOS ARM` platforms, until this is fixed, the test should be disabled. Also, some general code improvements in the test:. * use complex literals for brevity. * don't use test fixture (fixtures make sense if you need to re-use data, but here the members were reset in every test anyway). * disable verbose output by default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14290
https://github.com/root-project/root/pull/14290:188,Testability,test,test,188,"It fails on the `macOS ARM` platforms, until this is fixed, the test should be disabled. Also, some general code improvements in the test:. * use complex literals for brevity. * don't use test fixture (fixtures make sense if you need to re-use data, but here the members were reset in every test anyway). * disable verbose output by default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14290
https://github.com/root-project/root/pull/14290:291,Testability,test,test,291,"It fails on the `macOS ARM` platforms, until this is fixed, the test should be disabled. Also, some general code improvements in the test:. * use complex literals for brevity. * don't use test fixture (fixtures make sense if you need to re-use data, but here the members were reset in every test anyway). * disable verbose output by default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14290
https://github.com/root-project/root/pull/14291:149,Testability,test,test,149,This restores the old computation before commit f65064583d and instead solves the problem by allowing a small numerical difference from 0. Fixes the test `testPolynomialRoots` on `mac14arm` where floating point operations are fused differently from other platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14291
https://github.com/root-project/root/pull/14291:155,Testability,test,testPolynomialRoots,155,This restores the old computation before commit f65064583d and instead solves the problem by allowing a small numerical difference from 0. Fixes the test `testPolynomialRoots` on `mac14arm` where floating point operations are fused differently from other platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14291
https://github.com/root-project/root/pull/14292:29,Deployability,update,updates,29,"# This Pull request:. Latest updates for xRooFit API. Includes a bug fix for jupyter notebook plot display in 6.30 onwards. ## Changes or fixes:. Due to changes in the 6.30 jupyter notebook behaviour, this PR is required to fix the display of plots in these notebooks. . Also includes a new method for creating a hypoSpace for limit calculations, with explicit specification of the test statistic type. Some other minor improvements are included. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:498,Deployability,update,updated,498,"# This Pull request:. Latest updates for xRooFit API. Includes a bug fix for jupyter notebook plot display in 6.30 onwards. ## Changes or fixes:. Due to changes in the 6.30 jupyter notebook behaviour, this PR is required to fix the display of plots in these notebooks. . Also includes a new method for creating a hypoSpace for limit calculations, with explicit specification of the test statistic type. Some other minor improvements are included. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:382,Testability,test,test,382,"# This Pull request:. Latest updates for xRooFit API. Includes a bug fix for jupyter notebook plot display in 6.30 onwards. ## Changes or fixes:. Due to changes in the 6.30 jupyter notebook behaviour, this PR is required to fix the display of plots in these notebooks. . Also includes a new method for creating a hypoSpace for limit calculations, with explicit specification of the test statistic type. Some other minor improvements are included. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:468,Testability,test,tested,468,"# This Pull request:. Latest updates for xRooFit API. Includes a bug fix for jupyter notebook plot display in 6.30 onwards. ## Changes or fixes:. Due to changes in the 6.30 jupyter notebook behaviour, this PR is required to fix the display of plots in these notebooks. . Also includes a new method for creating a hypoSpace for limit calculations, with explicit specification of the test statistic type. Some other minor improvements are included. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14293:436,Deployability,update,updated,436,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:102,Testability,test,tests,102,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:247,Testability,test,test,247,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:406,Testability,test,tested,406,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:479,Testability,log,log,479,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:548,Testability,log,log,548,"# This Pull request:. This pull request removes unused Python modules (sys, os, py) from PyROOT/cppyy tests. The modules were imported in certain files, but they were not actually referenced in the code. ## Changes or fixes:. Changes PyROOT/cppyy test files by removing unused Python modules. ## Checklist:; [CTestCostData.txt](https://github.com/root-project/root/files/13743203/CTestCostData.txt). - [X] tested changes locally; - [ ] updated the docs (if necessary); [LastTest.log.gz](https://github.com/root-project/root/files/13743200/LastTest.log.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14294:131,Security,validat,validations,131,"Since ROOT 6.22 is the second latest ROOT version that CMS uses in production, I need to make it compile again in order to do some validations. This means some PyROOT fixes need to be backported to make it compile again with newer Python versions:. * https://github.com/root-project/root/pull/10734; * https://github.com/root-project/root/pull/6994; * https://github.com/root-project/root/pull/7022; * https://github.com/root-project/root/pull/7961; * https://github.com/root-project/root/pull/8036; * https://github.com/root-project/root/pull/8257; * https://github.com/root-project/root/pull/10047",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14294
https://github.com/root-project/root/pull/14295:259,Deployability,update,updated,259,# This Pull request:. ## Changes or fixes:. Fedora 40 has replaced zlib with a zlib compatible version of zlib-ng; https://fedoraproject.org/wiki/Changes/ZlibNGTransition. This changes the size of PDF files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:229,Testability,test,tested,229,# This Pull request:. ## Changes or fixes:. Fedora 40 has replaced zlib with a zlib compatible version of zlib-ng; https://fedoraproject.org/wiki/Changes/ZlibNGTransition. This changes the size of PDF files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/issues/14296:2584,Deployability,install,install,2584,"FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:2721,Deployability,release,release,2721,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:2802,Deployability,release,release,2802,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:2920,Deployability,release,release,2920,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3038,Deployability,release,release,3038,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3129,Deployability,release,release,3129,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3220,Deployability,release,release,3220,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3311,Deployability,release,release,3311,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3402,Deployability,release,release,3402,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3493,Deployability,release,release,3493,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3584,Deployability,release,release,3584,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3675,Deployability,release,release,3675,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3766,Deployability,release,release,3766,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3879,Deployability,release,release,3879,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:3992,Deployability,release,release,3992,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4083,Deployability,release,release,4083,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4174,Deployability,release,release,4174,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4265,Deployability,release,release,4265,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4378,Deployability,release,release,4378,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4496,Deployability,release,release,4496,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4578,Deployability,install,install,4578,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:4701,Deployability,Install,Installation,4701,ease/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; ```. ### Reproducer. In any ROOT install directory:; ```; strings $ROOTSYS/lib/Core.pcm | grep $NAME_OF_BUILD_DIRECTORY; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:2520,Performance,load,loading,2520,"master which shows; ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/inpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:684,Security,access,access,684," duplicate issues. - [X] Checked for duplicates. ### Description. In reference to https://github.com/root-project/root/pull/14287#issuecomment-1867435765 . > > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from.; >; > These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with -Druntime_cxxmodules=Off and see if we still get them at such high numbers... And indeed, a ROOT build with `-Druntime_cxxmodules=OFF` leads to the following results. ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 172 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 73 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 329 newfstatat(3, ; 29 newfstatat(4, ; 3482 newfstatat(AT_FDCWD, ; 480 openat(AT_FDCWD, ; 243 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95832, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95834, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95838, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95840, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; ```; time python -c ""import ROOT"". real	0m0.447s; user	0m0.317s; sys	0m0.130s; ```. Compared with current master which shows; ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/issues/14296:1631,Security,access,access,1631,"penat(AT_FDCWD, ; 243 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95832, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95834, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95838, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95840, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; ```; time python -c ""import ROOT"". real	0m0.447s; user	0m0.317s; sys	0m0.130s; ```. Compared with current master which shows; ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/pull/14297:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR implements the EyeLike operator with corresponding unit tests which also includes the contribution of @lmoneta for fixing the generated code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14297
https://github.com/root-project/root/pull/14297:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR implements the EyeLike operator with corresponding unit tests which also includes the contribution of @lmoneta for fixing the generated code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14297
https://github.com/root-project/root/pull/14297:192,Testability,test,tests,192,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR implements the EyeLike operator with corresponding unit tests which also includes the contribution of @lmoneta for fixing the generated code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14297
https://github.com/root-project/root/issues/14300:907,Deployability,Install,Installation,907,### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the qt web gui widget as shown in the qtweb tutorial with Qt5.15 I get strange warnings about the canvas geometry being too small. To reproduce this you can just run the qtweb tutorial. When launching the qtweb tutorial these warning about too small canvas geometries are printed:; `; ... rootscheme://root.server1/jsrootsys/modules/gpad/TPadPainter.mjs:602: Hide canvas while geometry too small w=0 h=0; `; `; ... rootscheme://root.server1/jsrootsys/modules/gpad/RPadPainter.mjs:410: Hide canvas while geometry too small w=0 h=0; `; I did not manage to get rid of these warnings. Maybe some else has more insight on how to fix them?. ### Reproducer. Run the `qtweb` from `tutorials/webgui/qtweb`. The `Hide canvas while geometry too small w=0 h=0` warnings will be printed to the console. ### ROOT version. 6.31.01. ### Installation method. build from source with Qt5.15. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/pull/14301:139,Integrability,depend,depending,139,"Fix bug introduced in https://github.com/root-project/root/commit/bc4e3d3787a30a5e4ccad5371044975f4481232e. fSelEntry is a nullptr or not, depending on which constructor is called. Editable-combo-box constructor leaves fSelEntry as a nullptr, thus guards are needed. There are guards everywhere in the code except in this function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14301
https://github.com/root-project/root/issues/14302:247,Availability,error,error,247,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The command ""root --notebook"" is not allowed on Windows 11. ### Reproducer. Run the ""root --notebook"" command. This is my code.; ```; import ROOT; ```; The following is an error.; ```; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:706,Availability,error,error,706,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The command ""root --notebook"" is not allowed on Windows 11. ### Reproducer. Run the ""root --notebook"" command. This is my code.; ```; import ROOT; ```; The following is an error.; ```; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:1412,Availability,error,error,1412,"Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:2115,Availability,error,error,2115,"ty\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BAC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:2809,Availability,error,error,2809,"l Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #include ""TGeoMatrix.h""; #include ""TGeoMedium.h""; #include ""TGeoNavigator.h""; #include ""TGeoNode.h""; #include ""TGeoOpticalSurface.h""; #include ""TGeoPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:3021,Availability,Error,Error,3021,":\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #include ""TGeoMatrix.h""; #include ""TGeoMedium.h""; #include ""TGeoNavigator.h""; #include ""TGeoNode.h""; #include ""TGeoOpticalSurface.h""; #include ""TGeoPara.h""; #include ""TGeoParaboloid.h""; #include ""TGeoParallelWorld.h""; #include ""TGeoPatternFinder.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:3057,Availability,Error,Error,3057,":\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #include ""TGeoMatrix.h""; #include ""TGeoMedium.h""; #include ""TGeoNavigator.h""; #include ""TGeoNode.h""; #include ""TGeoOpticalSurface.h""; #include ""TGeoPara.h""; #include ""TGeoParaboloid.h""; #include ""TGeoParallelWorld.h""; #include ""TGeoPatternFinder.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:4855,Deployability,Release,Release,4855,"""; #include ""TGeoPara.h""; #include ""TGeoParaboloid.h""; #include ""TGeoParallelWorld.h""; #include ""TGeoPatternFinder.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConstants.h""; #include ""TGeoPhysicalNode.h""; #include ""TGeoPolygon.h""; #include ""TGeoRCPtr.h""; #include ""TGeoRegion.h""; #include ""TGeoScaledShape.h""; #include ""TGeoShape.h""; #include ""TGeoShapeAssembly.h""; #include ""TGeoSphere.h""; #include ""TGeoStateInfo.h""; #include ""TGeoSystemOfUnits.h""; #include ""TGeoTorus.h""; #include ""TGeoTrd1.h""; #include ""TGeoTrd2.h""; #include ""TGeoTube.h""; #include ""TGeoUniformMagField.h""; #include ""TGeoVolume.h""; #include ""TGeoVoxelFinder.h""; #include ""TGeoXtru.h""; #include ""TGeoTessellated.h""; #include ""TGeoVector3.h""; #include ""TVirtualGeoConverter.h""; #include ""TVirtualGeoPainter.h""; #include ""TVirtualGeoTrack.h""; #include ""TVirtualMagField.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\build\ws\BUILDTYPE\Release\LABEL\windows64\V\6-30\root\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; libcppyy_backend3_8!??; libCore!TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!get_wpgmptr(); ucrtbase!get_wpgmptr(); ucrtbase!wassert(); libCling!TClingValue::ToTypeAndValueString(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TCling::LoadEnums(); libCore!TListOfEnums::Load(); libCore!TClass::GetListOfEnums(); libCling!TCling::InvalidateCachedDecl(); libCling!TCling::UpdateListsOnUnloaded(); libCling!TCling::UpdateListsOnUnloaded(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::Value::print(); libCling!TClingValue::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:5593,Deployability,Update,UpdateListsOnUnloaded,5593,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:5635,Deployability,Update,UpdateListsOnUnloaded,5635,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:24201,Deployability,Update,UpdateListsOnUnloaded,24201,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:24243,Deployability,Update,UpdateListsOnUnloaded,24243,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:42203,Deployability,Install,Installation,42203,(); python38!PyOS_SigintEvent(); python38!PyThread_init_thread(); ucrtbase!recalloc(); KERNEL32!BaseThreadInitThunk(); ntdll!RtlUserThreadStart(). ================ Thread 17 ================; ntdll!NtDelayExecution(); ntdll!RtlDelayExecution(); KERNELBASE!SleepEx(); libCore!TWinNTSystem::TimerThread(); libCore!TWinNTSystem::ThreadStub(); KERNEL32!BaseThreadInitThunk(); ntdll!RtlUserThreadStart(). ================ Thread 18 ================; win32u!NtUserGetMessage(); USER32!GetMessageA(); libCore!TWinNTSystem::FreeDirectory(); KERNEL32!BaseThreadInitThunk(); ntdll!RtlUserThreadStart(). ================ Thread 19 ================; ntdll!ZwWaitForSingleObject(); KERNELBASE!WaitForSingleObjectEx(); python38!PyThread_init_thread(); python38!PyThread_acquire_lock_timed(); python38!PyOS_SigintEvent(); python38!PyOS_SigintEvent(); python38!PyComplex_AsCComplex(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyEval_EvalCodeWithName(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyEval_EvalCodeWithName(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyMethod_Self(); python38!PyVectorcall_Call(); python38!PyOS_SigintEvent(); python38!PyThread_init_thread(); ucrtbase!recalloc(); KERNEL32!BaseThreadInitThunk(); ntdll!RtlUserThreadStart(). ==========================================; ============= END STACKTRACE =============; ==========================================; ```. ### ROOT version. 6.30/02. ### Installation method. pre-built binary. ### Operating system. windows11. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:5458,Performance,Load,LoadEnums,5458,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:5493,Performance,Load,Load,5493,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:24066,Performance,Load,LoadEnums,24066,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:24101,Performance,Load,Load,24101,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:4965,Safety,abort,abort,4965,"er.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConstants.h""; #include ""TGeoPhysicalNode.h""; #include ""TGeoPolygon.h""; #include ""TGeoRCPtr.h""; #include ""TGeoRegion.h""; #include ""TGeoScaledShape.h""; #include ""TGeoShape.h""; #include ""TGeoShapeAssembly.h""; #include ""TGeoSphere.h""; #include ""TGeoStateInfo.h""; #include ""TGeoSystemOfUnits.h""; #include ""TGeoTorus.h""; #include ""TGeoTrd1.h""; #include ""TGeoTrd2.h""; #include ""TGeoTube.h""; #include ""TGeoUniformMagField.h""; #include ""TGeoVolume.h""; #include ""TGeoVoxelFinder.h""; #include ""TGeoXtru.h""; #include ""TGeoTessellated.h""; #include ""TGeoVector3.h""; #include ""TVirtualGeoConverter.h""; #include ""TVirtualGeoPainter.h""; #include ""TVirtualGeoTrack.h""; #include ""TVirtualMagField.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\build\ws\BUILDTYPE\Release\LABEL\windows64\V\6-30\root\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; libcppyy_backend3_8!??; libCore!TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!get_wpgmptr(); ucrtbase!get_wpgmptr(); ucrtbase!wassert(); libCling!TClingValue::ToTypeAndValueString(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TCling::LoadEnums(); libCore!TListOfEnums::Load(); libCore!TClass::GetListOfEnums(); libCling!TCling::InvalidateCachedDecl(); libCling!TCling::UpdateListsOnUnloaded(); libCling!TCling::UpdateListsOnUnloaded(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingTypedefInfo::Init(); libCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
