id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/soedinglab/MMseqs2/issues/287:27354,Energy Efficiency,consumption,consumption,27354,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27476,Energy Efficiency,consumption,consumption,27476,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27598,Energy Efficiency,consumption,consumption,27598,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27720,Energy Efficiency,consumption,consumption,27720, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27887,Energy Efficiency,consumption,consumption,27887,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27964,Energy Efficiency,consumption,consumption,27964, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28131,Energy Efficiency,consumption,consumption,28131,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28253,Energy Efficiency,consumption,consumption,28253,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28375,Energy Efficiency,consumption,consumption,28375,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28452,Energy Efficiency,consumption,consumption,28452, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28619,Energy Efficiency,consumption,consumption,28619,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28741,Energy Efficiency,consumption,consumption,28741,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:28953,Energy Efficiency,consumption,consumption,28953,mory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29030,Energy Efficiency,consumption,consumption,29030,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29107,Energy Efficiency,consumption,consumption,29107, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29229,Energy Efficiency,consumption,consumption,29229, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=======================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29396,Energy Efficiency,consumption,consumption,29396,atabase size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29518,Energy Efficiency,consumption,consumption,29518,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29685,Energy Efficiency,consumption,consumption,29685,se size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29762,Energy Efficiency,consumption,consumption,29762,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=========,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29884,Energy Efficiency,consumption,consumption,29884, Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:29961,Energy Efficiency,consumption,consumption,29961,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [===============,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:30038,Energy Efficiency,consumption,consumption,30038,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Ma,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:4551,Performance,load,load-mode,4551,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:5368,Performance,load,load-mode,5368,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:6185,Performance,load,load-mode,6185,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:7002,Performance,load,load-mode,7002,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:7819,Performance,load,load-mode,7819,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:8636,Performance,load,load-mode,8636,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:9453,Performance,load,load-mode,9453,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:10270,Performance,load,load-mode,10270,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:11087,Performance,load,load-mode,11087,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:11904,Performance,load,load-mode,11904,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:12721,Performance,load,load-mode,12721,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:13538,Performance,load,load-mode,13538,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:14355,Performance,load,load-mode,14355,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15172,Performance,load,load-mode,15172,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15989,Performance,load,load-mode,15989,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:16806,Performance,load,load-mode,16806,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:17623,Performance,load,load-mode,17623,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:18440,Performance,load,load-mode,18440,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:19257,Performance,load,load-mode,19257,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:20074,Performance,load,load-mode,20074,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:20891,Performance,load,load-mode,20891,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:21708,Performance,load,load-mode,21708,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:22525,Performance,load,load-mode,22525,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:23342,Performance,load,load-mode,23342,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24159,Performance,load,load-mode,24159,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24976,Performance,load,load-mode,24976,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:25793,Performance,load,load-mode,25793,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26610,Performance,load,load-mode,26610,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45163,Performance,perform,performance,45163," 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45726,Performance,load,load,45726,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45753,Performance,load,load,45753,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:44630,Safety,abort,aborted,44630,"0; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:44784,Safety,detect,detected,44784,"0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/288:209,Testability,test,testing,209,"## Expected Behavior; nident should be greater than 0 and vary between hits. ## Current Behavior; nident is always equal to 0 even for exact matches. ## Steps to Reproduce (for bugs); I used this proteome for testing: https://www.ncbi.nlm.nih.gov/protein?LinkName=nuccore_protein&from_uid=983357513. mmseqs createdb codi.fasta codiDB; mmseqs createindex --threads 6 codiDB .; mmseqs search --threads 6 codiDB codiDB resultDB . -s 1; mmseqs convertalis codiDB codiDB resultDB codi.out --format-output ""query,target,nident,pident,qlen,tlen,qcov,tcov,evalue"". ## Context; I observe the same behavior on our HPC with version 11-e1a1c (self-compiled, I guess) and on my Mac with version 10.6d92c (miniconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/288
https://github.com/soedinglab/MMseqs2/issues/289:281,Deployability,Install,Install,281,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289
https://github.com/soedinglab/MMseqs2/issues/289:315,Deployability,install,install,315,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289
https://github.com/soedinglab/MMseqs2/issues/289:353,Deployability,install,installed,353,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289
https://github.com/soedinglab/MMseqs2/issues/289:410,Deployability,install,installed,410,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289
https://github.com/soedinglab/MMseqs2/issues/290:116,Availability,Error,Error,116,"## Expected Behavior. ## Current Behavior; > The merged results are assumed to be sorted by decreasing bitscore.; > Error: result2rbh died. It seems that res_best_merged_sorted is not sorted as expected. ## Steps to Reproduce (for bugs); ```bash; mmseqs rbh in_cds_1_mmdb in_cds_2_mmdb out.out tmp --threads 30 --max-seqs 100 --max-accept 10; ```. ## MMseqs Output (for bugs); > Merging the results to tmp/4773716631589885835/res_best_merged; > Time for merging to res_best_merged: 0h 0m 0s 4ms; > Time for processing: 0h 0m 0s 28ms; > filterdb tmp/4773716631589885835/res_best_merged tmp/4773716631589885835/res_best_merged_sorted --sort-entries 2 --filter-column 2 --threads 5 --compressed 0 -v 3; >; > Filtering using regular expression; > [=================================================================] 45.87K 0s 56ms; > Time for merging to res_best_merged_sorted: 0h 0m 0s 11ms; > Time for processing: 0h 0m 0s 77ms; > result2rbh tmp/4773716631589885835/res_best_merged_sorted AA_cds_rbh_BB_cds.out --threads 5 --compressed 0 -v 3; >; > [The merged results are assumed to be sorted by decreasing bitscore.; > The merged results are assumed to be sorted by decreasing bitscore.; > The merged results are assumed to be sorted by decreasing bitscore.; > Error: result2rbh died. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 24479bc27c3f33a3c0121f916038c605beef3e79; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; Cmaker 3.10.2, gcc 7.5.0; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Xeon(R) CPU E5-2699 v3; RAM: 220G; * Operating system and version:; Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290
https://github.com/soedinglab/MMseqs2/issues/290:1260,Availability,Error,Error,1260,"## Expected Behavior. ## Current Behavior; > The merged results are assumed to be sorted by decreasing bitscore.; > Error: result2rbh died. It seems that res_best_merged_sorted is not sorted as expected. ## Steps to Reproduce (for bugs); ```bash; mmseqs rbh in_cds_1_mmdb in_cds_2_mmdb out.out tmp --threads 30 --max-seqs 100 --max-accept 10; ```. ## MMseqs Output (for bugs); > Merging the results to tmp/4773716631589885835/res_best_merged; > Time for merging to res_best_merged: 0h 0m 0s 4ms; > Time for processing: 0h 0m 0s 28ms; > filterdb tmp/4773716631589885835/res_best_merged tmp/4773716631589885835/res_best_merged_sorted --sort-entries 2 --filter-column 2 --threads 5 --compressed 0 -v 3; >; > Filtering using regular expression; > [=================================================================] 45.87K 0s 56ms; > Time for merging to res_best_merged_sorted: 0h 0m 0s 11ms; > Time for processing: 0h 0m 0s 77ms; > result2rbh tmp/4773716631589885835/res_best_merged_sorted AA_cds_rbh_BB_cds.out --threads 5 --compressed 0 -v 3; >; > [The merged results are assumed to be sorted by decreasing bitscore.; > The merged results are assumed to be sorted by decreasing bitscore.; > The merged results are assumed to be sorted by decreasing bitscore.; > Error: result2rbh died. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 24479bc27c3f33a3c0121f916038c605beef3e79; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; Cmaker 3.10.2, gcc 7.5.0; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Xeon(R) CPU E5-2699 v3; RAM: 220G; * Operating system and version:; Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290
https://github.com/soedinglab/MMseqs2/issues/291:265,Testability,log,log,265,"Hi, We are using mmseqs2 for the protein sequence clustering and it has been great! ; However, recently, we found for one of the fasta files we tried to cluster, the total input sequence number does not match the cluster output (the members). ; When looking at the log, we found there are some sequences got truncated, which may have cause the problem? ; Do you have any suggestion on why this occur and which parameters we could try to fix the issue? Also, the input fasta file is already de-replicated. ; Attached is the run log for mmseq2. ; [log_clu.txt](https://github.com/soedinglab/MMseqs2/files/4382578/log_clu.txt); Thank you very much!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291
https://github.com/soedinglab/MMseqs2/issues/291:527,Testability,log,log,527,"Hi, We are using mmseqs2 for the protein sequence clustering and it has been great! ; However, recently, we found for one of the fasta files we tried to cluster, the total input sequence number does not match the cluster output (the members). ; When looking at the log, we found there are some sequences got truncated, which may have cause the problem? ; Do you have any suggestion on why this occur and which parameters we could try to fix the issue? Also, the input fasta file is already de-replicated. ; Attached is the run log for mmseq2. ; [log_clu.txt](https://github.com/soedinglab/MMseqs2/files/4382578/log_clu.txt); Thank you very much!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291
https://github.com/soedinglab/MMseqs2/issues/292:761,Deployability,pipeline,pipeline,761,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292
https://github.com/soedinglab/MMseqs2/issues/292:614,Integrability,depend,dependent,614,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292
https://github.com/soedinglab/MMseqs2/issues/294:736,Availability,Error,Error,736,"1. There is no data/MATRIX.mat . From the wiki :. > ; > How to build your own MMseqs2 compatible substitution matrices; > ; > You can use the (still Work in Progress) R script in util/format_substitution_matrix.R to prepare a substitution matrix for use in MMseqs2. It takes a matrix from stdin and returns the reformatted matrix to stdout.; > ; > util/format_substitution_matrix.R < data/MATRIX.mat > data/MATRIX.out; > mmseqs search query db res tmp --sub-mat data/MATRIX.out; > . 2. The format_substitution_matrix.R does not work on the ncbi-blast BLOSUM matrix. [/usr/share/ncbi/data/BLOSUM62](https://github.com/soedinglab/MMseqs2/files/4416199/BLOSUM62.txt). Running; `util/format_substitution_matrix.R < BLOSUM62`. Results in:; `Error in mat[alphabet, alphabet] : subscript out of bounds; Execution halted`. So I am not sure what the input format for format_substitution_matrix.R should look like... Maybe I am doing something wrong here ? Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/294
https://github.com/soedinglab/MMseqs2/issues/295:46,Availability,error,error,46,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295
https://github.com/soedinglab/MMseqs2/issues/295:58,Availability,error,error,58,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295
https://github.com/soedinglab/MMseqs2/issues/295:39,Testability,assert,assert,39,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295
https://github.com/soedinglab/MMseqs2/issues/296:338,Availability,avail,available,338,"Sorry if this isn't the right forum, but is there a reference database for determining the sensitivity to the first false positive as plotted here to compare the various `-s` and with other packages? . https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter . Or said another way, are the databases/code used for the plot available somewhere? I'm trying to validate another method and am hoping place it accurately/make a fair comparison with other the rest.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296
https://github.com/soedinglab/MMseqs2/issues/296:373,Security,validat,validate,373,"Sorry if this isn't the right forum, but is there a reference database for determining the sensitivity to the first false positive as plotted here to compare the various `-s` and with other packages? . https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter . Or said another way, are the databases/code used for the plot available somewhere? I'm trying to validate another method and am hoping place it accurately/make a fair comparison with other the rest.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296
https://github.com/soedinglab/MMseqs2/issues/297:613,Availability,mask,mask,613,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:622,Availability,mask,mask-lower-case,622,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1026,Availability,mask,mask,1026,"## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1035,Availability,mask,mask-lower-case,1035,"## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4619,Availability,fault,fault,4619,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4727,Availability,Error,Error,4727,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4999,Availability,fault,fault,4999,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4893,Energy Efficiency,consumption,consumption,4893,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1757,Integrability,wrap,wrapped-scoring,1757,"ulti-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4035,Integrability,wrap,wrapped-scoring,4035,"973434362/order_redundancy db/dbclust tmp/16437734971973434362/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 16ms; Time for processing: 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:742,Modifiability,extend,extendable,742,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1155,Modifiability,extend,extendable,1155,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4338,Modifiability,extend,extend,4338,"ilter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1917,Performance,load,load-mode,1917,"um62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 64ms. Size of the sequence database: 140204; Size of the alignment database: 140204; Number of clusters: 140160. Writing res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:4273,Performance,load,load-mode,4273,": 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:690,Security,hash,hash-shift,690,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/297:1103,Security,hash,hash-shift,1103,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297
https://github.com/soedinglab/MMseqs2/issues/299:15,Availability,down,downloading,15,"Hi. I had been downloading databases with `mmseqs databases`, then I got an issue when I downloaded the PDB70. ```; mmseqs databases PDB70 pdb70 tmp --threads 10; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; databases PDB70 pdb70 tmp --threads 10 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	10; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 19.4G 100 19.4G 0 0 1724k 0 3:17:33 3:17:33 --:--:-- 1690k; Input database ""tmp/10983224153756533182/msa"" is wrong!; Current input: Generic. Allowed input: MSA; Error: msa2profile died; ``` . What should I have to do?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/299
https://github.com/soedinglab/MMseqs2/issues/299:89,Availability,down,downloaded,89,"Hi. I had been downloading databases with `mmseqs databases`, then I got an issue when I downloaded the PDB70. ```; mmseqs databases PDB70 pdb70 tmp --threads 10; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; databases PDB70 pdb70 tmp --threads 10 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	10; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 19.4G 100 19.4G 0 0 1724k 0 3:17:33 3:17:33 --:--:-- 1690k; Input database ""tmp/10983224153756533182/msa"" is wrong!; Current input: Generic. Allowed input: MSA; Error: msa2profile died; ``` . What should I have to do?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/299
https://github.com/soedinglab/MMseqs2/issues/299:710,Availability,Error,Error,710,"Hi. I had been downloading databases with `mmseqs databases`, then I got an issue when I downloaded the PDB70. ```; mmseqs databases PDB70 pdb70 tmp --threads 10; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; databases PDB70 pdb70 tmp --threads 10 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	10; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 19.4G 100 19.4G 0 0 1724k 0 3:17:33 3:17:33 --:--:-- 1690k; Input database ""tmp/10983224153756533182/msa"" is wrong!; Current input: Generic. Allowed input: MSA; Error: msa2profile died; ``` . What should I have to do?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/299
https://github.com/soedinglab/MMseqs2/issues/300:198,Availability,error,error,198,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300
https://github.com/soedinglab/MMseqs2/issues/300:1484,Availability,down,down,1484,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300
https://github.com/soedinglab/MMseqs2/issues/300:204,Integrability,message,message,204,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300
https://github.com/soedinglab/MMseqs2/issues/300:1120,Performance,perform,performed,1120,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300
https://github.com/soedinglab/MMseqs2/issues/300:67,Testability,test,test,67,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300
https://github.com/soedinglab/MMseqs2/issues/301:1381,Availability,Mask,Mask,1381,"mseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:1399,Availability,Mask,Mask,1399,"mseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3263,Availability,mask,mask,3263,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3272,Availability,mask,mask-lower-case,3272,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3759,Availability,mask,mask,3759,"ompressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3768,Availability,mask,mask-lower-case,3768,"ompressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:4245,Availability,mask,mask,4245,"er-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:4254,Availability,mask,mask-lower-case,4254,"er-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:10556,Availability,mask,mask,10556,"7M 1m 36s 476ms ; Write merged clustering; [=================================================================] 100.00% 121.96M 2m 4s 130ms ; Time for merging to clu_redundancy: 0h 1m 28s 54ms; Time for processing: 0h 4m 53s 669ms; createsubdb cluster_tmp/1127447206531551203/clu_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:10565,Availability,mask,mask-lower-case,10565,"7M 1m 36s 476ms ; Write merged clustering; [=================================================================] 100.00% 121.96M 2m 4s 130ms ; Time for merging to clu_redundancy: 0h 1m 28s 54ms; Time for processing: 0h 4m 53s 669ms; createsubdb cluster_tmp/1127447206531551203/clu_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:11045,Availability,Mask,Masked,11045,"cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 119070883; Target db start 1 to 119070883; [> ] 0.00% 1 eta -. Here are the files that were so far created in the tmp directory:; -rwx------ 1 btschits biogeo 11721 Apr 16 18:49 cascaded_clustering.sh; -rw-r--r-- 1 btschits biogeo 4 Apr 16 20:38 clu_redundancy.dbtype; -rw-r--r-- 1 btschits biogeo 2631811454 Apr 16 20:38 clu_redundancy.index; -rw-r--r-- 1 btschits biogeo 28134491 Apr 16 20:37 clu_redundancy.0; -rw-r--r-- 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:10784,Energy Efficiency,consumption,consumption,10784,"edundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 119070883; Target db start 1 to 119070883; [> ] 0.00% 1 eta -. Here are the files that were so far created in the tmp directory:; -rwx------ 1 btschits biogeo 11721 Apr 16 18:49 cascaded_clustering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:1703,Integrability,wrap,wrapped,1703,"tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:2829,Integrability,wrap,wrapped-scoring,2829,"ernative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:5116,Integrability,wrap,wrapped-scoring,5116,"-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/11274472065315512",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:7631,Integrability,wrap,wrapped-scoring,7631,"pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 30s 812ms; Time for processing: 0h 1m 20s 243ms; filterdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:2415,Modifiability,extend,extendable,2415,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3134,Modifiability,extend,extend,3134,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3349,Modifiability,extend,extendable,3349,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3889,Modifiability,extend,extendable,3889,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:4375,Modifiability,extend,extendable,4375,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:7936,Modifiability,extend,extend,7936,"531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 49s 674ms. Size of the sequence database: 119253279; Size of the alignment database: 1192",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3069,Performance,load,load-mode,3069,"hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB clus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:5278,Performance,load,load-mode,5278,"er-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:7871,Performance,load,load-mode,7871,"92146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 .",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:10653,Performance,load,load-mode,10653,"7M 1m 36s 476ms ; Write merged clustering; [=================================================================] 100.00% 121.96M 2m 4s 130ms ; Time for merging to clu_redundancy: 0h 1m 28s 54ms; Time for processing: 0h 4m 53s 669ms; createsubdb cluster_tmp/1127447206531551203/clu_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:2392,Security,hash,hash,2392,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3297,Security,hash,hash-shift,3297,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:3837,Security,hash,hash-shift,3837,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:4323,Security,hash,hash-shift,4323,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/301:273,Testability,log,log,273,"## Expected Behavior; not sure; ## Current Behavior; cluster is stuck at prefilter stage for > 3 days. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Here is the log printed on the screen:. /home/btschits/apps/MMseqs2/build/bin/mmseqs cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301
https://github.com/soedinglab/MMseqs2/issues/302:190,Deployability,update,updated,190,"I was wondering how I could merge existing SeqTaxDBs into one database? Also is it possible to add sequences, individually, to this database as well? For instance, I would like to create an updated version of the MMETSP_zenodo_3247846_uniclust90_2018_08_seed_valid_taxids DB used in the MetaEuk paper, then add my model organism to the final database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/302
https://github.com/soedinglab/MMseqs2/issues/303:58,Availability,error,error,58,## Expected Behavior. createdb creates a database with no error. ## Current Behavior. createdb stalls and stops reporting once 10962815327 sequences have been added and fails to make progress. Is there a limit to the number of sequences that can be in a database?. ## Steps to Reproduce (for bugs). `/custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs createdb ../2020-04-19-in.fa/part-* inDB --createdb-mode 1`. ## MMseqs Output (for bugs). ```; MMseqs Version: 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; Database type 0; Shuffle input database true; Createdb mode 1; Offset of numeric ids 0; Compressed 0; Verbosity 3; Shuffle database can not be combined with --createdb-mode 0.; We recompute with --shuffle 0.; Converting sequences; [10962815327] 2h 14m 39s 271ms; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303
https://github.com/soedinglab/MMseqs2/issues/303:316,Deployability,install,installations,316,## Expected Behavior. createdb creates a database with no error. ## Current Behavior. createdb stalls and stops reporting once 10962815327 sequences have been added and fails to make progress. Is there a limit to the number of sequences that can be in a database?. ## Steps to Reproduce (for bugs). `/custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs createdb ../2020-04-19-in.fa/part-* inDB --createdb-mode 1`. ## MMseqs Output (for bugs). ```; MMseqs Version: 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; Database type 0; Shuffle input database true; Createdb mode 1; Offset of numeric ids 0; Compressed 0; Verbosity 3; Shuffle database can not be combined with --createdb-mode 0.; We recompute with --shuffle 0.; Converting sequences; [10962815327] 2h 14m 39s 271ms; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303
https://github.com/soedinglab/MMseqs2/issues/305:294,Availability,Down,Download,294,"## Expected Behavior. I expected to run an alignment with `mmseqs search` and then convert the alignment into a custom tabular format with `mmseqs convertalis`. ## Current Behavior. Running `mmseq convertails` fails with `Can not open index file seqDB.index`. ## Steps to Reproduce (for bugs). Download refseq representative microbial genomes:. ```; curl https://www.ncbi.nlm.nih.gov/projects/r_gencoll/ftp_service/nph-gc-ftp-service.cgi/\?HistoryId\=NCID_1_163497961_130.14.18.97_5555_1588507183_4102358427_0MetA0_S_HStore\&QueryKey\=1\&ReleaseType\=RefSeq\&FileType\=GENOME_FASTA\&Flat\=true >genomes.tar; tar xf genomes.tar; ```. Generate the index:. ```; mmseqs createdb ncbi-genomes-2020-05-03/*fna.gz seqDB; mmseqs createindex --threads 48 --search-type 2 seqDB tmp; ```. Align anything, like this holliday junction resolvase:. ```; >1FZR_1|Chains A,B,C,D|ENDONUCLEASE I|Enterobacteria phage T7 (10760); VGAFRSGLEDKVSKQLESKGIKFEYEEWKVPYVIPASNHTYTPDFLLPNGIFVKTKGLWESDDRKKHLLIREQHPELDIRIVFSSSRTKLYKGSPTSYGEFCEKHGIKFADKLIPAEWIKEPKKEVPFDRLKRKGGKK; ```. ```; mmseqs createdb query.fa queryDB; mmseqs search -s 7.5 --max-seqs 2147483647 -a 1 queryDB seqDB alignDB tmp; ```. Now, we try to extract the alignment information:. ```; mmseqs convertalis queryDB seqDB alignDB aln.tab; ... # error; Can not open index file seqDB.index!; ```. ## Context. Why am I missing the .index file? This is a rather large target sequence set, and so I see things are broken up into many smaller index files. But there is not one main .index. ## Your Environment. This is a recent debian system (not sure which version) and I'm running a build of mmseqs that I set up in guix. https://github.com/ekg/guix-genomics/blob/master/mmseqs2.scm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305
https://github.com/soedinglab/MMseqs2/issues/305:1286,Availability,error,error,1286,"## Expected Behavior. I expected to run an alignment with `mmseqs search` and then convert the alignment into a custom tabular format with `mmseqs convertalis`. ## Current Behavior. Running `mmseq convertails` fails with `Can not open index file seqDB.index`. ## Steps to Reproduce (for bugs). Download refseq representative microbial genomes:. ```; curl https://www.ncbi.nlm.nih.gov/projects/r_gencoll/ftp_service/nph-gc-ftp-service.cgi/\?HistoryId\=NCID_1_163497961_130.14.18.97_5555_1588507183_4102358427_0MetA0_S_HStore\&QueryKey\=1\&ReleaseType\=RefSeq\&FileType\=GENOME_FASTA\&Flat\=true >genomes.tar; tar xf genomes.tar; ```. Generate the index:. ```; mmseqs createdb ncbi-genomes-2020-05-03/*fna.gz seqDB; mmseqs createindex --threads 48 --search-type 2 seqDB tmp; ```. Align anything, like this holliday junction resolvase:. ```; >1FZR_1|Chains A,B,C,D|ENDONUCLEASE I|Enterobacteria phage T7 (10760); VGAFRSGLEDKVSKQLESKGIKFEYEEWKVPYVIPASNHTYTPDFLLPNGIFVKTKGLWESDDRKKHLLIREQHPELDIRIVFSSSRTKLYKGSPTSYGEFCEKHGIKFADKLIPAEWIKEPKKEVPFDRLKRKGGKK; ```. ```; mmseqs createdb query.fa queryDB; mmseqs search -s 7.5 --max-seqs 2147483647 -a 1 queryDB seqDB alignDB tmp; ```. Now, we try to extract the alignment information:. ```; mmseqs convertalis queryDB seqDB alignDB aln.tab; ... # error; Can not open index file seqDB.index!; ```. ## Context. Why am I missing the .index file? This is a rather large target sequence set, and so I see things are broken up into many smaller index files. But there is not one main .index. ## Your Environment. This is a recent debian system (not sure which version) and I'm running a build of mmseqs that I set up in guix. https://github.com/ekg/guix-genomics/blob/master/mmseqs2.scm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305
https://github.com/soedinglab/MMseqs2/issues/305:538,Deployability,Release,ReleaseType,538,"## Expected Behavior. I expected to run an alignment with `mmseqs search` and then convert the alignment into a custom tabular format with `mmseqs convertalis`. ## Current Behavior. Running `mmseq convertails` fails with `Can not open index file seqDB.index`. ## Steps to Reproduce (for bugs). Download refseq representative microbial genomes:. ```; curl https://www.ncbi.nlm.nih.gov/projects/r_gencoll/ftp_service/nph-gc-ftp-service.cgi/\?HistoryId\=NCID_1_163497961_130.14.18.97_5555_1588507183_4102358427_0MetA0_S_HStore\&QueryKey\=1\&ReleaseType\=RefSeq\&FileType\=GENOME_FASTA\&Flat\=true >genomes.tar; tar xf genomes.tar; ```. Generate the index:. ```; mmseqs createdb ncbi-genomes-2020-05-03/*fna.gz seqDB; mmseqs createindex --threads 48 --search-type 2 seqDB tmp; ```. Align anything, like this holliday junction resolvase:. ```; >1FZR_1|Chains A,B,C,D|ENDONUCLEASE I|Enterobacteria phage T7 (10760); VGAFRSGLEDKVSKQLESKGIKFEYEEWKVPYVIPASNHTYTPDFLLPNGIFVKTKGLWESDDRKKHLLIREQHPELDIRIVFSSSRTKLYKGSPTSYGEFCEKHGIKFADKLIPAEWIKEPKKEVPFDRLKRKGGKK; ```. ```; mmseqs createdb query.fa queryDB; mmseqs search -s 7.5 --max-seqs 2147483647 -a 1 queryDB seqDB alignDB tmp; ```. Now, we try to extract the alignment information:. ```; mmseqs convertalis queryDB seqDB alignDB aln.tab; ... # error; Can not open index file seqDB.index!; ```. ## Context. Why am I missing the .index file? This is a rather large target sequence set, and so I see things are broken up into many smaller index files. But there is not one main .index. ## Your Environment. This is a recent debian system (not sure which version) and I'm running a build of mmseqs that I set up in guix. https://github.com/ekg/guix-genomics/blob/master/mmseqs2.scm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305
https://github.com/soedinglab/MMseqs2/issues/306:254,Safety,avoid,avoiding,254,I'd like to know whats the difference between `createlinindex` and `createindex`. I did the index to `nr` with `createindex` and after I did `createlinindex` which overwrites the `*.idx` files of the previous index. . There is a way to keep both indexes avoiding one overwrite the other.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/306
https://github.com/soedinglab/MMseqs2/issues/308:25,Performance,perform,perform,25,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308
https://github.com/soedinglab/MMseqs2/issues/308:168,Performance,perform,perform,168,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308
https://github.com/soedinglab/MMseqs2/issues/308:201,Performance,perform,perform,201,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308
https://github.com/soedinglab/MMseqs2/issues/308:489,Performance,perform,perform,489,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308
https://github.com/soedinglab/MMseqs2/issues/308:737,Performance,perform,perform,737,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308
https://github.com/soedinglab/MMseqs2/pull/309:92,Availability,down,down,92,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/pull/309:419,Availability,error,error,419,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/pull/309:640,Availability,error,error,640,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/pull/309:917,Performance,perform,performance,917,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/pull/309:528,Testability,log,logs,528,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/pull/309:757,Testability,log,logs,757,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309
https://github.com/soedinglab/MMseqs2/issues/310:593,Testability,test,test,593,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310
https://github.com/soedinglab/MMseqs2/issues/310:671,Testability,test,test,671,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310
https://github.com/soedinglab/MMseqs2/issues/310:1018,Testability,test,test,1018,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310
https://github.com/soedinglab/MMseqs2/issues/310:1096,Testability,test,test,1096,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310
https://github.com/soedinglab/MMseqs2/issues/314:355,Usability,simpl,simply,355,"## Expected Behavior; mmseqs createindex; finishes in reasonable time on splitted db. ## Current Behavior; mmseqs createindex ; gets stucked in seemingly infinite loop after filling the index. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; The problem is interimttent but simply running the steps to create subdatabases from the manual, followed by createindex. Size of database does not matter much.; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; The output is standard, just incomplete. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 11-e1a1c. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; cluster admin compiled the version so self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; probably reasonably current gcc...; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; about 120GB RAM per node, intel CPUs with SS2, not sure about AVX2.; * Operating system and version:; some flavor of linux (debian-style)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314
https://github.com/soedinglab/MMseqs2/issues/315:50,Availability,error,error,50,"## Expected Behavior. createdb creates db without error. ## Current Behavior. created command is killed after 261 mio genes on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315
https://github.com/soedinglab/MMseqs2/issues/315:1442,Availability,error,error,1442,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315
https://github.com/soedinglab/MMseqs2/issues/315:1463,Availability,error,error,1463,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315
https://github.com/soedinglab/MMseqs2/issues/315:1470,Safety,Detect,Detected,1470,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315
https://github.com/soedinglab/MMseqs2/issues/316:301,Availability,redundant,redundant,301,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316
https://github.com/soedinglab/MMseqs2/issues/316:135,Deployability,continuous,continuously,135,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316
https://github.com/soedinglab/MMseqs2/issues/316:148,Deployability,update,updated,148,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316
https://github.com/soedinglab/MMseqs2/issues/316:41,Modifiability,enhance,enhancement,41,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316
https://github.com/soedinglab/MMseqs2/issues/316:301,Safety,redund,redundant,301,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316
https://github.com/soedinglab/MMseqs2/issues/317:166,Testability,log,log,166,"Dear Sir:; I want to try mmseqs2 cluster as cd-hit-est. ; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log ; Please kindly suggest me the corresponding parameter to set for mmseqs cluster and lincluster.; Thanks a lot.; Xianghui. ![image](https://user-images.githubusercontent.com/4928483/84471749-8e533880-acb8-11ea-81fa-d84ffe264628.png). ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317
https://github.com/soedinglab/MMseqs2/issues/318:267,Testability,test,tested,267,"I have noticed that in recent versions (from v10) the number of hits generated by `search` can be substantially different when not indexing the input databases (especially the target). . It should be noted that also the execution times are substantially different. I tested most of the possibles combinations using a single CPUs, and symmarized the results in the table below: . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318
https://github.com/soedinglab/MMseqs2/issues/318:818,Testability,test,test,818,"I have noticed that in recent versions (from v10) the number of hits generated by `search` can be substantially different when not indexing the input databases (especially the target). . It should be noted that also the execution times are substantially different. I tested most of the possibles combinations using a single CPUs, and symmarized the results in the table below: . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318
https://github.com/soedinglab/MMseqs2/issues/318:895,Testability,test,test,895,"I have noticed that in recent versions (from v10) the number of hits generated by `search` can be substantially different when not indexing the input databases (especially the target). . It should be noted that also the execution times are substantially different. I tested most of the possibles combinations using a single CPUs, and symmarized the results in the table below: . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318
https://github.com/soedinglab/MMseqs2/issues/318:2413,Testability,test,tested,2413,"- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in_name1.db> <in_name2.db> <raw_out_1-2> <blast_out_1-2> -v 0 --format-mode 0 --search-type 1 --format-output query,target,qstart,qend,tstart,tend,bits` . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs Version: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249 (but also happens with version 10); * X86 AVX2 Linux binaries; * Operating system and version: tested on different Linux distributions",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318
https://github.com/soedinglab/MMseqs2/issues/319:1451,Availability,fault,faulty,1451,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319
https://github.com/soedinglab/MMseqs2/issues/319:1161,Deployability,install,installed,1161,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319
https://github.com/soedinglab/MMseqs2/issues/319:1795,Energy Efficiency,efficient,efficiently,1795,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319
https://github.com/soedinglab/MMseqs2/issues/320:788,Availability,Down,Download,788,"## Expected Behavior. Expected the following two commands to result in the same database:. `mmseqs filtertaxseqdb swissProtSomeClasses test1 --taxon-list '4891||1075807||147549'`. and . `mmseqs filtertaxseqdb swissProtSomeClasses test2 --taxon-list '4891,1075807,147549'`. Also expected the following command to fail/throw warning:. `mmseqs filtertaxseqdb swissProtSomeClasses test3 --taxon-list '489!@!@1075807****147549'`. ## Current Behavior. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Makin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1375,Performance,Load,Loading,1375,"'489!@!@1075807****147549'`. ## Current Behavior. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you exper",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1398,Performance,Load,Loading,1398,"'489!@!@1075807****147549'`. ## Current Behavior. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you exper",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1444,Performance,Load,Loading,1444,"or. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The stri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1497,Performance,Load,Loading,1497,"wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1845,Performance,Load,Loading,1845,"re](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1868,Performance,Load,Loading,1868,"re](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1914,Performance,Load,Loading,1914,"ession/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/320:1967,Performance,Load,Loading,1967,"ve. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version: ubuntu1~16.04.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320
https://github.com/soedinglab/MMseqs2/issues/323:136,Availability,fault,fault,136,"I tried to run `mmseqs easy-linclust` on the MERC dataset (from http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) but got a segmentation fault. ## Expected Behavior; Normal output of `mmseqs easy-linclust`. ## Current Behavior; Got `Segmentation fault` in the middle. ## Steps to Reproduce (for bugs). ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/MERC.fasta.gz; > mmseqs easy-linclust MERC.fasta.gz MERC /export/tmp/MERC -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G ; ```; ## MMseqs Output (for bugs); ```; Tmp /export/tmp/MERC folder does not exist or is not a directory.; createdb ../MERC.fasta.gz /export/tmp/MERC/4233864688410091672/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 ; Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:245,Availability,fault,fault,245,"I tried to run `mmseqs easy-linclust` on the MERC dataset (from http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) but got a segmentation fault. ## Expected Behavior; Normal output of `mmseqs easy-linclust`. ## Current Behavior; Got `Segmentation fault` in the middle. ## Steps to Reproduce (for bugs). ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/MERC.fasta.gz; > mmseqs easy-linclust MERC.fasta.gz MERC /export/tmp/MERC -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G ; ```; ## MMseqs Output (for bugs); ```; Tmp /export/tmp/MERC folder does not exist or is not a directory.; createdb ../MERC.fasta.gz /export/tmp/MERC/4233864688410091672/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 ; Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:1607,Availability,mask,mask,1607,".; createdb ../MERC.fasta.gz /export/tmp/MERC/4233864688410091672/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 ; Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:1616,Availability,mask,mask-lower-case,1616,".; createdb ../MERC.fasta.gz /export/tmp/MERC/4233864688410091672/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 ; Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:2122,Availability,mask,mask,2122,"tabase type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:2131,Availability,mask,mask-lower-case,2131,"tabase type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:5267,Availability,fault,fault,5267,"s; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input_step_redundancy -v 3 --subdb-mode 1 ; Time for merging to input_step_redundancy: 0h 0m 34s 71ms; Time for processing: 0h 1m 29s 221ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 -v 3 --subdb-mode 1 ; Time for merging to pref_filter1: 0h 0m 45s 806ms; Time for processing: 0h 1m 48s 52ms; filterdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 --filter-file /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy --threads 96 --compressed 0 -v 3 ; Filtering using file(s); [=================================================================] 245.75M 2m 9s 682ms; Time for merging to pref_filter2: 0h 2m 9s 511ms; Time for processing: 0h 6m 15s 7ms; Segmentation fault (core dumped); Error: Ungapped alignment step died; Error: Search died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `dc054792d1b1d091380638a712ee7566aba2bb38`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake 3.10.2**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version: **Ubuntu 18.04**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:5288,Availability,Error,Error,5288,"s; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input_step_redundancy -v 3 --subdb-mode 1 ; Time for merging to input_step_redundancy: 0h 0m 34s 71ms; Time for processing: 0h 1m 29s 221ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 -v 3 --subdb-mode 1 ; Time for merging to pref_filter1: 0h 0m 45s 806ms; Time for processing: 0h 1m 48s 52ms; filterdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 --filter-file /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy --threads 96 --compressed 0 -v 3 ; Filtering using file(s); [=================================================================] 245.75M 2m 9s 682ms; Time for merging to pref_filter2: 0h 2m 9s 511ms; Time for processing: 0h 6m 15s 7ms; Segmentation fault (core dumped); Error: Ungapped alignment step died; Error: Search died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `dc054792d1b1d091380638a712ee7566aba2bb38`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake 3.10.2**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version: **Ubuntu 18.04**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:5325,Availability,Error,Error,5325,"s; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input_step_redundancy -v 3 --subdb-mode 1 ; Time for merging to input_step_redundancy: 0h 0m 34s 71ms; Time for processing: 0h 1m 29s 221ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 -v 3 --subdb-mode 1 ; Time for merging to pref_filter1: 0h 0m 45s 806ms; Time for processing: 0h 1m 48s 52ms; filterdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 --filter-file /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy --threads 96 --compressed 0 -v 3 ; Filtering using file(s); [=================================================================] 245.75M 2m 9s 682ms; Time for merging to pref_filter2: 0h 2m 9s 511ms; Time for processing: 0h 6m 15s 7ms; Segmentation fault (core dumped); Error: Ungapped alignment step died; Error: Search died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `dc054792d1b1d091380638a712ee7566aba2bb38`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake 3.10.2**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version: **Ubuntu 18.04**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:2363,Energy Efficiency,Reduce,Reduced,2363,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:3083,Integrability,wrap,wrapped-scoring,3083,"aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:1736,Modifiability,extend,extendable,1736,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:2251,Modifiability,extend,extendable,2251,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:3243,Performance,load,load-mode,3243,"--ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:1681,Security,hash,hash-shift,1681,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/323:2196,Security,hash,hash-shift,2196,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323
https://github.com/soedinglab/MMseqs2/issues/324:1812,Availability,Mask,Mask,1812,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:1829,Availability,Mask,Mask,1829,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:3474,Availability,mask,mask,3474,"; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:3483,Availability,mask,mask-lower-case,3483,"; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:4000,Availability,mask,mask,4000,"p --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:4009,Availability,mask,mask-lower-case,4009,"p --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:4241,Energy Efficiency,Reduce,Reduced,4241,"74044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:1180,Integrability,wrap,wrapped,1180,"mation for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Crea",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:5389,Integrability,wrap,wrapped-scoring,5389,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:1926,Modifiability,extend,extendable,1926,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:3603,Modifiability,extend,extendable,3603,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:4129,Modifiability,extend,extendable,4129," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:5549,Performance,load,load-mode,5549,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:1879,Security,hash,hash,1879,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:3548,Security,hash,hash-shift,3548,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:4074,Security,hash,hash-shift,4074," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:615,Testability,test,test,615,"Summary: Running `easy-linclust` on [SRC](http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/324:794,Testability,test,test,794,"Summary: Running `easy-linclust` on [SRC](http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324
https://github.com/soedinglab/MMseqs2/issues/325:132,Availability,Error,Error,132,"## Expected Behavior; get standard annotation output --> works on some files and does not work on other files. ## Current Behavior; Error:; Input tmp/11852343083329585076/search_tmp/14954657116245379907/search/pref does not exist. ## Steps to Reproduce + MMseqs Output ; [code.txt](https://github.com/soedinglab/MMseqs2/files/4857796/code.txt). ## Context; mmseqs easy-search fastq files. ## Your Environment; MMseqs Version: 	11.e1a1c; conda install -c conda-forge -c bioconda mmseqs2; Ubuntu 20.04 LTS, 64-bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325
https://github.com/soedinglab/MMseqs2/issues/325:443,Deployability,install,install,443,"## Expected Behavior; get standard annotation output --> works on some files and does not work on other files. ## Current Behavior; Error:; Input tmp/11852343083329585076/search_tmp/14954657116245379907/search/pref does not exist. ## Steps to Reproduce + MMseqs Output ; [code.txt](https://github.com/soedinglab/MMseqs2/files/4857796/code.txt). ## Context; mmseqs easy-search fastq files. ## Your Environment; MMseqs Version: 	11.e1a1c; conda install -c conda-forge -c bioconda mmseqs2; Ubuntu 20.04 LTS, 64-bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325
https://github.com/soedinglab/MMseqs2/issues/328:1507,Availability,Mask,Mask,1507,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328
https://github.com/soedinglab/MMseqs2/issues/328:1524,Availability,Mask,Mask,1524,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328
https://github.com/soedinglab/MMseqs2/issues/328:877,Integrability,wrap,wrapped,877,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328
https://github.com/soedinglab/MMseqs2/issues/328:1650,Modifiability,extend,extendable,1650,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328
https://github.com/soedinglab/MMseqs2/issues/328:1574,Security,hash,hash,1574,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328
https://github.com/soedinglab/MMseqs2/pull/329:335,Availability,error,error,335,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329
https://github.com/soedinglab/MMseqs2/pull/329:393,Availability,Error,Error,393,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329
https://github.com/soedinglab/MMseqs2/pull/329:423,Availability,Error,Error,423,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329
https://github.com/soedinglab/MMseqs2/pull/329:262,Deployability,install,install,262,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329
https://github.com/soedinglab/MMseqs2/pull/329:43,Integrability,message,message,43,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329
https://github.com/soedinglab/MMseqs2/issues/331:908,Availability,down,down,908,"I have a huge dataset I want to cluster and I want to use distributed-memory MPI mode of MMseqs2. I have compiled and successfully run the MPI version of MMseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specificat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331
https://github.com/soedinglab/MMseqs2/issues/331:1160,Deployability,pipeline,pipeline,1160,"Mseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331
https://github.com/soedinglab/MMseqs2/issues/331:1055,Energy Efficiency,efficient,efficient,1055,"e dataset I want to cluster and I want to use distributed-memory MPI mode of MMseqs2. I have compiled and successfully run the MPI version of MMseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (espec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331
https://github.com/soedinglab/MMseqs2/issues/331:1230,Testability,log,logically,1230,". ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating system and version:; Lightweight linux kernel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331
https://github.com/soedinglab/MMseqs2/issues/332:260,Availability,error,error,260,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/332:15,Deployability,install,installed,15,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/332:70,Deployability,install,installed,70,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/332:364,Deployability,update,updated,364,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/332:382,Deployability,install,installation,382,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/332:188,Performance,perform,perform,188,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332
https://github.com/soedinglab/MMseqs2/issues/333:82,Availability,error,error,82,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:2807,Availability,Error,Error,2807,"=] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 80 --compressed 0 -v 3. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq_h!; Error: extract target orfs step died; Error: Search died; ```. ## Steps to Reproduce (for bugs). The ""old"" sequence database was created with `mmseqs createdb`. The ""new"" sequence databases contains the old and new sequences, and was also created by `mmseqs createdb`. The ""old"" clusters were generated via `mmseqs linclust`. . I'm using `xmmseqs clusterupdate --min-seq-id 0.9 -c 0.8` for updating the cluster db. . ## Your Environment. My os: Ubuntu 18.04.4. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:2845,Availability,Error,Error,2845,"=] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 80 --compressed 0 -v 3. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq_h!; Error: extract target orfs step died; Error: Search died; ```. ## Steps to Reproduce (for bugs). The ""old"" sequence database was created with `mmseqs createdb`. The ""new"" sequence databases contains the old and new sequences, and was also created by `mmseqs createdb`. The ""old"" clusters were generated via `mmseqs linclust`. . I'm using `xmmseqs clusterupdate --min-seq-id 0.9 -c 0.8` for updating the cluster db. . ## Your Environment. My os: Ubuntu 18.04.4. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:686,Deployability,Update,Update,686,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:5565,Deployability,pipeline,pipeline,5565,"0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0_1 conda-forge; pip 20.1.1 py_1 conda-forge; prodigal 2.6.3 h516909a_2 bioconda; python 3.8.4 cpython_h425cb1d_0 conda-forge; python_abi 3.8 1_cp38 conda-forge; readline 8.0 he28a2e2_2 conda-forge; seqkit 0.13.2 0 bioconda; setuptools 49.2.0 py38h32f6830_0 conda-forge; sqlite 3.32.3 hcee41ef_1 conda-forge; tk 8.6.10 hed695b0_0 conda-forge; vsearch 2.15.0 h2d02072_0 bioconda; wget 1.20.1 h22169c7_0 conda-forge; wheel 0.34.2 py_1 conda-forge; xz 5.2.5 h516909a_1 conda-forge; zlib 1.2.11 h516909a_1006 conda-forge; ```. ## Notes. I had previously copies (hopefully) all relevant ""old"" gene database files from one directly to another. Maybe I missed an associated file, which is causing the issue. ; A major hassle of using mmseqs is all of the associated files (eg., `.dbtype`, `.index`, `.lookup`, etc). These are not discussed in the documentation and just assumed to be present with the ""main"" files. This is especially a big hassle when using snakemake, nextflow, drake, or other pipeline software.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:3437,Security,certificate,certificates,3437,"47483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 80 --compressed 0 -v 3. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq_h!; Error: extract target orfs step died; Error: Search died; ```. ## Steps to Reproduce (for bugs). The ""old"" sequence database was created with `mmseqs createdb`. The ""new"" sequence databases contains the old and new sequences, and was also created by `mmseqs createdb`. The ""old"" clusters were generated via `mmseqs linclust`. . I'm using `xmmseqs clusterupdate --min-seq-id 0.9 -c 0.8` for updating the cluster db. . ## Your Environment. My os: Ubuntu 18.04.4. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:146,Testability,test,tests,146,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:1545,Testability,test,tests,1545,316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frame,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/333:1625,Testability,test,tests,1625,316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frame,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333
https://github.com/soedinglab/MMseqs2/issues/334:123,Availability,error,error,123,"## Expected Behavior. I'm trying to concatenate 2 mmseqs sequence databases together via `mmseqs concatdbs`, but I get the error:. ```; maxSetId in db1.lookup is 1 and in db1.source is 2; ```. ## Context. I created both sequence databases via `mmseqs createdb`. None of the sequences overlap between the 2 databases. Note that for DB1, I did copy (all/most) of the associated files from one location to another; maybe I didn't copy them all over, but how would I know??). . Running `mmseqs concatdbs` on the `*_h` files for these databases works without an issue. I just get the problem when trying to run `mmseqs concatdbs` on the main database files. . ## Your Environment. OS: Ubuntu 18.04. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334
https://github.com/soedinglab/MMseqs2/issues/334:860,Security,certificate,certificates,860,"## Expected Behavior. I'm trying to concatenate 2 mmseqs sequence databases together via `mmseqs concatdbs`, but I get the error:. ```; maxSetId in db1.lookup is 1 and in db1.source is 2; ```. ## Context. I created both sequence databases via `mmseqs createdb`. None of the sequences overlap between the 2 databases. Note that for DB1, I did copy (all/most) of the associated files from one location to another; maybe I didn't copy them all over, but how would I know??). . Running `mmseqs concatdbs` on the `*_h` files for these databases works without an issue. I just get the problem when trying to run `mmseqs concatdbs` on the main database files. . ## Your Environment. OS: Ubuntu 18.04. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334
https://github.com/soedinglab/MMseqs2/issues/335:686,Availability,error,error,686,"## Expected Behavior; I'm running this command `result2msa` to generate an MSA from the out files of an mmseqs search command. The full commandline is:; `mmseqs result2msa /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/in.mmdb /Volumes/DataDisk/databases/Pfam-A /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_search /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_msa `. ## Current Behavior; At this point, mmseqs fails to produce a complete out.mm_msa database. ; You'll see some msa db files generated in my attached zip, but it appears that the database is incomplete.; I believe that creation of the database `out.mm_msa` terminates prematurely because of the error in the below. ; netsurfp2 cannot read the database when it attempts to generate an hmm profile. You will observe in the MMseqs output that the forward/backward smith-waterman score is differing. ## Steps to Reproduce (for bugs); I am including a zip file of all that is required to reproduce the problem, with the exception of the target database Pfam-A. ## MMseqs Output (for bugs). MMseqs Version: 	11-e1a1c; Start computing multiple sequence alignments.; Query database size: 50000 type: Aminoacid; Target database size: 17772 type: Profile; Score of forward/backward SW differ. This should not happen. ] 1.01% 504 eta 0s . ## Context; The issue does not happen for alignments fewer than 10 sequences. This sequence database is about 175,000.; A logfile which is belongs to netsurfp2 is included in the zip file. It provides context around the prior commands executed. . ## Your Environment; MMseqs was compiled with homebrew using cmake version 3.15.3; Operating System: OSX; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/335
https://github.com/soedinglab/MMseqs2/issues/335:1441,Testability,log,logfile,1441," `mmseqs result2msa /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/in.mmdb /Volumes/DataDisk/databases/Pfam-A /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_search /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_msa `. ## Current Behavior; At this point, mmseqs fails to produce a complete out.mm_msa database. ; You'll see some msa db files generated in my attached zip, but it appears that the database is incomplete.; I believe that creation of the database `out.mm_msa` terminates prematurely because of the error in the below. ; netsurfp2 cannot read the database when it attempts to generate an hmm profile. You will observe in the MMseqs output that the forward/backward smith-waterman score is differing. ## Steps to Reproduce (for bugs); I am including a zip file of all that is required to reproduce the problem, with the exception of the target database Pfam-A. ## MMseqs Output (for bugs). MMseqs Version: 	11-e1a1c; Start computing multiple sequence alignments.; Query database size: 50000 type: Aminoacid; Target database size: 17772 type: Profile; Score of forward/backward SW differ. This should not happen. ] 1.01% 504 eta 0s . ## Context; The issue does not happen for alignments fewer than 10 sequences. This sequence database is about 175,000.; A logfile which is belongs to netsurfp2 is included in the zip file. It provides context around the prior commands executed. . ## Your Environment; MMseqs was compiled with homebrew using cmake version 3.15.3; Operating System: OSX; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; [issue.zip](https://github.com/soedinglab/MMseqs2/files/4970047/issue.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/335
https://github.com/soedinglab/MMseqs2/issues/336:296,Availability,down,downstream,296,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336
https://github.com/soedinglab/MMseqs2/issues/336:551,Availability,error,error,551,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336
https://github.com/soedinglab/MMseqs2/issues/336:1060,Testability,log,logging,1060,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336
https://github.com/soedinglab/MMseqs2/issues/336:705,Usability,clear,clear,705,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336
https://github.com/soedinglab/MMseqs2/issues/337:244,Availability,down,downstream,244,"## Expected Behavior. `mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident` writes out table of `mmseq search` hits in blast M8 format, but `pident` seems to be written as a fraction instead of a percent. This affects downstream processing of the table, especially when trying to conduct the same processing to this table and one generated by blast or diamond (`pident` is then written as a percent). . ## Steps to Reproduce (for bugs). ```; mmseqs search; mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident; ```. ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; biolib 0.1.6 py_0 bioconda; boost-cpp 1.70.0 h7b93d67_3 conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py37hc8dfbb8_0 conda-forge; comparem 0.1.1 py_0 bioconda; curl 7.69.1 h33f0ec9_0 conda-forge; cycler 0.10.0 py_2 conda-forge; diamond 0.9.36 h56fc30b_0 bioconda; fqtools 2.0 hc0aa232_5 bioconda; freetype 2.10.2 he06d7ca_0 conda-forge; future 0.18.2 py37hc8dfbb8_1 conda-forge; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; hhsuite 3.2.0 py37pl526h3340039_1 bioconda; htslib 1.9 h4da6232_3 bioconda; icu 67.1 he1b5a44_0 conda-forge; kiwisolver 1.2.0 py37h99015e2_0 conda-forge; krb5 1.17.1 h2fd8d38_0 conda-forge; ld_impl_linux-64 2.34 h53a641e_5 conda-forge; libblas 3.8.0 14_openblas conda-forge; libcblas 3.8.0 14_openblas conda-forge; libcurl 7.69.1 hf7181ac_0 conda-forge; libdeflate 1.6 h516909a_0 conda-forge; libedit 3.1.20191231 h46ee950_0 conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 14_openblas conda-forge; libopenblas 0.3.7 h5ec1e0e_6 conda-forge; libpng 1.6.37 hed695b0_1 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/337
https://github.com/soedinglab/MMseqs2/issues/337:827,Security,certificate,certificates,827,"## Expected Behavior. `mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident` writes out table of `mmseq search` hits in blast M8 format, but `pident` seems to be written as a fraction instead of a percent. This affects downstream processing of the table, especially when trying to conduct the same processing to this table and one generated by blast or diamond (`pident` is then written as a percent). . ## Steps to Reproduce (for bugs). ```; mmseqs search; mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident; ```. ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; biolib 0.1.6 py_0 bioconda; boost-cpp 1.70.0 h7b93d67_3 conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py37hc8dfbb8_0 conda-forge; comparem 0.1.1 py_0 bioconda; curl 7.69.1 h33f0ec9_0 conda-forge; cycler 0.10.0 py_2 conda-forge; diamond 0.9.36 h56fc30b_0 bioconda; fqtools 2.0 hc0aa232_5 bioconda; freetype 2.10.2 he06d7ca_0 conda-forge; future 0.18.2 py37hc8dfbb8_1 conda-forge; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; hhsuite 3.2.0 py37pl526h3340039_1 bioconda; htslib 1.9 h4da6232_3 bioconda; icu 67.1 he1b5a44_0 conda-forge; kiwisolver 1.2.0 py37h99015e2_0 conda-forge; krb5 1.17.1 h2fd8d38_0 conda-forge; ld_impl_linux-64 2.34 h53a641e_5 conda-forge; libblas 3.8.0 14_openblas conda-forge; libcblas 3.8.0 14_openblas conda-forge; libcurl 7.69.1 hf7181ac_0 conda-forge; libdeflate 1.6 h516909a_0 conda-forge; libedit 3.1.20191231 h46ee950_0 conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 14_openblas conda-forge; libopenblas 0.3.7 h5ec1e0e_6 conda-forge; libpng 1.6.37 hed695b0_1 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/337
https://github.com/soedinglab/MMseqs2/issues/338:583,Availability,error,error,583,"## Expected Behavior. According to the mmseqs docs:. >The --split-memory-limit parameter can give MMseqs2 an upper limit of system RAM to use for the large prefiltering data structures. MMseqs2 will still use some additional memory for its database structures etc. In total, --split-memory-limit will be about 80% of the total memory required. Order of magnitude suffices can be passed to --split-memory-limit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/338:1317,Availability,Error,Error,1317,"total memory required. Order of magnitude suffices can be passed to --split-memory-limit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/338:1472,Availability,error,error,1472,"imit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/338:1663,Availability,error,error,1663,"max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_2 conda-forge; libstdcxx-ng 9.2.0 hdf63c6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/338:1343,Energy Efficiency,reduce,reduce,1343,"imit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/338:1975,Security,certificate,certificates,1975,"_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_2 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338
https://github.com/soedinglab/MMseqs2/issues/339:6693,Availability,mask,mask,6693,"12s 709ms; splitsequence tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:6702,Availability,mask,mask-lower-case,6702,"12s 709ms; splitsequence tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:7171,Availability,Mask,Masked,7171,"67723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:12161,Deployability,release,release,12161,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:6926,Energy Efficiency,consumption,consumption,6926," 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overf",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:8622,Integrability,wrap,wrapped-scoring,8622,"935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:8917,Modifiability,extend,extend,8917,"s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:11443,Modifiability,extend,extend,11443,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:6791,Performance,load,load-mode,6791,"12s 709ms; splitsequence tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:8853,Performance,load,load-mode,8853,"lculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/1116772",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:10355,Performance,load,load-mode,10355,============================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; offsetalignment tmp/2226585588535541735/query tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/target tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/339:11471,Performance,load,load-mode,11471,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339
https://github.com/soedinglab/MMseqs2/issues/340:48,Availability,error,error,48,"In script ""Create a seqTaxDB for SILVA"" we have error in SILVA database name:. From the docs:; `wget ftp://ftp.arb-silva.de/current/Exports/SILVA_*_SSURef_Nr99_tax_silva_full_align_trunc.fasta.gz`. The right one is:; `wget ftp://ftp.arb-silva.de/current/Exports/SILVA_*_SSURef_NR99_tax_silva_full_align_trunc.fasta.gz`. Link to check: ftp://ftp.arb-silva.de/current/Exports/. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340
https://github.com/soedinglab/MMseqs2/issues/341:28,Performance,perform,perform,28,"Hi there! I'm attempting to perform a homology search for a single gene (a bacterial protein) across all sequenced bacterial genomes to estimate the % of species that carry the gene. Is there a way to partition a wider database (like Uniprot) so that my search only covers bacterial genomes? If not, could I request an additional database that covers all sequenced bacterial genomes (like UniprotKB Bacteria or EnsemblBacteria)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341
https://github.com/soedinglab/MMseqs2/issues/344:151,Availability,error,error,151,"## Expected Behavior. `mmseqs databases eggNOG /mmseqs/eggnog tmp --threads 16` should prepare the eggNOG database. ## Current Behavior. The following error is produced:. ```; databases eggNOG /mmseqs/eggnog tmp --threads 16. MMseqs Version: 	11.e1a1c; Threads 	16. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6440 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; tar2db tmp/4327021748121712355/bacteria tmp/4327021748121712355/archea tmp/4327021748121712355/eukaryota tmp/4327021748121712355/viruses tmp/4327021748121712355/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --compressed 0 -v 3. Cannot open file tmp/4327021748121712355/bacteria; Error: msa2profile died; ```. mmseqs installed via Conda. All other databases can be prepared as expected, just not eggNOG.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344
https://github.com/soedinglab/MMseqs2/issues/344:1204,Availability,Error,Error,1204,"## Expected Behavior. `mmseqs databases eggNOG /mmseqs/eggnog tmp --threads 16` should prepare the eggNOG database. ## Current Behavior. The following error is produced:. ```; databases eggNOG /mmseqs/eggnog tmp --threads 16. MMseqs Version: 	11.e1a1c; Threads 	16. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6440 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; tar2db tmp/4327021748121712355/bacteria tmp/4327021748121712355/archea tmp/4327021748121712355/eukaryota tmp/4327021748121712355/viruses tmp/4327021748121712355/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --compressed 0 -v 3. Cannot open file tmp/4327021748121712355/bacteria; Error: msa2profile died; ```. mmseqs installed via Conda. All other databases can be prepared as expected, just not eggNOG.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344
https://github.com/soedinglab/MMseqs2/issues/344:1241,Deployability,install,installed,1241,"## Expected Behavior. `mmseqs databases eggNOG /mmseqs/eggnog tmp --threads 16` should prepare the eggNOG database. ## Current Behavior. The following error is produced:. ```; databases eggNOG /mmseqs/eggnog tmp --threads 16. MMseqs Version: 	11.e1a1c; Threads 	16. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6440 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; tar2db tmp/4327021748121712355/bacteria tmp/4327021748121712355/archea tmp/4327021748121712355/eukaryota tmp/4327021748121712355/viruses tmp/4327021748121712355/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --compressed 0 -v 3. Cannot open file tmp/4327021748121712355/bacteria; Error: msa2profile died; ```. mmseqs installed via Conda. All other databases can be prepared as expected, just not eggNOG.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344
https://github.com/soedinglab/MMseqs2/issues/345:131,Testability,log,logo,131,Sorry for spamming the community with a non-issue. I just wanted to acknowledge how wonderful the mascot of MMseqs is. **Beautiful logo!**,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/345
https://github.com/soedinglab/MMseqs2/issues/346:120,Availability,down,download,120,"Hi, I run into a little problem. I want to create taxonomy database with only specific proteins. I do the following:; - download part of Swissprot database with target proteins (COI) in fasta format; - try to create database by mmseqs2; `docker run --rm -v ""$(pwd):/app"" soedinglab/mmseqs2 mmseqs createdb app/mmseqs_databases/swissprot-part.fasta app/mmseqs_databases/swissprot-part.fasta.DB`. and next:; `docker run --rm -v ""$(pwd):/app"" soedinglab/mmseqs2 mmseqs createtaxdb app/mmseqs_databases/swissprot-part.fasta.DB app/tmp`. This process consumes a lot of time and memory and never succeed. Maybe there is a faster and easier way to do this?; I'll be much appreciate for any help!. mmseqs2 image version - 11",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346
https://github.com/soedinglab/MMseqs2/issues/347:762,Availability,error,error,762,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:1387,Availability,error,error,1387,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:1706,Availability,Error,Error,1706,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:1850,Availability,Error,Error,1850,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:1921,Availability,Error,Error,1921,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:21,Deployability,install,install,21,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:37,Deployability,release,release,37,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/347:199,Deployability,release,release,199,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347
https://github.com/soedinglab/MMseqs2/issues/348:564,Deployability,update,update,564,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:789,Deployability,update,update,789,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:580,Performance,perform,perform,580,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:1308,Safety,safe,safely,1308,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:250,Testability,log,log,250,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:319,Testability,log,log,319,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/348:404,Testability,log,log,404,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348
https://github.com/soedinglab/MMseqs2/issues/349:373,Availability,error,error,373,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:394,Availability,down,download,394,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:1440,Availability,avail,available,1440,"iosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:1949,Availability,down,downloaded,1949," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:2243,Deployability,RELEASE,RELEASE,2243," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:2297,Deployability,install,install,2297," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:778,Performance,perform,perform,778,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:772,Testability,log,log,772,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:913,Testability,log,log,913,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:1132,Testability,log,log,1132,"er of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubunt",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:1426,Testability,log,log,1426,"iosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/349:2411,Testability,test,tested,2411," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349
https://github.com/soedinglab/MMseqs2/issues/350:576,Availability,down,down,576,"## Expected Behavior; When performing iterative (profile) search, it would be important to have have a uniform, ""globally valid"" bit score or E-value allowing accurate significance-ranking of all identified targets for a given query. ## Current Behavior; There seems to be separate results ""blocks"" in the output corresponding to targets identified in separate iterations. In each block, hits are properly sorted according to their significance. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:972,Availability,down,download,972,"## Expected Behavior; When performing iterative (profile) search, it would be important to have have a uniform, ""globally valid"" bit score or E-value allowing accurate significance-ranking of all identified targets for a given query. ## Current Behavior; There seems to be separate results ""blocks"" in the output corresponding to targets identified in separate iterations. In each block, hits are properly sorted according to their significance. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:2156,Availability,avail,available,2156,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:3710,Availability,down,downloaded,3710,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:3998,Deployability,RELEASE,RELEASE,3998,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:4052,Deployability,install,install,4052,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:27,Performance,perform,performing,27,"## Expected Behavior; When performing iterative (profile) search, it would be important to have have a uniform, ""globally valid"" bit score or E-value allowing accurate significance-ranking of all identified targets for a given query. ## Current Behavior; There seems to be separate results ""blocks"" in the output corresponding to targets identified in separate iterations. In each block, hits are properly sorted according to their significance. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:1447,Performance,perform,perform,1447,"-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:2216,Performance,perform,perform,2216,"/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:1441,Testability,log,log,1441,"e. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-define",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:1622,Testability,log,log,1622," Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:1809,Testability,log,log,1809,". ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:2146,Testability,log,log,2146,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/350:4166,Testability,test,tested,4166,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350
https://github.com/soedinglab/MMseqs2/issues/352:56,Availability,down,download,56,"## Expected Behavior; Hey! I've been trying to manually download and link the taxonomy files from NCBI to the NR database that I have downloaded. ## Current Behavior; I cannot compile the taxonomy of the NR db - the documentation shows how to for NT so I tried to convert that example code to something suitable for NR (nt replaced with nr and .fna replaced with .faa); - see MMseqs Output (for bugs) attached file for errors . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy. ```; `; blastdbcmd -db nr -entry all > nr.faa`; First error occurs here. ```; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.faa.taxidmapping. mmseqs createdb nr.faa nr.faaDB. ```; Second error occurs here - I was then going to continue with: . `mmseqs createtaxdb nr.faaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.faa.taxidmap`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqstaxonomyerror22092020.txt](https://github.com/soedinglab/MMseqs2/files/5259261/mmseqstaxonomyerror22092020.txt). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Ran in a conda environment on mmseqs version 2.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352
https://github.com/soedinglab/MMseqs2/issues/352:134,Availability,down,downloaded,134,"## Expected Behavior; Hey! I've been trying to manually download and link the taxonomy files from NCBI to the NR database that I have downloaded. ## Current Behavior; I cannot compile the taxonomy of the NR db - the documentation shows how to for NT so I tried to convert that example code to something suitable for NR (nt replaced with nr and .fna replaced with .faa); - see MMseqs Output (for bugs) attached file for errors . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy. ```; `; blastdbcmd -db nr -entry all > nr.faa`; First error occurs here. ```; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.faa.taxidmapping. mmseqs createdb nr.faa nr.faaDB. ```; Second error occurs here - I was then going to continue with: . `mmseqs createtaxdb nr.faaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.faa.taxidmap`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqstaxonomyerror22092020.txt](https://github.com/soedinglab/MMseqs2/files/5259261/mmseqstaxonomyerror22092020.txt). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Ran in a conda environment on mmseqs version 2.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352
https://github.com/soedinglab/MMseqs2/issues/352:419,Availability,error,errors,419,"## Expected Behavior; Hey! I've been trying to manually download and link the taxonomy files from NCBI to the NR database that I have downloaded. ## Current Behavior; I cannot compile the taxonomy of the NR db - the documentation shows how to for NT so I tried to convert that example code to something suitable for NR (nt replaced with nr and .fna replaced with .faa); - see MMseqs Output (for bugs) attached file for errors . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy. ```; `; blastdbcmd -db nr -entry all > nr.faa`; First error occurs here. ```; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.faa.taxidmapping. mmseqs createdb nr.faa nr.faaDB. ```; Second error occurs here - I was then going to continue with: . `mmseqs createtaxdb nr.faaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.faa.taxidmap`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqstaxonomyerror22092020.txt](https://github.com/soedinglab/MMseqs2/files/5259261/mmseqstaxonomyerror22092020.txt). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Ran in a conda environment on mmseqs version 2.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352
https://github.com/soedinglab/MMseqs2/issues/352:733,Availability,error,error,733,"## Expected Behavior; Hey! I've been trying to manually download and link the taxonomy files from NCBI to the NR database that I have downloaded. ## Current Behavior; I cannot compile the taxonomy of the NR db - the documentation shows how to for NT so I tried to convert that example code to something suitable for NR (nt replaced with nr and .fna replaced with .faa); - see MMseqs Output (for bugs) attached file for errors . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy. ```; `; blastdbcmd -db nr -entry all > nr.faa`; First error occurs here. ```; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.faa.taxidmapping. mmseqs createdb nr.faa nr.faaDB. ```; Second error occurs here - I was then going to continue with: . `mmseqs createtaxdb nr.faaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.faa.taxidmap`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqstaxonomyerror22092020.txt](https://github.com/soedinglab/MMseqs2/files/5259261/mmseqstaxonomyerror22092020.txt). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Ran in a conda environment on mmseqs version 2.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352
https://github.com/soedinglab/MMseqs2/issues/352:870,Availability,error,error,870,"## Expected Behavior; Hey! I've been trying to manually download and link the taxonomy files from NCBI to the NR database that I have downloaded. ## Current Behavior; I cannot compile the taxonomy of the NR db - the documentation shows how to for NT so I tried to convert that example code to something suitable for NR (nt replaced with nr and .fna replaced with .faa); - see MMseqs Output (for bugs) attached file for errors . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy. ```; `; blastdbcmd -db nr -entry all > nr.faa`; First error occurs here. ```; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.faa.taxidmapping. mmseqs createdb nr.faa nr.faaDB. ```; Second error occurs here - I was then going to continue with: . `mmseqs createtaxdb nr.faaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.faa.taxidmap`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqstaxonomyerror22092020.txt](https://github.com/soedinglab/MMseqs2/files/5259261/mmseqstaxonomyerror22092020.txt). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Ran in a conda environment on mmseqs version 2.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352
https://github.com/soedinglab/MMseqs2/issues/353:457,Deployability,release,release,457,"## Expected Behavior; tmp folder creation should work just as for other commands. ## Current Behavior; `mmseqs enrich profileDB UniRef50DB profileEnrichedDB /tmp` fails with ; ""Path does not exist or is not a directory. Cannot create temporary folder .""; It's the same for any tmp location, and it only affects `enrich`. Specifying /tmp with other mmseqs commands works. ## Your Environment; MMseqs Version: 113e3212c137d026e297c7540e1fcd039f6812b1 (latest release); static (MMseqs2-Linux-SSE4_1.tar.gz),; no AVX2, CentOS Linux 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/353
https://github.com/soedinglab/MMseqs2/issues/354:957,Availability,mask,mask,957,"## Expected Behavior; I am trying to partition 25000 sequences by homology so identical sequences (for instance >30%ID and >70%coverage - ideally even lower coverage if possible) are grouped into the same partition. Hence, I expect easy-cluster to group sequences that share this much similarity in same cluster. ## Current Behavior; After clustering I try to partition (by putting all sequences assigned to the same cluster in the same partition), but when I blast two partitions against each other I see that there are quite a lot of sequences assigned to different clusters that share more similarity than the criteria. ## Steps to Reproduce (for bugs); Currently I run the following (I've played around with many different settings and this seems to give the best clustering - but still far from optimal); mmseqs easy-cluster sequences.faa test.mm tmp -s 7.5 --threads 12 -c 0.7 --cov-mode 1 --alignment-mode 3 --max-seqs 25000 --min-ungapped-score 0 --mask 0 --add-self-matches -e 20000 --cluster-mode 1 --max-iterations 10000 --cluster-steps 7 . Am I missing some crucial setting? Any input is greatly appreciated - Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/354
https://github.com/soedinglab/MMseqs2/issues/354:844,Testability,test,test,844,"## Expected Behavior; I am trying to partition 25000 sequences by homology so identical sequences (for instance >30%ID and >70%coverage - ideally even lower coverage if possible) are grouped into the same partition. Hence, I expect easy-cluster to group sequences that share this much similarity in same cluster. ## Current Behavior; After clustering I try to partition (by putting all sequences assigned to the same cluster in the same partition), but when I blast two partitions against each other I see that there are quite a lot of sequences assigned to different clusters that share more similarity than the criteria. ## Steps to Reproduce (for bugs); Currently I run the following (I've played around with many different settings and this seems to give the best clustering - but still far from optimal); mmseqs easy-cluster sequences.faa test.mm tmp -s 7.5 --threads 12 -c 0.7 --cov-mode 1 --alignment-mode 3 --max-seqs 25000 --min-ungapped-score 0 --mask 0 --add-self-matches -e 20000 --cluster-mode 1 --max-iterations 10000 --cluster-steps 7 . Am I missing some crucial setting? Any input is greatly appreciated - Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/354
https://github.com/soedinglab/MMseqs2/issues/355:615,Availability,fault,fault,615,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355
https://github.com/soedinglab/MMseqs2/issues/355:403,Performance,Load,Loading,403,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355
https://github.com/soedinglab/MMseqs2/issues/355:426,Performance,Load,Loading,426,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355
https://github.com/soedinglab/MMseqs2/issues/355:474,Performance,Load,Loading,474,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355
https://github.com/soedinglab/MMseqs2/issues/355:531,Performance,Load,Loading,531,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355
https://github.com/soedinglab/MMseqs2/issues/356:78,Performance,perform,perform,78,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356
https://github.com/soedinglab/MMseqs2/issues/356:137,Performance,perform,perform,137,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356
https://github.com/soedinglab/MMseqs2/issues/356:197,Usability,simpl,simple,197,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356
https://github.com/soedinglab/MMseqs2/issues/357:394,Availability,mask,mask,394,"I am comparing the results of mmseqs to blastp with 2 libraries of olfactory receptors. For most comparisons- the result of mmseqs is like blastp. However- for some cases mmseqs omits some hits, for which blast reports more than 90% similarity over the majority of the protein with a very significant Evalue.; I tried to changed the parameters, and run mmseqs search with: --alignment-mode 3 --mask 0 --comp-bias-corr 0 --search-type 2 -s 7; But it didn't help. mmseqs didn't find the alignments that were reported by blastp.; I am using version 12-113e3. Can you please advise?. Thanks; Tsviya",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357
https://github.com/soedinglab/MMseqs2/issues/361:52,Usability,simpl,simple,52,"This is a feature request: I've found myself making simple databases outside of the mmseqs database formats (eg., gene & cluster databases) in order to keep track of metadata associated with each gene/cluster (e.g., the origin of the gene, the taxonomy of the genome possessing the gene, etc). It would be great if one could include metadata directly in an mmseqs genes/cluster database instead of having to maintain that info in separate files. One could then use that gene/cluster metadata to filter out genes/clusters (eg., selecting just genes/clusters originating from X & Y genomes or originating from metagenomes from biome Z).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/361
https://github.com/soedinglab/MMseqs2/issues/362:318,Availability,down,downstream,318,"`clusterupdate` only generates one main database file output (eg., `clusters_db`), regardless of `--threads`, while `cluster` and `linclust` generate one file per thread (eg., `--threads=4` generates `clusters_db.0`, `clusters_db.1`, `clusters_db.2`, `clusters_db.3`). This leads to pipeline complications, given that downstream processing of the `clusters_db` may require multiple inputs (`clusters_db.*`) or just one input (`cluster_db`). It would help if clusterupdate and cluster/linclust were consistent. It would be best if cluster/linclust just produced one database file per thread. I'm running `mmseqs2 11.e1a1c`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362
https://github.com/soedinglab/MMseqs2/issues/362:283,Deployability,pipeline,pipeline,283,"`clusterupdate` only generates one main database file output (eg., `clusters_db`), regardless of `--threads`, while `cluster` and `linclust` generate one file per thread (eg., `--threads=4` generates `clusters_db.0`, `clusters_db.1`, `clusters_db.2`, `clusters_db.3`). This leads to pipeline complications, given that downstream processing of the `clusters_db` may require multiple inputs (`clusters_db.*`) or just one input (`cluster_db`). It would help if clusterupdate and cluster/linclust were consistent. It would be best if cluster/linclust just produced one database file per thread. I'm running `mmseqs2 11.e1a1c`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362
https://github.com/soedinglab/MMseqs2/issues/363:283,Availability,error,error,283,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:321,Availability,Error,Error,321,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:345,Availability,error,error,345,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:450,Availability,error,error,450,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:289,Integrability,message,messages,289,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:456,Integrability,message,messages,456,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:33,Performance,perform,perform,33,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:678,Testability,log,log,678,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:691,Testability,log,log,691,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/363:753,Testability,log,log,753,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363
https://github.com/soedinglab/MMseqs2/issues/364:68,Availability,Error,Error,68,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364
https://github.com/soedinglab/MMseqs2/issues/364:628,Availability,recover,recover,628,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364
https://github.com/soedinglab/MMseqs2/issues/364:684,Availability,error,error,684,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364
https://github.com/soedinglab/MMseqs2/issues/364:628,Safety,recover,recover,628,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364
https://github.com/soedinglab/MMseqs2/issues/365:365,Energy Efficiency,reduce,reduced,365,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365
https://github.com/soedinglab/MMseqs2/issues/365:445,Energy Efficiency,reduce,reduced,445,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365
https://github.com/soedinglab/MMseqs2/issues/365:592,Energy Efficiency,reduce,reduced,592,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365
https://github.com/soedinglab/MMseqs2/issues/365:733,Testability,test,tested,733,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365
https://github.com/soedinglab/MMseqs2/issues/366:277,Availability,error,error,277,"## Expected Behavior; Search the homologs of my query. ## Current Behavior; I use easy-search mode to search for homologs using a fasta file with multiple amino acid sequences as the query. The target file is a compressed folder that contains some independent genome files. An error appeared when translated_search.sh was running and the job was killed. ## Steps to Reproduce (for bugs); `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001`. ## MMseqs Output (for bugs); `/scratch/yw/tmp/16423424779017399508/search_tmp/8870872946056358031/translated_search.sh: line 45: 982 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. ## Context. ## Your Environment; MMseqs2 Version: 12.113e3 (conda); Operating system: Red Hat Enterprise Linux Server release 6.10 (Santiago)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366
https://github.com/soedinglab/MMseqs2/issues/366:811,Deployability,release,release,811,"## Expected Behavior; Search the homologs of my query. ## Current Behavior; I use easy-search mode to search for homologs using a fasta file with multiple amino acid sequences as the query. The target file is a compressed folder that contains some independent genome files. An error appeared when translated_search.sh was running and the job was killed. ## Steps to Reproduce (for bugs); `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001`. ## MMseqs Output (for bugs); `/scratch/yw/tmp/16423424779017399508/search_tmp/8870872946056358031/translated_search.sh: line 45: 982 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. ## Context. ## Your Environment; MMseqs2 Version: 12.113e3 (conda); Operating system: Red Hat Enterprise Linux Server release 6.10 (Santiago)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366
https://github.com/soedinglab/MMseqs2/issues/368:149,Availability,fault,fault,149,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:164,Availability,error,error,164,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:253,Testability,test,test,253,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:273,Testability,test,test,273,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:361,Testability,test,test,361,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:370,Testability,test,test,370,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:434,Testability,test,test,434,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:454,Testability,test,test,454,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:469,Testability,test,test,469,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:536,Testability,test,test,536,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:545,Testability,test,test,545,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:1213,Testability,test,test,1213,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:1233,Testability,test,test,1233,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:1248,Testability,test,test,1248,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/368:1390,Testability,test,test,1390,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368
https://github.com/soedinglab/MMseqs2/issues/369:444,Energy Efficiency,efficient,efficient,444,"Hello; I have many (~200 million) multiple sequence alignments in the form of FASTA files that I would like to use as queries against a target dataset of about 6 billion protein sequences in a PSI-BLAST fashion. It is my understanding that I can convert the FASTA file into Stockholm format and then create a profileDB and use the profileDB to search the dataset (after it has been converted with `mmseqs createdb`). I imagine it would be more efficient if it I combined the queries into a queryDB before doing the search, but I can't really figure out how to do this. Would I have to combine all the MSA's into a massive file Stockholm file before creating the queryDB?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/369
https://github.com/soedinglab/MMseqs2/issues/370:56,Availability,down,downloaded,56,"Hi,. I am trying to create taxdb for uniref100 database downloaded from uniprot.; I did ; mmseqs createdb uniref100.fasta uniref100; and then; mmseqs createtaxdb uniref100 /mnt/Stockage-1To/databases/uniprot; I am getting the following error which I can't solve:; /mnt/Stockage-1To/databases/uniprot/createindex.sh: line 47: 15246 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TMP_PATH}/targetDB_mapping"". Could anyone please help me with this?; Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370
https://github.com/soedinglab/MMseqs2/issues/370:236,Availability,error,error,236,"Hi,. I am trying to create taxdb for uniref100 database downloaded from uniprot.; I did ; mmseqs createdb uniref100.fasta uniref100; and then; mmseqs createtaxdb uniref100 /mnt/Stockage-1To/databases/uniprot; I am getting the following error which I can't solve:; /mnt/Stockage-1To/databases/uniprot/createindex.sh: line 47: 15246 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TMP_PATH}/targetDB_mapping"". Could anyone please help me with this?; Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370
https://github.com/soedinglab/MMseqs2/issues/371:314,Availability,error,error,314,"This one should be easy to fix, Martin!. ## Expected Behavior; Help says:; ```; --cov-mode INT 0: coverage of query and target; ...; 5: short seq. needs to be at least x% of the other seq. length [5]. ```. ## Current Behavior; `mmseqs easy-cluster all.faa all tmp --cov-mode 5 -c 0.85 --threads 64; `; exists with error:; Unknown coverage mode 5. ## MMseqs Output (for bugs); ...; ```; cluster tmp/10137019871064957114/input tmp/10137019871064957114/clu tmp/10137019871064957114/clu_tmp --max-seqs 20 -c 0.85 --cov-mode 5 --spaced-kmer-mode 1 --threads 64 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; Unknown coverage mode 5.; Error: Search died. ```. ## Context; Coverage mode 5 is important because it's the only option that ensures that clustered sequences are around same size, which is crucial for determining orthology. Alternatively if size similarity can be ensured otherwise (as a new option), then this option will be freed up to handle alignment coverage proper. This would also be faster since only similarly sized sequences would be compared. ## Your Environment; MMseqs2 version: 12.113e3; Server: 72 thread Intel(R) Xeon(R) CPU E5-2699 v3 @ 2.30GHz; OS: Ubuntu Server 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/371
https://github.com/soedinglab/MMseqs2/issues/371:730,Availability,Error,Error,730,"This one should be easy to fix, Martin!. ## Expected Behavior; Help says:; ```; --cov-mode INT 0: coverage of query and target; ...; 5: short seq. needs to be at least x% of the other seq. length [5]. ```. ## Current Behavior; `mmseqs easy-cluster all.faa all tmp --cov-mode 5 -c 0.85 --threads 64; `; exists with error:; Unknown coverage mode 5. ## MMseqs Output (for bugs); ...; ```; cluster tmp/10137019871064957114/input tmp/10137019871064957114/clu tmp/10137019871064957114/clu_tmp --max-seqs 20 -c 0.85 --cov-mode 5 --spaced-kmer-mode 1 --threads 64 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; Unknown coverage mode 5.; Error: Search died. ```. ## Context; Coverage mode 5 is important because it's the only option that ensures that clustered sequences are around same size, which is crucial for determining orthology. Alternatively if size similarity can be ensured otherwise (as a new option), then this option will be freed up to handle alignment coverage proper. This would also be faster since only similarly sized sequences would be compared. ## Your Environment; MMseqs2 version: 12.113e3; Server: 72 thread Intel(R) Xeon(R) CPU E5-2699 v3 @ 2.30GHz; OS: Ubuntu Server 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/371
https://github.com/soedinglab/MMseqs2/issues/373:730,Performance,tune,tune,730,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373
https://github.com/soedinglab/MMseqs2/issues/373:695,Usability,guid,guide,695,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373
https://github.com/soedinglab/MMseqs2/issues/374:256,Availability,mask,mask,256,"Hello,. I am using easy-cluster in the latest version of mmseqs2. I have given a random sample of 1000 protein sequences from 1.36 million protein sequences to cluster. Here is the command; `mmseqs easy-cluster sample.fasta SampleTest tmp --max-seqs 100 --mask 0 --min-seq-id 0.75 -c 0.8 --cov-mode 0 --similarity-type 1 --cluster-steps 7 --cluster-reassign 1`. I am getting the error; `Input /tmp/5803776248916823257/clu_tmp/6236462208301927627/seq_wrong_assigned_pref does not exist.`; `Error: swapdb2 reassign died`; `Error: Search died`. My input file is ok. Its in unix format, containing protein sequences that are full-length. I also cannot find the --min-length you talk about in post #325. Please advice. Thank you; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374
https://github.com/soedinglab/MMseqs2/issues/374:379,Availability,error,error,379,"Hello,. I am using easy-cluster in the latest version of mmseqs2. I have given a random sample of 1000 protein sequences from 1.36 million protein sequences to cluster. Here is the command; `mmseqs easy-cluster sample.fasta SampleTest tmp --max-seqs 100 --mask 0 --min-seq-id 0.75 -c 0.8 --cov-mode 0 --similarity-type 1 --cluster-steps 7 --cluster-reassign 1`. I am getting the error; `Input /tmp/5803776248916823257/clu_tmp/6236462208301927627/seq_wrong_assigned_pref does not exist.`; `Error: swapdb2 reassign died`; `Error: Search died`. My input file is ok. Its in unix format, containing protein sequences that are full-length. I also cannot find the --min-length you talk about in post #325. Please advice. Thank you; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374
https://github.com/soedinglab/MMseqs2/issues/374:489,Availability,Error,Error,489,"Hello,. I am using easy-cluster in the latest version of mmseqs2. I have given a random sample of 1000 protein sequences from 1.36 million protein sequences to cluster. Here is the command; `mmseqs easy-cluster sample.fasta SampleTest tmp --max-seqs 100 --mask 0 --min-seq-id 0.75 -c 0.8 --cov-mode 0 --similarity-type 1 --cluster-steps 7 --cluster-reassign 1`. I am getting the error; `Input /tmp/5803776248916823257/clu_tmp/6236462208301927627/seq_wrong_assigned_pref does not exist.`; `Error: swapdb2 reassign died`; `Error: Search died`. My input file is ok. Its in unix format, containing protein sequences that are full-length. I also cannot find the --min-length you talk about in post #325. Please advice. Thank you; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374
https://github.com/soedinglab/MMseqs2/issues/374:521,Availability,Error,Error,521,"Hello,. I am using easy-cluster in the latest version of mmseqs2. I have given a random sample of 1000 protein sequences from 1.36 million protein sequences to cluster. Here is the command; `mmseqs easy-cluster sample.fasta SampleTest tmp --max-seqs 100 --mask 0 --min-seq-id 0.75 -c 0.8 --cov-mode 0 --similarity-type 1 --cluster-steps 7 --cluster-reassign 1`. I am getting the error; `Input /tmp/5803776248916823257/clu_tmp/6236462208301927627/seq_wrong_assigned_pref does not exist.`; `Error: swapdb2 reassign died`; `Error: Search died`. My input file is ok. Its in unix format, containing protein sequences that are full-length. I also cannot find the --min-length you talk about in post #325. Please advice. Thank you; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374
https://github.com/soedinglab/MMseqs2/issues/376:306,Availability,fault,fault,306,"## Expected Behavior; I use `splitdb` to run `mmseqs search` in parallel on a HPC (SGE). ; For each match, I would like to retrieve the name of the original fasta file with `mmseqs convertalis --format-output ""...,qset,tset,...""`. . ## Current Behavior; Specifying `qset` or `tset` leads to a segmentation fault. Running `search` and `convertalis` on the full db works without issues. . ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test1.faa test2.faa db; mmseqs splitdb db db_split --split 2; for file in db_split_*_2; do; mmseqs createsubdb ${file}.index db_h ${file}_h; done; mmseqs search db_split_1_2 db resultdb tmp; mmseqs convertalis db_split_1_2 db resultdb results.tsv --format-output ""query,target,qset""; ```. ## MMseqs Output (for bugs); ```; convertalis db_split_1_2 db resultdb results.tsv --format-output query,target,qset . MMseqs Version: 45c4de7f1daefa06b45688195305eadedaea4d97; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Alignment format 0; Format alignment output query,target,qset; Translation table 1; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Database output false; Preload mode 0; Search type 0; Threads 64; Compressed 0; Verbosity 3. repex.sh: line 7: 43190 Segmentation fault (core dumped) mmseqs convertalis db_split_1_2 db resultdb results.tsv --format-output ""query,target,qset""; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `45c4de7f1daefa06b45688195305eadedaea4d97`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel(R) Xeon(R) CPU E7-4850 v4 @ 2.10GHz, AVX2 support, 3TB RAM; * Operating system and version:`CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376
https://github.com/soedinglab/MMseqs2/issues/376:1243,Availability,fault,fault,1243,"## Expected Behavior; I use `splitdb` to run `mmseqs search` in parallel on a HPC (SGE). ; For each match, I would like to retrieve the name of the original fasta file with `mmseqs convertalis --format-output ""...,qset,tset,...""`. . ## Current Behavior; Specifying `qset` or `tset` leads to a segmentation fault. Running `search` and `convertalis` on the full db works without issues. . ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test1.faa test2.faa db; mmseqs splitdb db db_split --split 2; for file in db_split_*_2; do; mmseqs createsubdb ${file}.index db_h ${file}_h; done; mmseqs search db_split_1_2 db resultdb tmp; mmseqs convertalis db_split_1_2 db resultdb results.tsv --format-output ""query,target,qset""; ```. ## MMseqs Output (for bugs); ```; convertalis db_split_1_2 db resultdb results.tsv --format-output query,target,qset . MMseqs Version: 45c4de7f1daefa06b45688195305eadedaea4d97; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Alignment format 0; Format alignment output query,target,qset; Translation table 1; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Database output false; Preload mode 0; Search type 0; Threads 64; Compressed 0; Verbosity 3. repex.sh: line 7: 43190 Segmentation fault (core dumped) mmseqs convertalis db_split_1_2 db resultdb results.tsv --format-output ""query,target,qset""; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `45c4de7f1daefa06b45688195305eadedaea4d97`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel(R) Xeon(R) CPU E7-4850 v4 @ 2.10GHz, AVX2 support, 3TB RAM; * Operating system and version:`CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376
https://github.com/soedinglab/MMseqs2/issues/379:1729,Availability,Mask,Mask,1729,"to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/379:1746,Availability,Mask,Mask,1746,"to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/379:1938,Availability,Mask,Mask,1938,"gnment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output false; Overlap thre",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/379:3203,Deployability,Install,Installed,3203,"Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output false; Overlap threshold 0; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 0; Greedy best hits false; ```. ## Context; Want to identify close homologues in uniprotkb from RCSB. Filtering by e-value seems a reasonable choice. ## Your Environment; Installed via a fresh miniconda env last week.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/379:611,Integrability,wrap,wrapped,611,"Maybe I'm going crazy, but this really does seem like a bug. Perhaps there's something obvious here, but I'm not seeing it. ## Expected Behavior; Returning hits with e-values less than specified e-value threshold on the command line when using easy-search. ## Current Behavior. e-value threshold becomes zero when specified e-value < 1E-45. `mmseqs easy-search da7915829ba14fe0a86c3cc539a89f43.constructs.fa /db/mmseqs/uniprotkb_swiss-prot result.m8 /dev/shm/tmp3343 -e 1E-46`. ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; ```. ## Steps to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/379:962,Integrability,wrap,wrapped,962,"Maybe I'm going crazy, but this really does seem like a bug. Perhaps there's something obvious here, but I'm not seeing it. ## Expected Behavior; Returning hits with e-values less than specified e-value threshold on the command line when using easy-search. ## Current Behavior. e-value threshold becomes zero when specified e-value < 1E-45. `mmseqs easy-search da7915829ba14fe0a86c3cc539a89f43.constructs.fa /db/mmseqs/uniprotkb_swiss-prot result.m8 /dev/shm/tmp3343 -e 1E-46`. ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; ```. ## Steps to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379
https://github.com/soedinglab/MMseqs2/issues/380:40,Integrability,message,message,40,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380
https://github.com/soedinglab/MMseqs2/issues/380:317,Performance,optimiz,optimize,317,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380
https://github.com/soedinglab/MMseqs2/issues/381:55,Availability,down,download,55,"Hi all,. I am getting started with mmseqs and tried to download the nr database with; mmseqs databases NR mmseqs2_nr tmp. However at the end of the process there are many lines like:; No node for taxID 2742838, ignoring it.; No node for taxID 2742840, ignoring it.; No node for taxID 2742841, ignoring it.; No node for taxID 2742842, ignoring it.; No node for taxID 2742843, ignoring it.; No node for taxID 2742845, ignoring it.; No node for taxID 2461416, ignoring it. Could you let me know how to proceed here? Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/381
https://github.com/soedinglab/MMseqs2/issues/382:2021,Availability,Mask,Mask,2021,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:2038,Availability,Mask,Mask,2038,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:2585,Availability,Mask,Masked,2585,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:194,Deployability,pipeline,pipeline,194,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:2672,Deployability,release,release,2672,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:2344,Energy Efficiency,consumption,consumption,2344,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/382:571,Testability,test,test,571,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382
https://github.com/soedinglab/MMseqs2/issues/383:59,Availability,down,downloaded,59,"## Expected Behavior; I want to create `seqTaxDB` with the downloaded `nt` database. ## Current Behavior; While augmenting the database with taxonomic information there's an error with BLAST+'s `blastdbcmd`. ## Steps to Reproduce (for bugs); These steps go well:; ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; ```; The next command ; `blastdbcmd -db nt -entry all > nt.fna`; returns an error; `BLAST Database error: No alias or index file found for nucleotide database [/scratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT/nt] in search path [/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:]`. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; blastdbcmd: 2.11.0+; Package: blast 2.11.0, build Oct 6 2020 03:24:05. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda, MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383
https://github.com/soedinglab/MMseqs2/issues/383:174,Availability,error,error,174,"## Expected Behavior; I want to create `seqTaxDB` with the downloaded `nt` database. ## Current Behavior; While augmenting the database with taxonomic information there's an error with BLAST+'s `blastdbcmd`. ## Steps to Reproduce (for bugs); These steps go well:; ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; ```; The next command ; `blastdbcmd -db nt -entry all > nt.fna`; returns an error; `BLAST Database error: No alias or index file found for nucleotide database [/scratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT/nt] in search path [/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:]`. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; blastdbcmd: 2.11.0+; Package: blast 2.11.0, build Oct 6 2020 03:24:05. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda, MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383
https://github.com/soedinglab/MMseqs2/issues/383:462,Availability,error,error,462,"## Expected Behavior; I want to create `seqTaxDB` with the downloaded `nt` database. ## Current Behavior; While augmenting the database with taxonomic information there's an error with BLAST+'s `blastdbcmd`. ## Steps to Reproduce (for bugs); These steps go well:; ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; ```; The next command ; `blastdbcmd -db nt -entry all > nt.fna`; returns an error; `BLAST Database error: No alias or index file found for nucleotide database [/scratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT/nt] in search path [/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:]`. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; blastdbcmd: 2.11.0+; Package: blast 2.11.0, build Oct 6 2020 03:24:05. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda, MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383
https://github.com/soedinglab/MMseqs2/issues/383:485,Availability,error,error,485,"## Expected Behavior; I want to create `seqTaxDB` with the downloaded `nt` database. ## Current Behavior; While augmenting the database with taxonomic information there's an error with BLAST+'s `blastdbcmd`. ## Steps to Reproduce (for bugs); These steps go well:; ```; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; ```; The next command ; `blastdbcmd -db nt -entry all > nt.fna`; returns an error; `BLAST Database error: No alias or index file found for nucleotide database [/scratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT/nt] in search path [/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:/mnt/lscratch/users/pnovikova/refinement/taxonomy/mmseqs2/NT:]`. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; blastdbcmd: 2.11.0+; Package: blast 2.11.0, build Oct 6 2020 03:24:05. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda, MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383
https://github.com/soedinglab/MMseqs2/issues/384:145,Availability,error,error,145,Dear MMseqs Team!; the command:; `mmseqs createdb /home/db/HH/nr /home/db/HH/uniclust/output/2020_12/uniprot_db --max-seq-len 14000`; fails with error:; `Unrecognized parameter --max-seq-len`; I'm using that withing HHsuite uniclust generating pipeline. Is that option still supported?. I compiled mmseqs2 today from git repo.; mmseqs command reports: `MMseqs2 Version: GITDIR-NOTFOUND`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384
https://github.com/soedinglab/MMseqs2/issues/384:244,Deployability,pipeline,pipeline,244,Dear MMseqs Team!; the command:; `mmseqs createdb /home/db/HH/nr /home/db/HH/uniclust/output/2020_12/uniprot_db --max-seq-len 14000`; fails with error:; `Unrecognized parameter --max-seq-len`; I'm using that withing HHsuite uniclust generating pipeline. Is that option still supported?. I compiled mmseqs2 today from git repo.; mmseqs command reports: `MMseqs2 Version: GITDIR-NOTFOUND`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384
https://github.com/soedinglab/MMseqs2/issues/385:196,Performance,optimiz,optimize,196,"## Expected Behavior; I am using mmseqs2 for taxonomy assignment against nt database and I was hoping to have a fast result. ## Current Behavior; Mmseqs2 is running too slow, maybe I need help to optimize my command line. My fasta files have ~300,000 to 1,000,000 sequences. ## Steps to Reproduce (for bugs); To create the database I used the following commands:; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; blastdbcmd -db nt -entry all -outfmt ""%a %T"" > nt.fna.taxidmapping; mmseqs createdb nt.fna nt.fnaDB ; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping; mmseqs easy-taxonomy $fasta ~/Programs/databases/nt.fnaDB $fasta_result tmp --search-type 3 --lca-mode 2 --threads 32. ## MMseqs Output (for bugs); MMseqs2 lof file (the run is not finished yet): https://gist.github.com/giantoni/efc6f62f85119a071992f9a6ad82d7b2. ## Context; For now, I just want to separate my metatranscriptome sequences into domain (bacteria, archae, eukaryota). ## Your Environment; I am using a virtual machine with ubuntu 18.04.5 LTS 118 Gb RAM and 32 cores (it does support both AVX2/SSE).; MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385
https://github.com/soedinglab/MMseqs2/issues/387:200,Availability,down,download,200,Hey I'm reading this paper ; https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf; I'm trying to get the latest version of mmseqs with the feature --majority but I cannot see where to download it. Is it available now? thank you!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387
https://github.com/soedinglab/MMseqs2/issues/387:219,Availability,avail,available,219,Hey I'm reading this paper ; https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf; I'm trying to get the latest version of mmseqs with the feature --majority but I cannot see where to download it. Is it available now? thank you!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387
https://github.com/soedinglab/MMseqs2/issues/391:657,Availability,mask,mask,657,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:733,Availability,mask,mask,733,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:804,Availability,mask,mask,804,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:1276,Availability,mask,mask,1276,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:2100,Availability,mask,mask,2100,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:3217,Availability,Mask,Mask,3217,"01 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	1; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:3235,Availability,Mask,Mask,3235,"01 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	1; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:3444,Availability,Mask,Mask,3444,"ng 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	1; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:4709,Availability,mask,mask,4709,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:4718,Availability,mask,mask-lower-case,4718,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:7350,Availability,mask,mask,7350,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:7359,Availability,mask,mask-lower-case,7359,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:10529,Availability,mask,mask,10529,"138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:10538,Availability,mask,mask-lower-case,10538,"138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:12899,Deployability,Install,Installed,12899,"; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic Beaver) 64-bit ; Kernel Linux 5.4.0-58-generic x86_64; MATE 1.20.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:13004,Deployability,Release,Release,13004,"; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic Beaver) 64-bit ; Kernel Linux 5.4.0-58-generic x86_64; MATE 1.20.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:5040,Energy Efficiency,consumption,consumption,5040,"lapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:7679,Energy Efficiency,consumption,consumption,7679,"per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:10859,Energy Efficiency,consumption,consumption,10859," Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --real",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:2435,Integrability,wrap,wrapped,2435,"P_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:5880,Integrability,wrap,wrapped-scoring,5880,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:8542,Integrability,wrap,wrapped-scoring,8542,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:11728,Integrability,wrap,wrapped-scoring,11728," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:874,Modifiability,extend,extend,874,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:1401,Modifiability,extend,extend,1401,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:2219,Modifiability,extend,extend,2219,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:6174,Modifiability,extend,extend,6174,"efiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:8836,Modifiability,extend,extend,8836,"lation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/1613840",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:12022,Modifiability,extend,extend,12022,"(step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:4807,Performance,load,load-mode,4807,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:6109,Performance,load,load-mode,6109,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:7448,Performance,load,load-mode,7448,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:8771,Performance,load,load-mode,8771,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:10627,Performance,load,load-mode,10627,"138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:11957,Performance,load,load-mode,11957," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/391:1622,Safety,detect,detected,1622,"Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391
https://github.com/soedinglab/MMseqs2/issues/394:187,Availability,error,error,187,"## Expected Behavior; Hi,. I am trying to search DNA sequences reads (~240bp) against the NCBI nt database. I have used the following command but I get the below mentioned std::bad_alloc error. Am I doing something wrong? Is there are way to solve this? And continue the run from where it stopped?. Thanks in advance for your help!; Haim; ; ## Current Behavior; `mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" sample.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 sample_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs). createdb sample.fastq_filtered.fa /tmp/tmp_MMSeq2/13348632313875676683/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [===; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 6ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 61ms; Tmp /tmp/tmp_MMSeq2/13348632313875676683/search_tmp folder does not exist or is not a directory.; splitsequence /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . [=================================================================] 65.82M 4s 85ms; Time for merging to target_seqs_split_h: 0h 0m 16s 523ms; Time for merging to target_seqs_split: 0h 0m 18s 919ms; Time for processing: 0h 1m 0s 627ms; extractframes /tmp/tmp_MMSeq2/13348632313875676683/query /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . [==================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:3118,Availability,mask,mask,3118," for merging to query_seqs_h: 0h 0m 0s 20ms; Time for merging to query_seqs: 0h 0m 0s 26ms; Time for processing: 0h 0m 0s 303ms; splitsequence /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:3127,Availability,mask,mask-lower-case,3127," for merging to query_seqs_h: 0h 0m 0s 20ms; Time for merging to query_seqs: 0h 0m 0s 26ms; Time for processing: 0h 0m 0s 303ms; splitsequence /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:3585,Availability,Mask,Masked,3585," /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4s 959ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 278905; Target db start 1 to 69220; [=================================================================] 278.90K 3s 495ms. 0.936570 k-mers per position; 8348 DB matches per sequence; 48 overflows; 0 queries produce too many hits (truncated result); 1278 sequences passed prefiltering per query sequence; 0 median result list length; 247172 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:8620,Availability,mask,mask,8620,"============] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:8629,Availability,mask,mask-lower-case,8629,"============] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:9089,Availability,Mask,Masked,9089,"tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================] 15.11M 8m 6s 441ms. 0.965152 k-mers per position; 6491 DB matches per sequence; 5875 overflows; 0 queries produce too many hits (truncated result); 813 sequences passed prefiltering per query sequence; 0 med",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13009,Availability,Error,Error,13009,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13034,Availability,Error,Error,13034,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13059,Availability,Error,Error,13059,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13098,Availability,down,downloaded,13098,"; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13345,Availability,error,error,13345,"3871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [====================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13926,Availability,mask,mask,13926,"===============================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string aft",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13935,Availability,mask,mask-lower-case,13935,"===============================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string aft",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14490,Availability,Mask,Masked,14490,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14578,Availability,Error,Error,14578,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14601,Availability,Error,Error,14601,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14626,Availability,Error,Error,14626,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:3345,Energy Efficiency,consumption,consumption,3345,"--sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4s 959ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 278905; Target db start 1 to 69220; [=================================================================] 278.90K 3s 495ms. 0.936570 k-mers per position; 8348 DB matches per sequence; 48 overflows; 0 qu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:8849,Energy Efficiency,consumption,consumption,8849,"48632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14206,Energy Efficiency,consumption,consumption,14206,"2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of sys",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14527,Energy Efficiency,allocate,allocate,14527,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:5674,Integrability,wrap,wrapped-scoring,5674,"ms; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; sw",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:11282,Integrability,wrap,wrapped-scoring,11282,"; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:5986,Modifiability,extend,extend,5986,"1789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1025387178902",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:7133,Modifiability,extend,extend,7133,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:11594,Modifiability,extend,extend,11594,"89027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:12753,Modifiability,extend,extend,12753,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:3216,Performance,load,load-mode,3216," for merging to query_seqs_h: 0h 0m 0s 20ms; Time for merging to query_seqs: 0h 0m 0s 26ms; Time for processing: 0h 0m 0s 303ms; splitsequence /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:5911,Performance,load,load-mode,5911,"mp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:7186,Performance,load,load-mode,7186,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:8718,Performance,load,load-mode,8718,"============] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:11519,Performance,load,load-mode,11519,"/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:12806,Performance,load,load-mode,12806,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:14024,Performance,load,load-mode,14024,"===============================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string aft",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/394:13000,Safety,Abort,Aborted,13000,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394
https://github.com/soedinglab/MMseqs2/issues/395:860,Availability,down,downloads,860,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395
https://github.com/soedinglab/MMseqs2/issues/395:105,Deployability,pipeline,pipeline,105,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395
https://github.com/soedinglab/MMseqs2/issues/395:527,Deployability,pipeline,pipeline,527,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395
https://github.com/soedinglab/MMseqs2/issues/395:428,Energy Efficiency,reduce,reduce,428,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395
https://github.com/soedinglab/MMseqs2/issues/395:216,Security,access,access,216,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395
https://github.com/soedinglab/MMseqs2/issues/396:174,Availability,down,download,174,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:398,Availability,down,downloads,398,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:619,Deployability,install,installed,619,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:9,Security,hash,hash,9,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:514,Security,hash,hashes,514,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:696,Security,hash,hash,696,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/396:744,Security,hash,hash,744,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396
https://github.com/soedinglab/MMseqs2/issues/397:299,Energy Efficiency,consumption,consumption,299,"## Expected Behavior; I'm giving to MMSeqs2 360G of memory with 36 threads. I was expecting that it will use all this memory to increase the prefiltering speed. . ## Current Behavior; During the prefiltering step, MMSeqs2 used only 10% of the memory. I think he is using 80% of the estimated memory consumption, because it compute 48G for the `Estimated memory consumption`, but I'm not sure. ## Context; I'm currently trying to create protein families with a large database. I have 50 million proteins to cluster. I write a workflow based on uniclust. I would to increase the speed of the workflow, particularly on prefilter step, without loose the sensibility. I tried to use --split-memory-limit to increase the memory but it's not working. There is another solution ?. Here it's the command line that I would to increase speed : ; `mmseqs search $INPUT $INPUT ""$ALIGN_DIR/align"" $TMP_DIR --max-seqs 1000 -c 0.8 --comp-bias-corr 1 -s 7 --alignment-mode 3 --min-seq-id 0.3 --threads 36`. ## Your Environment; ```; Architecture : x86_64; Processeur(s) : 36; Thread(s) par cœur : 1; Cœur(s) par socket : 18; Socket(s) : 2; Nœud(s) NUMA : 2; Identifiant constructeur : GenuineIntel; Famille de processeur : 6; Modèle : 85; Nom de modèle : Intel(R) Xeon(R) Gold 6150 CPU @ 2.70GHz; Révision : 4; ```. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397
https://github.com/soedinglab/MMseqs2/issues/397:361,Energy Efficiency,consumption,consumption,361,"## Expected Behavior; I'm giving to MMSeqs2 360G of memory with 36 threads. I was expecting that it will use all this memory to increase the prefiltering speed. . ## Current Behavior; During the prefiltering step, MMSeqs2 used only 10% of the memory. I think he is using 80% of the estimated memory consumption, because it compute 48G for the `Estimated memory consumption`, but I'm not sure. ## Context; I'm currently trying to create protein families with a large database. I have 50 million proteins to cluster. I write a workflow based on uniclust. I would to increase the speed of the workflow, particularly on prefilter step, without loose the sensibility. I tried to use --split-memory-limit to increase the memory but it's not working. There is another solution ?. Here it's the command line that I would to increase speed : ; `mmseqs search $INPUT $INPUT ""$ALIGN_DIR/align"" $TMP_DIR --max-seqs 1000 -c 0.8 --comp-bias-corr 1 -s 7 --alignment-mode 3 --min-seq-id 0.3 --threads 36`. ## Your Environment; ```; Architecture : x86_64; Processeur(s) : 36; Thread(s) par cœur : 1; Cœur(s) par socket : 18; Socket(s) : 2; Nœud(s) NUMA : 2; Identifiant constructeur : GenuineIntel; Famille de processeur : 6; Modèle : 85; Nom de modèle : Intel(R) Xeon(R) Gold 6150 CPU @ 2.70GHz; Révision : 4; ```. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397
https://github.com/soedinglab/MMseqs2/issues/398:1225,Deployability,Update,Update,1225,"## Expected Behavior; I am trying to cluster small protein fragments (7-25 AA long) with MMseqs2 using the most sensitive settings. As I am only interested in highly similar proteins, I use a high ID threshold and expect lots of clusters. ## Current Behavior; However, the amount of clusters produced exceeds the number of unique sequences present in my data. Further inspection shows that this is because **_100% identical sequences end up in different clusters_**. ## Steps to Reproduce (for bugs); These are the steps I follow starting from my fasta file and ending in clustering results:. `mmseqs createdb <fasta-file> fasta_in`; `mmseqs cluster fasta_in fasta_clustered tmp --min-seq-id 0.9`. These unexpected results are also found when:; - using a lower `--min-seq_id` of 0.8;; - using the non-standard similarity type `--similarity type` 1;; - using `--cluster-mode` 1. In addition, the amount of clusters produced are fluctuating heavily when the order of sequences in the FASTA file are shuffled beforehand, ranging between 250-450 using the same settings (notably, when only 246 unique sequences are present). Am I overseeing something? Do I need to reconsider my parameters given the short size of my fragments?. Update: Further inspection revealed that clustering using only a high sensitivity (`-s 7.5`) but no minimum ID threshold removes this bug, but combining this sensitivity with any ID threshold over 0.80 reintroduces the problem. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 96d452cb432fc4674991a48952deaf24d1787e77; * Which MMseqs version was used: Statically-compiled; * Operating system and version: linux-gnu; Ubuntu 16.04.6 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398
https://github.com/soedinglab/MMseqs2/issues/399:1872,Availability,down,down,1872,"ee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/399:637,Deployability,install,install,637,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/399:2077,Deployability,install,installed,2077,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/399:1828,Integrability,message,message,1828,"r 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/399:93,Performance,perform,performing,93,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/399:2026,Performance,perform,perform,2026,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399
https://github.com/soedinglab/MMseqs2/issues/400:128,Availability,error,error,128,"See reference to older, closed issue. Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. _Originally posted by @s-devos in https://github.com/soedinglab/MMseqs2/issues/329#issuecomment-771475381_. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`. Further inspection shows that --clustering-reassign gives problems with whichever cascaded clustering option used; it only works together with --single-step-clustering, which isn't very useful",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400
https://github.com/soedinglab/MMseqs2/issues/400:375,Availability,Error,Error,375,"See reference to older, closed issue. Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. _Originally posted by @s-devos in https://github.com/soedinglab/MMseqs2/issues/329#issuecomment-771475381_. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`. Further inspection shows that --clustering-reassign gives problems with whichever cascaded clustering option used; it only works together with --single-step-clustering, which isn't very useful",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400
https://github.com/soedinglab/MMseqs2/issues/400:563,Availability,Error,Error,563,"See reference to older, closed issue. Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. _Originally posted by @s-devos in https://github.com/soedinglab/MMseqs2/issues/329#issuecomment-771475381_. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`. Further inspection shows that --clustering-reassign gives problems with whichever cascaded clustering option used; it only works together with --single-step-clustering, which isn't very useful",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400
https://github.com/soedinglab/MMseqs2/issues/401:1819,Availability,down,downloaded,1819,"x.7 nrDB.index ; nrDB_h nrDB.idx.10 nrDB.idx.3 nrDB.idx.8 nrDB.lookup; nrDB_h.dbtype nrDB.idx.11 nrDB.idx.4 nrDB.idx.9 nrDB_mapping ; nrDB_h.index nrDB.idx.12 nrDB.idx.5 nrDB.idx.dbtype nrDB.source; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:3110,Performance,Load,Loading,3110,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:3158,Performance,Load,Loading,3158,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:3215,Performance,Load,Loading,3215,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2044,Testability,log,log,2044,"ce; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2071,Testability,test,test,2071,"idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2770,Testability,log,log,2770,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2825,Testability,test,test,2825,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2862,Testability,test,test,2862,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:2973,Testability,test,test,2973,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/401:3014,Testability,test,test,3014,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401
https://github.com/soedinglab/MMseqs2/issues/404:524,Testability,log,log,524,"Anybody who has to deal with clusters will need to make use of the size distribution at some point. It's not hard to cough up a script to take the cluster file and make it into a cluster size distribution histogram, but it would be better done once in mmseqs itself. Other useful columns for the cluster size distribution would be the percent of genes, the percent of clusters in that bin, and cumulatives on those starting from size 1 (singletons). It would also be useful to calculate the following summary statistics and log them as well as writing them to a JSON file:. - Number of sequences in; - Total number of characters in the sequences; - Average sequence length; - Number of singletons; - Fraction of genes in singletons; - Size of largest cluster; - Fraction of genes in largest cluster; - Modal cluster size (peak of size distribution); - Fraction of genes in modal cluster; - Which space was used (NA or AA); - Run parameters; - processors used; - run times. Thanks for listening.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/404
https://github.com/soedinglab/MMseqs2/issues/405:650,Availability,down,downstream,650,"Currently clusters are named for the gene ID selected as representative of the set. I suspect that for the overwhelming majority of uses, these gene IDs are pretty meaningless, with maybe a code of the organism, chromosome, and position number. A more meaningful naming scheme is using an ordinal on cluster size with the largest cluster always being number 0. I would suggest the ordering be secondarily on total sequence length in the cluster. Using this scheme saves a lookup of what the biggest clusters are. . I further suggest that the cluster file be sorted by this ordering with the biggest cluster first. This change may break some existing downstream scripts, so it should probably be optional.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405
https://github.com/soedinglab/MMseqs2/issues/406:114,Availability,down,downstream,114,"Again, this is an easy script, but one might as well ask for what one wants and have it done centrally. A typical downstream use of the clusters is to do multple-sequence-alignment calculations and then look at some stats on those such as the fraction missing and fraction parsimony-informative. This means making a directory to hold a fasta of each cluster and then running one's favorite MSA/treebuilder algorithm on it (MUSCLE, in my case), then doing some descriptive statistics on them. . It would be nice if optionally mmseqs would do this splitting on its own. Nicer still if it would spawn the MSA/treebuilder with a user-specified set of arguments and do the summary stat calculation with output to TSV. I note that MUSCLE is public-domain and pretty fast.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/406
https://github.com/soedinglab/MMseqs2/issues/407:48,Availability,avail,available,48,"As of mmseqs 12.113e3, the amino acid databases available via `mmseqs databases` are:. ```; Name 	Type 	Taxonomy	Url; - UniRef100 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef90 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef50 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniProtKB 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/TrEMBL 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/Swiss-Prot	Aminoacid 	 yes	https://uniprot.org; - NR 	Aminoacid 	 yes	https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA; ```. ...and I believe that all are quite large and take a long time to download and construct. It would be helpful for testing purposes to have a small database (or databases), especially a small subset database of each `UniRef[0-9]+` database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407
https://github.com/soedinglab/MMseqs2/issues/407:657,Availability,down,download,657,"As of mmseqs 12.113e3, the amino acid databases available via `mmseqs databases` are:. ```; Name 	Type 	Taxonomy	Url; - UniRef100 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef90 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef50 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniProtKB 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/TrEMBL 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/Swiss-Prot	Aminoacid 	 yes	https://uniprot.org; - NR 	Aminoacid 	 yes	https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA; ```. ...and I believe that all are quite large and take a long time to download and construct. It would be helpful for testing purposes to have a small database (or databases), especially a small subset database of each `UniRef[0-9]+` database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407
https://github.com/soedinglab/MMseqs2/issues/407:705,Testability,test,testing,705,"As of mmseqs 12.113e3, the amino acid databases available via `mmseqs databases` are:. ```; Name 	Type 	Taxonomy	Url; - UniRef100 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef90 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef50 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniProtKB 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/TrEMBL 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/Swiss-Prot	Aminoacid 	 yes	https://uniprot.org; - NR 	Aminoacid 	 yes	https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA; ```. ...and I believe that all are quite large and take a long time to download and construct. It would be helpful for testing purposes to have a small database (or databases), especially a small subset database of each `UniRef[0-9]+` database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407
https://github.com/soedinglab/MMseqs2/issues/410:66,Availability,down,download,66,"Hello,. Doing some protein work, among the databases proposed for download, would it be possible to add a profile library corresponding to the CDD database? I need to search for protein domains. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/410
https://github.com/soedinglab/MMseqs2/issues/411:180,Integrability,depend,dependency,180,"From the packaging POV, it's far better to do cmake discovery for zstd like you do for bz2 and zlib. I am told the Debian build does this already. . xxhash is also a really common dependency on many distros. The other libs do not seem to be common, but if you're adding discovery for two, might as well add them for more. The other cmake issue is BUILD_SHARED_LIBS. Unless set to OFF, the build fails because of relocation problems against the cacode and alp libraries. Forcing the build to be static means the external dependencies have to be built static also. Most distros don't like static-only builds for reasons widely shared.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411
https://github.com/soedinglab/MMseqs2/issues/411:520,Integrability,depend,dependencies,520,"From the packaging POV, it's far better to do cmake discovery for zstd like you do for bz2 and zlib. I am told the Debian build does this already. . xxhash is also a really common dependency on many distros. The other libs do not seem to be common, but if you're adding discovery for two, might as well add them for more. The other cmake issue is BUILD_SHARED_LIBS. Unless set to OFF, the build fails because of relocation problems against the cacode and alp libraries. Forcing the build to be static means the external dependencies have to be built static also. Most distros don't like static-only builds for reasons widely shared.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411
https://github.com/soedinglab/MMseqs2/issues/412:359,Availability,mask,masking,359,"Do you have a recommendation for creating a mmseqs nt database from a collection of fasta files? The instructions for making a mmseqs2 database from a blastdb are clear. My guess is that one could just take a collection of fasta files and convert them to a blastdb using makeblastdb, but I worry about the other things that creating a blastdb will do (repeat masking). As a more specific example, we would like to make a 'taxonomy aware' version of an mmseqs database for all NCBI Virus RefSeq genomes from NCBI Assembly (https://www.ncbi.nlm.nih.gov/assembly). So would you recommend we just download them and make a blastdb of these or is there an approach more amenable to the use of mmseqs?. Thanks,. Scott",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412
https://github.com/soedinglab/MMseqs2/issues/412:593,Availability,down,download,593,"Do you have a recommendation for creating a mmseqs nt database from a collection of fasta files? The instructions for making a mmseqs2 database from a blastdb are clear. My guess is that one could just take a collection of fasta files and convert them to a blastdb using makeblastdb, but I worry about the other things that creating a blastdb will do (repeat masking). As a more specific example, we would like to make a 'taxonomy aware' version of an mmseqs database for all NCBI Virus RefSeq genomes from NCBI Assembly (https://www.ncbi.nlm.nih.gov/assembly). So would you recommend we just download them and make a blastdb of these or is there an approach more amenable to the use of mmseqs?. Thanks,. Scott",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412
https://github.com/soedinglab/MMseqs2/issues/412:163,Usability,clear,clear,163,"Do you have a recommendation for creating a mmseqs nt database from a collection of fasta files? The instructions for making a mmseqs2 database from a blastdb are clear. My guess is that one could just take a collection of fasta files and convert them to a blastdb using makeblastdb, but I worry about the other things that creating a blastdb will do (repeat masking). As a more specific example, we would like to make a 'taxonomy aware' version of an mmseqs database for all NCBI Virus RefSeq genomes from NCBI Assembly (https://www.ncbi.nlm.nih.gov/assembly). So would you recommend we just download them and make a blastdb of these or is there an approach more amenable to the use of mmseqs?. Thanks,. Scott",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412
https://github.com/soedinglab/MMseqs2/issues/413:289,Availability,avail,available,289,"I am trying to use the taxonomy --majority parameter for taxonomic assignment to metagenomic contigs described in this paper, https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf, but it seems like the functionality hasn't been updated yet! When will this function be made available? Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413
https://github.com/soedinglab/MMseqs2/issues/413:244,Deployability,update,updated,244,"I am trying to use the taxonomy --majority parameter for taxonomic assignment to metagenomic contigs described in this paper, https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf, but it seems like the functionality hasn't been updated yet! When will this function be made available? Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413
https://github.com/soedinglab/MMseqs2/issues/414:524,Availability,mask,mask,524,"## Expected Behavior; I am trying to cluster based on similarity (`--similarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:699,Availability,mask,mask,699,"## Expected Behavior; I am trying to cluster based on similarity (`--similarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:1044,Availability,mask,mask,1044,"ilarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:1577,Availability,Mask,Mask,1577,"ype 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:1594,Availability,Mask,Mask,1594,"ype 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3607,Availability,mask,mask,3607,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3616,Availability,mask,mask-lower-case,3616,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4124,Availability,mask,mask,4124,"-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4133,Availability,mask,mask-lower-case,4133,"-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4627,Availability,mask,mask,4627,"--hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4636,Availability,mask,mask-lower-case,4636,"--hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:12403,Availability,mask,mask,12403,"======================================] 100.00% 154 0s 37ms; Write merged clustering; [=================================================================] 100.00% 164 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 68ms; createsubdb clu/sim1_tmp/7842071913732967198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:12412,Availability,mask,mask-lower-case,12412,"======================================] 100.00% 154 0s 37ms; Write merged clustering; [=================================================================] 100.00% 164 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 68ms; createsubdb clu/sim1_tmp/7842071913732967198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:12895,Availability,Mask,Masked,12895,"clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:16645,Availability,mask,mask,16645," 0m 0s 84ms; Total time: 0h 0m 0s 117ms. Size of the sequence database: 154; Size of the alignment database: 154; Number of clusters: 140. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 120ms; mergeclusters in/DB_in clu/sim1_clu clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/clu_step0 --threads 16 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 154 0s 9ms; Clustering step 2; [=================================================================] 100.00% 140 0s 43ms; Write merged clustering; [=================================================================] 100.00% 164 0s 49ms; Time for merging to sim1_clu: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:17178,Availability,Mask,Mask,17178,"154 0s 9ms; Clustering step 2; [=================================================================] 100.00% 140 0s 43ms; Write merged clustering; [=================================================================] 100.00% 164 0s 49ms; Time for merging to sim1_clu: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:17195,Availability,Mask,Mask,17195,"154 0s 9ms; Clustering step 2; [=================================================================] 100.00% 140 0s 43ms; Write merged clustering; [=================================================================] 100.00% 164 0s 49ms; Time for merging to sim1_clu: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19210,Availability,mask,mask,19210,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19219,Availability,mask,mask-lower-case,19219,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19727,Availability,mask,mask,19727,"-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19736,Availability,mask,mask-lower-case,19736,"-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:20230,Availability,mask,mask,20230,"--hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:20239,Availability,mask,mask-lower-case,20239,"--hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:28028,Availability,mask,mask,28028,"=================================] 100.00% 154 0s 28ms; Write merged clustering; [=================================================================] 100.00% 164 0s 38ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 72ms; createsubdb clu/sim2_tmp/12164117771218227067/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:28037,Availability,mask,mask-lower-case,28037,"=================================] 100.00% 154 0s 28ms; Write merged clustering; [=================================================================] 100.00% 164 0s 38ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 72ms; createsubdb clu/sim2_tmp/12164117771218227067/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:28521,Availability,Mask,Masked,28521,"/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/1216",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:805,Deployability,Update,Update,805,"## Expected Behavior; I am trying to cluster based on similarity (`--similarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4858,Energy Efficiency,Reduce,Reduced,4858,"40758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:12652,Energy Efficiency,consumption,consumption,12652,"7198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:20461,Energy Efficiency,Reduce,Reduced,20461,"16617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:28277,Energy Efficiency,consumption,consumption,28277,"/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:1889,Integrability,wrap,wrapped,1889,"gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3055,Integrability,wrap,wrapped-scoring,3055,"Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:5495,Integrability,wrap,wrapped-scoring,5495,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:8348,Integrability,wrap,wrapped-scoring,8348,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:9138,Integrability,wrap,wrapped-scoring,9138,"sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:14106,Integrability,wrap,wrapped-scoring,14106," k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_ste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:17490,Integrability,wrap,wrapped,17490,": 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_red",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:18658,Integrability,wrap,wrapped-scoring,18658,"x accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:21098,Integrability,wrap,wrapped-scoring,21098,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [==========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:23968,Integrability,wrap,wrapped-scoring,23968,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:24759,Integrability,wrap,wrapped-scoring,24759,"im2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/121",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:29818,Integrability,wrap,wrapped-scoring,29818," 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:2667,Modifiability,extend,extendable,2667,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3421,Modifiability,extend,extend,3421,"ove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3693,Modifiability,extend,extendable,3693,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4250,Modifiability,extend,extendable,4250,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4753,Modifiability,extend,extendable,4753,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:9504,Modifiability,extend,extend,9504,"-db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 12ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:14472,Modifiability,extend,extend,14472,"============] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 11ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [====================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:18268,Modifiability,extend,extendable,18268,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19024,Modifiability,extend,extend,19024,"e temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19296,Modifiability,extend,extendable,19296,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19853,Modifiability,extend,extendable,19853,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:20356,Modifiability,extend,extendable,20356,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:25125,Modifiability,extend,extend,25125,"db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:30184,Modifiability,extend,extend,30184,"========> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [===================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3278,Performance,load,load-mode,3278," 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:5655,Performance,load,load-mode,5655,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [=================================================================] 100.00% 164 0s 2ms. Time for read in: 0h 0m 0s 114ms; Total time: 0h 0m 0s 153ms. Size of the sequence database: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:8508,Performance,load,load-mode,8508,"967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:9361,Performance,load,load-mode,9361,"ut,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:12500,Performance,load,load-mode,12500,"======================================] 100.00% 154 0s 37ms; Write merged clustering; [=================================================================] 100.00% 164 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 68ms; createsubdb clu/sim1_tmp/7842071913732967198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:14329,Performance,load,load-mode,14329,"k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:18881,Performance,load,load-mode,18881,"0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:21258,Performance,load,load-mode,21258,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [=================================================================] 100.00% 164 0s 1ms. Time for read in: 0h 0m 0s 92ms; Total time: 0h 0m 0s 156ms. Size of the se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:24128,Performance,load,load-mode,24128,"8227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:24982,Performance,load,load-mode,24982,"t,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-typ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:28125,Performance,load,load-mode,28125,"=================================] 100.00% 154 0s 28ms; Write merged clustering; [=================================================================] 100.00% 164 0s 38ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 72ms; createsubdb clu/sim2_tmp/12164117771218227067/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:30041,Performance,load,load-mode,30041,"); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:2645,Security,hash,hash,2645,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:3641,Security,hash,hash-shift,3641,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4198,Security,hash,hash-shift,4198,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:4701,Security,hash,hash-shift,4701,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:18246,Security,hash,hash,18246,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19244,Security,hash,hash-shift,19244,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:19801,Security,hash,hash-shift,19801,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:20304,Security,hash,hash-shift,20304,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/414:32362,Usability,guid,guidelines,32362,"===============================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [=================================================================] 100.00% 154 0s 8ms; Add missing connections; [=================================================================] 100.00% 154 0s 0ms. Time for read in: 0h 0m 0s 85ms; Total time: 0h 0m 0s 161ms. Size of the sequence database: 154; Size of the alignment database: 154; Number of clusters: 140. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 165ms; mergeclusters in/DB_in clu/sim2_clu clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/clu_step0 --threads 16 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 154 0s 39ms; Clustering step 2; [=================================================================] 100.00% 140 0s 132ms; Write merged clustering; [=================================================================] 100.00% 164 0s 195ms; Time for merging to sim2_clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 253ms. ## Context; Is combining `--min-seq-id` with `--similarity type 1` the correct approach to define thresholds for clustering? From what I read in the guidelines, I expect this measure to be automatically converted.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414
https://github.com/soedinglab/MMseqs2/issues/415:66,Availability,Error,Error,66,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:206,Availability,ERROR,ERRORS,206,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:297,Availability,ERROR,ERRORS,297,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:438,Availability,ERROR,ERROR,438,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:497,Availability,mask,mask,497,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:701,Availability,ERROR,ERROR,701,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:760,Availability,mask,mask,760,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:1035,Availability,mask,mask,1035,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:1610,Availability,fault,fault,1610,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:1750,Availability,Error,Error,1750,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:169,Deployability,Install,Install,169,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:221,Deployability,install,install,221,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:2286,Deployability,install,install,2286,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/415:1397,Safety,detect,detected,1397,"rite-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415
https://github.com/soedinglab/MMseqs2/issues/417:591,Availability,toler,tolerate,591,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417
https://github.com/soedinglab/MMseqs2/issues/417:665,Availability,error,error-prone,665,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417
https://github.com/soedinglab/MMseqs2/issues/417:362,Deployability,release,releases,362,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417
https://github.com/soedinglab/MMseqs2/issues/417:395,Usability,simpl,simple,395,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417
https://github.com/soedinglab/MMseqs2/issues/418:3843,Deployability,patch,patches,3843,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418
https://github.com/soedinglab/MMseqs2/issues/418:1116,Performance,optimiz,optimized,1116,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x566a3d88 in Parameters::checkIfDatabaseIsValid (this=0x56b9c090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a7f29 in Parameters::parseParameters (this=0x56b9c090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x568ab4cc in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bc79d in runCommand (p=0x56ba50c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565ab4cb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```; same with the sse4.1 variant, etc..; ```; (gdb) run createindex DB tmp; Starting program: /usr/bin/mmseqs-sse4.1 createindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418
https://github.com/soedinglab/MMseqs2/issues/418:2598,Performance,optimiz,optimized,2598,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418
https://github.com/soedinglab/MMseqs2/issues/418:4024,Testability,test,testing,4024,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418
https://github.com/soedinglab/MMseqs2/issues/419:386,Deployability,update,update,386,"I would like to use the `clusterupdate` function, but I have some questions about the workflow. 1. Will the new sequences be compared to all the sequences of a cluster or only to the reference sequence? For example, if I have a new sequence N and an old cluster A={A0,A1,...,Ax} (with A0 the reference sequence), N will be compared to the whole sequence of A or only to A0. . 2. When I update, I read that the identifiers are consistent, but can the reference sequences be changed?. 3. If a new sequence links groups, will the groups be merged or will the new sequence be assigned to one of them. 4. Finally, can a sequence from an already existing cluster be reassigned to another cluster?. Sorry if you already reply to these questions. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/419
https://github.com/soedinglab/MMseqs2/issues/420:98,Availability,redundant,redundant,98,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/420:201,Availability,redundant,redundant,201,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/420:1177,Availability,redundant,redundant,1177,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/420:98,Safety,redund,redundant,98,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/420:201,Safety,redund,redundant,201,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/420:1177,Safety,redund,redundant,1177,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420
https://github.com/soedinglab/MMseqs2/issues/421:107,Availability,error,error,107,"## Expected Behavior; I'm using the option cluster-reassign as you suggest in the issue #397, but I had an error with deleted sequence. ## Steps to Reproduce (for bugs). `mmseqs cluster MY_DB OUTPATH/MY_CLUST OUTPATH/MY_TMP --max-seqs 400 -c 0.8 --comp-bias-corr 1 -s 4 --kmer-per-seq 80 --alignment-mode 2 --min-seq-id 0.8 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647 --cluster-mode 0 --cluster-reassign --threads 36`. ## MMseqs Output (for bugs); https://gist.github.com/jpjarnoux/895db4452f8745445add1833b9b704a6. ## Context; I'm using mmseqs2 in a pipeline. At this step I already cluster my db two times. ## Your Environment; I'm using the latest version 13.git45111",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/421
https://github.com/soedinglab/MMseqs2/issues/421:562,Deployability,pipeline,pipeline,562,"## Expected Behavior; I'm using the option cluster-reassign as you suggest in the issue #397, but I had an error with deleted sequence. ## Steps to Reproduce (for bugs). `mmseqs cluster MY_DB OUTPATH/MY_CLUST OUTPATH/MY_TMP --max-seqs 400 -c 0.8 --comp-bias-corr 1 -s 4 --kmer-per-seq 80 --alignment-mode 2 --min-seq-id 0.8 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647 --cluster-mode 0 --cluster-reassign --threads 36`. ## MMseqs Output (for bugs); https://gist.github.com/jpjarnoux/895db4452f8745445add1833b9b704a6. ## Context; I'm using mmseqs2 in a pipeline. At this step I already cluster my db two times. ## Your Environment; I'm using the latest version 13.git45111",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/421
https://github.com/soedinglab/MMseqs2/issues/422:1866,Availability,Mask,Mask,1866," Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:1884,Availability,Mask,Mask,1884," Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:2086,Availability,Mask,Mask,2086,"0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:3912,Availability,Mask,Masked,3912,"election 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:5181,Availability,Mask,Masked,5181,sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:3623,Energy Efficiency,consumption,consumption,3623,"d orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:1046,Integrability,wrap,wrapped,1046,"r making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:295,Performance,load,loaded,295,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:380,Testability,log,log,380,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/422:3478,Testability,log,log,3478,"mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422
https://github.com/soedinglab/MMseqs2/issues/423:541,Availability,reboot,reboot,541,"## Expected Behavior; I want to run `easy-taxonomy` with UniProt90 database and PacBio HiFi metagenomics data. . ## Current Behavior; I am having a recurring issue when running `easy-taxonomy`; everything appears to be running well until after prefiltering and then it hangs. Checking with `htop` I can see that at least one process running `mmseqs prefilter` has entered D state. There is no way to kill this process and no way to run gdb on this process (gdb also hangs). The analysis takes a long time to reach this point, and we have to reboot the node after this happens - this is the third time trying to run easy-taxonomy with the same outcome. I thought maybe memory was the issue so tried various settings with `--split-memory-limit` with no effect. . This may have something to do with `I/O` and NFS communication, but I really don't know where to start. Any insight would be very much appreciated. In addition to this issue, it would be very helpful to know:; 1) How can we estimate how much temporary disk space is required for an `easy-taxonomy` analysis?; 2) What are the steps involved in an `easy-taxonomy` run? This is absent from the documentation, making it very difficult to track progress across the steps. ## Steps to Reproduce (for bugs); Executed commands:; ```; mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:3085,Availability,Mask,Mask,3085,"ineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:3102,Availability,Mask,Mask,3102,"ineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:3294,Availability,Mask,Mask,3294,"w wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; For",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:6908,Availability,mask,mask,6908,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:6917,Availability,mask,mask-lower-case,6917,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:7471,Availability,Mask,Masked,7471,"h/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278135107 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_0: 0h 3m 5s 974ms; Time for merging to orfs_pref_tmp_0_tmp: 0h 1m 47s ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:8747,Availability,Mask,Masked,8747,YAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278135107 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_0: 0h 3m 5s 974ms; Time for merging to orfs_pref_tmp_0_tmp: 0h 1m 47s 272ms; Process prefiltering step 2 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 13s 495ms; Index table: Masked residues: 106418507; Index table: fill; [=================================================================] 100.00% 16.33M 1m 21s 195ms; Index statistics; Entries: 4548155688; DB size: 35790 MB; Avg k-mer size: 3.553247; Top 10 k-mers; SGQQRIA 34453; GPGGKLL 32743; YTGTGKG 22366; DFEQLPH 19519; NVPGWSP 19488; FRYAFPS 19480; RYYVLGW 19462; WRLDFLN 18626; TVDGDFS 18605; QDWVQIP 18405; Time for index table init: 0h 2m 48s 296ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 2 of 8); Query db start 1 to 310097721; Target db start 16332641 to 32661344; [=================================================================] 100.00% 310.10M 1h 4m 27s 775ms. 28.708682 k-mers per position; 4443 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278309329 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_1: 0h 3m 13s 782ms; Time for merging to orfs_pref_tmp_1_tmp: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:10032,Availability,Mask,Masked,10032,80; RYYVLGW 19462; WRLDFLN 18626; TVDGDFS 18605; QDWVQIP 18405; Time for index table init: 0h 2m 48s 296ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 2 of 8); Query db start 1 to 310097721; Target db start 16332641 to 32661344; [=================================================================] 100.00% 310.10M 1h 4m 27s 775ms. 28.708682 k-mers per position; 4443 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278309329 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_1: 0h 3m 13s 782ms; Time for merging to orfs_pref_tmp_1_tmp: 0h 1m 47s 207ms; Process prefiltering step 3 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.34M 1m 13s 382ms; Index table: Masked residues: 106484916; Index table: fill; [=================================================================] 100.00% 16.34M 1m 20s 150ms; Index statistics; Entries: 4547872238; DB size: 35788 MB; Avg k-mer size: 3.553025; Top 10 k-mers; SGQQRIA 34053; GPGGKLL 32394; GQQVARA 21308; FRYAFPS 19587; RYYVLGW 19548; PGRQYLP 19409; YNLQGGS 19407; TVDGDFS 18829; NKTDFVQ 18539; QDWVQIP 18373; Time for index table init: 0h 2m 46s 626ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 3 of 8); Query db start 1 to 310097721; Target db start 32661345 to 48997356; [=================================================================] 100.00% 310.10M 1h 3m 3s 788ms. 28.708682 k-mers per position; 4443 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278413687 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_2: 0h 3m 14s 443ms; Time for merging to orfs_pref_tmp_2_tmp: 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:11316,Availability,Mask,Masked,11316,409; YNLQGGS 19407; TVDGDFS 18829; NKTDFVQ 18539; QDWVQIP 18373; Time for index table init: 0h 2m 46s 626ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 3 of 8); Query db start 1 to 310097721; Target db start 32661345 to 48997356; [=================================================================] 100.00% 310.10M 1h 3m 3s 788ms. 28.708682 k-mers per position; 4443 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278413687 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_2: 0h 3m 14s 443ms; Time for merging to orfs_pref_tmp_2_tmp: 0h 1m 48s 464ms; Process prefiltering step 4 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 16s 675ms; Index table: Masked residues: 106355830; Index table: fill; [=================================================================] 100.00% 16.33M 1m 17s 119ms; Index statistics; Entries: 4548011751; DB size: 35789 MB; Avg k-mer size: 3.553134; Top 10 k-mers; SGQQRIA 34270; GPGGKLL 32573; GQQVARA 21035; DFEQLPH 19593; NVPGWSP 19580; FRYAFPS 19570; RYYVLGW 19562; RKVFRNK 18762; TVDGDFS 18761; FWVLGHP 18661; Time for index table init: 0h 2m 47s 354ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 4 of 8); Query db start 1 to 310097721; Target db start 48997357 to 65330547; [=================================================================] 100.00% 310.10M 1h 1m 45s 370ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278297281 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_3: 0h 3m 11s 152ms; Time for merging to orfs_pref_tmp_3_tmp: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:12601,Availability,Mask,Masked,12601,70; RYYVLGW 19562; RKVFRNK 18762; TVDGDFS 18761; FWVLGHP 18661; Time for index table init: 0h 2m 47s 354ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 4 of 8); Query db start 1 to 310097721; Target db start 48997357 to 65330547; [=================================================================] 100.00% 310.10M 1h 1m 45s 370ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278297281 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_3: 0h 3m 11s 152ms; Time for merging to orfs_pref_tmp_3_tmp: 0h 1m 48s 854ms; Process prefiltering step 5 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 14s 264ms; Index table: Masked residues: 106722253; Index table: fill; [=================================================================] 100.00% 16.33M 1m 15s 44ms; Index statistics; Entries: 4547626253; DB size: 35787 MB; Avg k-mer size: 3.552833; Top 10 k-mers; SGQQRIA 34251; GPGGKLL 32966; YTGTGKG 22478; DFEQLPH 19529; NVPGWSP 19527; FRYAFPS 19503; RYYVLGW 19456; TVDGDFS 18717; WRLDFLN 18622; FWVLGHP 18572; Time for index table init: 0h 2m 42s 464ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 5 of 8); Query db start 1 to 310097721; Target db start 65330548 to 81663180; [=================================================================] 100.00% 310.10M 1h 2m 18s 463ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278160766 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_4: 0h 3m 18s 43ms; Time for merging to orfs_pref_tmp_4_tmp: 0h,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:13882,Availability,Mask,Masked,13882,19503; RYYVLGW 19456; TVDGDFS 18717; WRLDFLN 18622; FWVLGHP 18572; Time for index table init: 0h 2m 42s 464ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 5 of 8); Query db start 1 to 310097721; Target db start 65330548 to 81663180; [=================================================================] 100.00% 310.10M 1h 2m 18s 463ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278160766 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_4: 0h 3m 18s 43ms; Time for merging to orfs_pref_tmp_4_tmp: 0h 1m 47s 62ms; Process prefiltering step 6 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 13s 42ms; Index table: Masked residues: 106370952; Index table: fill; [=================================================================] 100.00% 16.33M 1m 13s 956ms; Index statistics; Entries: 4547959471; DB size: 35789 MB; Avg k-mer size: 3.553093; Top 10 k-mers; SGQQRIA 33883; GPGGKLL 33158; YTGTGKG 22330; NVPGWSP 19602; FRYAFPS 19594; RYYVLGW 19567; VDRLNTQ 18985; TVDGDFS 18789; WRLDFLN 18705; NKTDFVQ 18554; Time for index table init: 0h 2m 40s 349ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 6 of 8); Query db start 1 to 310097721; Target db start 81663181 to 97995816; [=================================================================] 100.00% 310.10M 1h 1m 41s 875ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278205934 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_5: 0h 3m 23s 720ms; Time for merging to orfs_pref_tmp_5_tmp: 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:15167,Availability,Mask,Masked,15167,67; VDRLNTQ 18985; TVDGDFS 18789; WRLDFLN 18705; NKTDFVQ 18554; Time for index table init: 0h 2m 40s 349ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 6 of 8); Query db start 1 to 310097721; Target db start 81663181 to 97995816; [=================================================================] 100.00% 310.10M 1h 1m 41s 875ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278205934 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_5: 0h 3m 23s 720ms; Time for merging to orfs_pref_tmp_5_tmp: 0h 1m 49s 989ms; Process prefiltering step 7 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 15s 537ms; Index table: Masked residues: 106569634; Index table: fill; [=================================================================] 100.00% 16.33M 1m 13s 128ms; Index statistics; Entries: 4547846969; DB size: 35788 MB; Avg k-mer size: 3.553005; Top 10 k-mers; SGQQRIA 34064; GPGGKLL 32797; GQQVARA 21296; FRYAFPS 19463; RYYVLGW 19425; YNLQGGS 19333; DVDYFPL 18984; VDRLNTQ 18855; TVDGDFS 18644; NKTDFVQ 18455; Time for index table init: 0h 2m 41s 943ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 7 of 8); Query db start 1 to 310097721; Target db start 97995817 to 114328449; [=================================================================] 100.00% 310.10M 1h 0m 37s 208ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278139803 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_6: 0h 3m 11s 74ms; Time for merging to orfs_pref_tmp_6_tmp: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:16452,Availability,Mask,Masked,16452,33; DVDYFPL 18984; VDRLNTQ 18855; TVDGDFS 18644; NKTDFVQ 18455; Time for index table init: 0h 2m 41s 943ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 7 of 8); Query db start 1 to 310097721; Target db start 97995817 to 114328449; [=================================================================] 100.00% 310.10M 1h 0m 37s 208ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278139803 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_6: 0h 3m 11s 74ms; Time for merging to orfs_pref_tmp_6_tmp: 0h 1m 47s 111ms; Process prefiltering step 8 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 13s 719ms; Index table: Masked residues: 106659473; Index table: fill; [=================================================================] 100.00% 16.33M 1m 12s 49ms; Index statistics; Entries: 4547494345; DB size: 35786 MB; Avg k-mer size: 3.552730; Top 10 k-mers; SGQQRIA 34270; GPGGKLL 32617; YTGTGKG 22607; NVPGWSP 19485; RYYVLGW 19470; YNLQGGS 19354; DVDYFPL 18925; VDRLNTQ 18841; TVDGDFS 18621; NKTDFVQ 18404; Time for index table init: 0h 2m 38s 938ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 8 of 8); Query db start 1 to 310097721; Target db start 114328450 to 130661074; [=================================================================] 100.00% 310.10M 1h 1m 5s 550ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278266009 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:21643,Availability,mask,mask,21643,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:21652,Availability,mask,mask-lower-case,21652,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:22213,Availability,Mask,Masked,22213,"9442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 2m 26s 298ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 55235334; Target db start 1 to 16332640; [=================================================================] 100.00% 55.24M 40m 8s 213ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 461890 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 29s 906ms; Time for merging to pref_0_tmp_0_tmp: 0h 1m 20s 798ms; Proce",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:23476,Availability,Mask,Masked,23476, 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 2m 26s 298ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 55235334; Target db start 1 to 16332640; [=================================================================] 100.00% 55.24M 40m 8s 213ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 461890 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 29s 906ms; Time for merging to pref_0_tmp_0_tmp: 0h 1m 20s 798ms; Process prefiltering step 2 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 5s 529ms; Index table: Masked residues: 106418507; Index table: fill; [=================================================================] 100.00% 16.33M 1m 20s 880ms; Index statistics; Entries: 4548155688; DB size: 35790 MB; Avg k-mer size: 3.553247; Top 10 k-mers; SGQQRIA 34453; GPGGKLL 32743; YTGTGKG 22366; DFEQLPH 19519; NVPGWSP 19488; FRYAFPS 19480; RYYVLGW 19462; WRLDFLN 18626; TVDGDFS 18605; QDWVQIP 18405; Time for index table init: 0h 2m 39s 246ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 2 of 8); Query db start 1 to 55235334; Target db start 16332641 to 32661344; [=================================================================] 100.00% 55.24M 42m 6s 954ms. 33.753670 k-mers per position; 12991 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 424069 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 31s 718ms; Time for merging to pref_0_tmp_1_tmp: 0h 1m 24s 16,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:24749,Availability,Mask,Masked,24749, FRYAFPS 19480; RYYVLGW 19462; WRLDFLN 18626; TVDGDFS 18605; QDWVQIP 18405; Time for index table init: 0h 2m 39s 246ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 2 of 8); Query db start 1 to 55235334; Target db start 16332641 to 32661344; [=================================================================] 100.00% 55.24M 42m 6s 954ms. 33.753670 k-mers per position; 12991 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 424069 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 31s 718ms; Time for merging to pref_0_tmp_1_tmp: 0h 1m 24s 164ms; Process prefiltering step 3 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.34M 1m 7s 263ms; Index table: Masked residues: 106484916; Index table: fill; [=================================================================] 100.00% 16.34M 1m 22s 721ms; Index statistics; Entries: 4547872238; DB size: 35788 MB; Avg k-mer size: 3.553025; Top 10 k-mers; SGQQRIA 34053; GPGGKLL 32394; GQQVARA 21308; FRYAFPS 19587; RYYVLGW 19548; PGRQYLP 19409; YNLQGGS 19407; TVDGDFS 18829; NKTDFVQ 18539; QDWVQIP 18373; Time for index table init: 0h 2m 42s 735ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 3 of 8); Query db start 1 to 55235334; Target db start 32661345 to 48997356; [=================================================================] 100.00% 55.24M 43m 13s 646ms. 33.753670 k-mers per position; 12990 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 489929 sequences with 0 size result lists; Time for merging to pref_0_tmp_2: 0h 0m 35s 491ms; Time for merging to pref_0_tmp_2_tmp: 0h 1m 25s 3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:26021,Availability,Mask,Masked,26021,; PGRQYLP 19409; YNLQGGS 19407; TVDGDFS 18829; NKTDFVQ 18539; QDWVQIP 18373; Time for index table init: 0h 2m 42s 735ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 3 of 8); Query db start 1 to 55235334; Target db start 32661345 to 48997356; [=================================================================] 100.00% 55.24M 43m 13s 646ms. 33.753670 k-mers per position; 12990 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 489929 sequences with 0 size result lists; Time for merging to pref_0_tmp_2: 0h 0m 35s 491ms; Time for merging to pref_0_tmp_2_tmp: 0h 1m 25s 3ms; Process prefiltering step 4 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 5s 856ms; Index table: Masked residues: 106355830; Index table: fill; [=================================================================] 100.00% 16.33M 1m 22s 801ms; Index statistics; Entries: 4548011751; DB size: 35789 MB; Avg k-mer size: 3.553134; Top 10 k-mers; SGQQRIA 34270; GPGGKLL 32573; GQQVARA 21035; DFEQLPH 19593; NVPGWSP 19580; FRYAFPS 19570; RYYVLGW 19562; RKVFRNK 18762; TVDGDFS 18761; FWVLGHP 18661; Time for index table init: 0h 2m 41s 713ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 4 of 8); Query db start 1 to 55235334; Target db start 48997357 to 65330547; [=================================================================] 100.00% 55.24M 42m 31s 658ms. 33.753670 k-mers per position; 12984 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 502587 sequences with 0 size result lists; Time for merging to pref_0_tmp_3: 0h 0m 30s 940ms; Time for merging to pref_0_tmp_3_tmp: 0h 1m 25s 3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:27296,Availability,Mask,Masked,27296,RYAFPS 19570; RYYVLGW 19562; RKVFRNK 18762; TVDGDFS 18761; FWVLGHP 18661; Time for index table init: 0h 2m 41s 713ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 4 of 8); Query db start 1 to 55235334; Target db start 48997357 to 65330547; [=================================================================] 100.00% 55.24M 42m 31s 658ms. 33.753670 k-mers per position; 12984 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 502587 sequences with 0 size result lists; Time for merging to pref_0_tmp_3: 0h 0m 30s 940ms; Time for merging to pref_0_tmp_3_tmp: 0h 1m 25s 300ms; Process prefiltering step 5 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 15s 206ms; Index table: Masked residues: 106722253; Index table: fill; [=================================================================] 100.00% 16.33M 1m 23s 167ms; Index statistics; Entries: 4547626253; DB size: 35787 MB; Avg k-mer size: 3.552833; Top 10 k-mers; SGQQRIA 34251; GPGGKLL 32966; YTGTGKG 22478; DFEQLPH 19529; NVPGWSP 19527; FRYAFPS 19503; RYYVLGW 19456; TVDGDFS 18717; WRLDFLN 18622; FWVLGHP 18572; Time for index table init: 0h 2m 51s 702ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 5 of 8); Query db start 1 to 55235334; Target db start 65330548 to 81663180; [=================================================================] 100.00% 55.24M 42m 44s 7ms. 33.753670 k-mers per position; 12986 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 445034 sequences with 0 size result lists; Time for merging to pref_0_tmp_4: 0h 0m 35s 155ms; Time for merging to pref_0_tmp_4_tmp: 0h 1m 24s 13,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:28568,Availability,Mask,Masked,28568,; FRYAFPS 19503; RYYVLGW 19456; TVDGDFS 18717; WRLDFLN 18622; FWVLGHP 18572; Time for index table init: 0h 2m 51s 702ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 5 of 8); Query db start 1 to 55235334; Target db start 65330548 to 81663180; [=================================================================] 100.00% 55.24M 42m 44s 7ms. 33.753670 k-mers per position; 12986 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 445034 sequences with 0 size result lists; Time for merging to pref_0_tmp_4: 0h 0m 35s 155ms; Time for merging to pref_0_tmp_4_tmp: 0h 1m 24s 136ms; Process prefiltering step 6 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 5s 290ms; Index table: Masked residues: 106370952; Index table: fill; [=================================================================] 100.00% 16.33M 1m 25s 363ms; Index statistics; Entries: 4547959471; DB size: 35789 MB; Avg k-mer size: 3.553093; Top 10 k-mers; SGQQRIA 33883; GPGGKLL 33158; YTGTGKG 22330; NVPGWSP 19602; FRYAFPS 19594; RYYVLGW 19567; VDRLNTQ 18985; TVDGDFS 18789; WRLDFLN 18705; NKTDFVQ 18554; Time for index table init: 0h 2m 43s 785ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 6 of 8); Query db start 1 to 55235334; Target db start 81663181 to 97995816; [=================================================================] 100.00% 55.24M 43m 3s 517ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 465506 sequences with 0 size result lists; Time for merging to pref_0_tmp_5: 0h 0m 31s 264ms; Time for merging to pref_0_tmp_5_tmp: 0h 1m 24s 45,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:29841,Availability,Mask,Masked,29841, RYYVLGW 19567; VDRLNTQ 18985; TVDGDFS 18789; WRLDFLN 18705; NKTDFVQ 18554; Time for index table init: 0h 2m 43s 785ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 6 of 8); Query db start 1 to 55235334; Target db start 81663181 to 97995816; [=================================================================] 100.00% 55.24M 43m 3s 517ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 465506 sequences with 0 size result lists; Time for merging to pref_0_tmp_5: 0h 0m 31s 264ms; Time for merging to pref_0_tmp_5_tmp: 0h 1m 24s 457ms; Process prefiltering step 7 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 7s 207ms; Index table: Masked residues: 106569634; Index table: fill; [=================================================================] 100.00% 16.33M 1m 20s 460ms; Index statistics; Entries: 4547846969; DB size: 35788 MB; Avg k-mer size: 3.553005; Top 10 k-mers; SGQQRIA 34064; GPGGKLL 32797; GQQVARA 21296; FRYAFPS 19463; RYYVLGW 19425; YNLQGGS 19333; DVDYFPL 18984; VDRLNTQ 18855; TVDGDFS 18644; NKTDFVQ 18455; Time for index table init: 0h 2m 40s 976ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 7 of 8); Query db start 1 to 55235334; Target db start 97995817 to 114328449; [=================================================================] 100.00% 55.24M 42m 6s 113ms. 33.753670 k-mers per position; 12986 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 492915 sequences with 0 size result lists; Time for merging to pref_0_tmp_6: 0h 0m 32s 387ms; Time for merging to pref_0_tmp_6_tmp: 0h 1m 27s 4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:31115,Availability,Mask,Masked,31115,YNLQGGS 19333; DVDYFPL 18984; VDRLNTQ 18855; TVDGDFS 18644; NKTDFVQ 18455; Time for index table init: 0h 2m 40s 976ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 7 of 8); Query db start 1 to 55235334; Target db start 97995817 to 114328449; [=================================================================] 100.00% 55.24M 42m 6s 113ms. 33.753670 k-mers per position; 12986 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 492915 sequences with 0 size result lists; Time for merging to pref_0_tmp_6: 0h 0m 32s 387ms; Time for merging to pref_0_tmp_6_tmp: 0h 1m 27s 464ms; Process prefiltering step 8 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 6s 351ms; Index table: Masked residues: 106659473; Index table: fill; [=================================================================] 100.00% 16.33M 1m 20s 124ms; Index statistics; Entries: 4547494345; DB size: 35786 MB; Avg k-mer size: 3.552730; Top 10 k-mers; SGQQRIA 34270; GPGGKLL 32617; YTGTGKG 22607; NVPGWSP 19485; RYYVLGW 19470; YNLQGGS 19354; DVDYFPL 18925; VDRLNTQ 18841; TVDGDFS 18621; NKTDFVQ 18404; Time for index table init: 0h 2m 39s 593ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 8 of 8); Query db start 1 to 55235334; Target db start 114328450 to 130661074; [=================================================================] 100.00% 55.24M 42m 14s 235ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 472779 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:41586,Deployability,install,installation,41586,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:7181,Energy Efficiency,consumption,consumption,7181,"m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:21923,Energy Efficiency,consumption,consumption,21923,"30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 2m 26s 298ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 55235334; Target db start 1 to 16332640; [=================================================================] 100.00% 55.24M 40m 8s 213ms. 33.753670 k-mers per position; 12988 DB matches per sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:2299,Integrability,wrap,wrapped,2299," mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:18287,Integrability,wrap,wrapped-scoring,18287,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35051,Modifiability,config,config,35051,"read-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35206,Modifiability,config,config,35206,"ls for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<opti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35439,Modifiability,config,config,35439,"so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35656,Modifiability,config,config,35656,"/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35889,Modifiability,config,config,35889,"dl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:36116,Modifiability,config,config,36116,"ck_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:7005,Performance,load,load-mode,7005,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:18441,Performance,load,load-mode,18441,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:21741,Performance,load,load-mode,21741,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:32852,Performance,Load,Loaded,32852,e; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 472779 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Load,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33046,Performance,Load,Loaded,33046,Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33208,Performance,Load,Loaded,33208," merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33375,Performance,Load,Loaded,33375,"21-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33575,Performance,Load,Loaded,33575,"ttaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33699,Performance,Load,Loaded,33699,"/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:33864,Performance,Load,Loaded,33864,"rtik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:34183,Performance,Load,Loaded,34183,".done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/lib",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:34347,Performance,Load,Loaded,34347,"so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctn",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:34514,Performance,Load,Loaded,34514,"lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:34685,Performance,Load,Loaded,34685,"oaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:34846,Performance,Load,Loaded,34846,".; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-cond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:35973,Performance,optimiz,optimized,35973,"10729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:36191,Performance,optimiz,optimized,36191,"g/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.12; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.13; -rw-r--r-- 1 dportik Domain Users 14G Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:42019,Performance,cache,cache,42019,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:42035,Performance,cache,cache,42035,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:42050,Performance,cache,cache,42050,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:42066,Performance,cache,cache,42066,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/423:1663,Testability,Log,Log,1663,"o tried various settings with `--split-memory-limit` with no effect. . This may have something to do with `I/O` and NFS communication, but I really don't know where to start. Any insight would be very much appreciated. In addition to this issue, it would be very helpful to know:; 1) How can we estimate how much temporary disk space is required for an `easy-taxonomy` analysis?; 2) What are the steps involved in an `easy-taxonomy` run? This is absent from the documentation, making it very difficult to track progress across the steps. ## Steps to Reproduce (for bugs); Executed commands:; ```; mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423
https://github.com/soedinglab/MMseqs2/issues/426:920,Availability,mask,mask,920,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426
https://github.com/soedinglab/MMseqs2/issues/426:929,Availability,mask,mask-lower-case,929,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426
https://github.com/soedinglab/MMseqs2/issues/426:1676,Deployability,release,release,1676,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426
https://github.com/soedinglab/MMseqs2/issues/426:1172,Energy Efficiency,schedul,scheduler,1172,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426
https://github.com/soedinglab/MMseqs2/issues/427:69,Availability,error,error,69,"## Expected Behavior; When setting --split-memory-limit to 250G, got error said ""Error in argument --split-memory-limit"". ; ## Current Behavior; If setting it to 250, the error was gone. But got ""Not enough memory to keep dbreader/write in memory!""; If setting it to 25000, there would be no errors. But I'm not sure what unit it takes. (25000B? 25000M? 25000G?); ## Steps to Reproduce (for bugs); The code I'm using now is; mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 25000. ## Your Environment; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1. Thanks for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427
https://github.com/soedinglab/MMseqs2/issues/427:81,Availability,Error,Error,81,"## Expected Behavior; When setting --split-memory-limit to 250G, got error said ""Error in argument --split-memory-limit"". ; ## Current Behavior; If setting it to 250, the error was gone. But got ""Not enough memory to keep dbreader/write in memory!""; If setting it to 25000, there would be no errors. But I'm not sure what unit it takes. (25000B? 25000M? 25000G?); ## Steps to Reproduce (for bugs); The code I'm using now is; mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 25000. ## Your Environment; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1. Thanks for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427
https://github.com/soedinglab/MMseqs2/issues/427:171,Availability,error,error,171,"## Expected Behavior; When setting --split-memory-limit to 250G, got error said ""Error in argument --split-memory-limit"". ; ## Current Behavior; If setting it to 250, the error was gone. But got ""Not enough memory to keep dbreader/write in memory!""; If setting it to 25000, there would be no errors. But I'm not sure what unit it takes. (25000B? 25000M? 25000G?); ## Steps to Reproduce (for bugs); The code I'm using now is; mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 25000. ## Your Environment; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1. Thanks for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427
https://github.com/soedinglab/MMseqs2/issues/427:292,Availability,error,errors,292,"## Expected Behavior; When setting --split-memory-limit to 250G, got error said ""Error in argument --split-memory-limit"". ; ## Current Behavior; If setting it to 250, the error was gone. But got ""Not enough memory to keep dbreader/write in memory!""; If setting it to 25000, there would be no errors. But I'm not sure what unit it takes. (25000B? 25000M? 25000G?); ## Steps to Reproduce (for bugs); The code I'm using now is; mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 25000. ## Your Environment; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1. Thanks for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427
https://github.com/soedinglab/MMseqs2/issues/429:220,Availability,error,error,220,"After clustering, I needed to convert the files back into FASTA files for future uses. However, when I use the commands: ; mmseqs createseqfiledb DB clu clu_seq; mmseqs result2flat DB DB clu_seq clu_seq.fasta. I get the error that my DB file is a Generic file type instead of a Amino Acid file type. I converted my original database file from FASTA to text using this command:; mmseqs createdb examples/DB.fasta DB. I attached my original FASTA database as well as resulting file after the previous command. I appreciate any help for solving this error!; [Archive.zip](https://github.com/soedinglab/MMseqs2/files/6223963/Archive.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429
https://github.com/soedinglab/MMseqs2/issues/429:547,Availability,error,error,547,"After clustering, I needed to convert the files back into FASTA files for future uses. However, when I use the commands: ; mmseqs createseqfiledb DB clu clu_seq; mmseqs result2flat DB DB clu_seq clu_seq.fasta. I get the error that my DB file is a Generic file type instead of a Amino Acid file type. I converted my original database file from FASTA to text using this command:; mmseqs createdb examples/DB.fasta DB. I attached my original FASTA database as well as resulting file after the previous command. I appreciate any help for solving this error!; [Archive.zip](https://github.com/soedinglab/MMseqs2/files/6223963/Archive.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429
https://github.com/soedinglab/MMseqs2/issues/431:473,Performance,Load,Loading,473,"##Command; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## Current Behavior; Create directory tmp; createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file ../../taxdb/nr.fna.taxidmapping. MMseqs Version: 5daca424b162cc5fdf0b9cd151aebed86975cbf6; NCBI tax dump directory taxonomy/; Taxonomy mapping file ../../taxdb/nr.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 12; Verbosity 3. Loading nodes file ... Done, got 2317712 nodes; Loading merged file ... Done, added 62177 merged nodes.; Loading names file ... Done; Init RMQ ...Done; tmp/createindex.sh: line 102: 25801 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TAXDBNAME}_mapping""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431
https://github.com/soedinglab/MMseqs2/issues/431:521,Performance,Load,Loading,521,"##Command; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## Current Behavior; Create directory tmp; createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file ../../taxdb/nr.fna.taxidmapping. MMseqs Version: 5daca424b162cc5fdf0b9cd151aebed86975cbf6; NCBI tax dump directory taxonomy/; Taxonomy mapping file ../../taxdb/nr.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 12; Verbosity 3. Loading nodes file ... Done, got 2317712 nodes; Loading merged file ... Done, added 62177 merged nodes.; Loading names file ... Done; Init RMQ ...Done; tmp/createindex.sh: line 102: 25801 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TAXDBNAME}_mapping""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431
https://github.com/soedinglab/MMseqs2/issues/431:578,Performance,Load,Loading,578,"##Command; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## Current Behavior; Create directory tmp; createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file ../../taxdb/nr.fna.taxidmapping. MMseqs Version: 5daca424b162cc5fdf0b9cd151aebed86975cbf6; NCBI tax dump directory taxonomy/; Taxonomy mapping file ../../taxdb/nr.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 12; Verbosity 3. Loading nodes file ... Done, got 2317712 nodes; Loading merged file ... Done, added 62177 merged nodes.; Loading names file ... Done; Init RMQ ...Done; tmp/createindex.sh: line 102: 25801 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TAXDBNAME}_mapping""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431
https://github.com/soedinglab/MMseqs2/issues/432:1043,Availability,down,downstream,1043,"## Expected Behavior. I expect `--split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432
https://github.com/soedinglab/MMseqs2/issues/432:1073,Availability,fault,fault,1073,"-split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-forge; ```. OS: `Ubuntu 18.04.5`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432
https://github.com/soedinglab/MMseqs2/issues/432:1079,Availability,error,errors,1079,"-split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-forge; ```. OS: `Ubuntu 18.04.5`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432
https://github.com/soedinglab/MMseqs2/issues/432:845,Deployability,Pipeline,Pipeline,845,"## Expected Behavior. I expect `--split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432
https://github.com/soedinglab/MMseqs2/issues/432:1411,Security,certificate,certificates,1411,"-split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-forge; ```. OS: `Ubuntu 18.04.5`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432
https://github.com/soedinglab/MMseqs2/issues/433:198,Availability,error,error,198,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:636,Availability,Mask,Masked,636,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:2376,Availability,Error,Error,2376,"hm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:2399,Availability,Error,Error,2399,"hm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:2425,Availability,Error,Error,2425,"hm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:2447,Availability,Error,Error,2447,"hm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:386,Energy Efficiency,consumption,consumption,386,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:1748,Integrability,wrap,wrapped-scoring,1748,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:2089,Modifiability,extend,extend,2089,"16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:1946,Performance,load,load-mode,1946,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/433:241,Testability,log,log,241,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433
https://github.com/soedinglab/MMseqs2/issues/435:30,Deployability,release,release,30,"It looks like with the newest release that the default output from mmseqs easy-taxonomy has changed a bit. There are now 4 additional numeric columns that were not there by default in prior releases. I assume this has something to do with the new contig annotation settings. Can you let me know what the column headers are? Specifically for columns 5-8 in the example below (the 5, 1, 1, 1.000)?. 207026	2420051	species	Yasminevirus sp. GU-2018	5	1	1	1.000	Viruses;unknown;unknown;unknown;unknown;unknown;Yasminevirus sp. GU-2018	d_Viruses;-_unclassified viruses;s_Yasminevirus sp. GU-2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/435
https://github.com/soedinglab/MMseqs2/issues/435:190,Deployability,release,releases,190,"It looks like with the newest release that the default output from mmseqs easy-taxonomy has changed a bit. There are now 4 additional numeric columns that were not there by default in prior releases. I assume this has something to do with the new contig annotation settings. Can you let me know what the column headers are? Specifically for columns 5-8 in the example below (the 5, 1, 1, 1.000)?. 207026	2420051	species	Yasminevirus sp. GU-2018	5	1	1	1.000	Viruses;unknown;unknown;unknown;unknown;unknown;Yasminevirus sp. GU-2018	d_Viruses;-_unclassified viruses;s_Yasminevirus sp. GU-2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/435
https://github.com/soedinglab/MMseqs2/issues/437:559,Availability,Error,Error,559,"The documentation says in the [""Convert an external MSA into a profile""](https://github.com/soedinglab/mmseqs2/wiki#convert-an-external-msa-into-a-profile) that . > It is possible to use MSAs in FASTA, A3M and CA3M format. . But when I try using an MSA in fasta format to build a profile database and search with it, for example; ```; mmseqs convertmsa myMSA.fasta msaDb; mmseqs msa2profile msaDb profileDB; mmseqs search profileDB targetDB hitDB tmp --start-sens 1 --sens-steps 3 -s 7; ```; I get ; ```; Input tmp/17085414453924316708/pref_0 does not exist; Error: Alignment died; ```; Looking at `mmseqs convertmsa -h`, it says `usage: mmseqs convertmsa <i:msaFile.sto[.gz]> <o:msaDB> [options]`. I tried using a stockholm formatted msa and did the same the above, and was able to search with no errors. Is the documentation wrong about FASTA MSAs being able to be used, or is there some issue? Or perhaps I am mistaken by what the documentation is trying to say.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/437
https://github.com/soedinglab/MMseqs2/issues/437:798,Availability,error,errors,798,"The documentation says in the [""Convert an external MSA into a profile""](https://github.com/soedinglab/mmseqs2/wiki#convert-an-external-msa-into-a-profile) that . > It is possible to use MSAs in FASTA, A3M and CA3M format. . But when I try using an MSA in fasta format to build a profile database and search with it, for example; ```; mmseqs convertmsa myMSA.fasta msaDb; mmseqs msa2profile msaDb profileDB; mmseqs search profileDB targetDB hitDB tmp --start-sens 1 --sens-steps 3 -s 7; ```; I get ; ```; Input tmp/17085414453924316708/pref_0 does not exist; Error: Alignment died; ```; Looking at `mmseqs convertmsa -h`, it says `usage: mmseqs convertmsa <i:msaFile.sto[.gz]> <o:msaDB> [options]`. I tried using a stockholm formatted msa and did the same the above, and was able to search with no errors. Is the documentation wrong about FASTA MSAs being able to be used, or is there some issue? Or perhaps I am mistaken by what the documentation is trying to say.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/437
https://github.com/soedinglab/MMseqs2/issues/438:451,Availability,down,downloaded,451,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:3195,Availability,Mask,Mask,3195,"d 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:3213,Availability,Mask,Mask,3213,"d 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:3415,Availability,Mask,Mask,3415,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, usin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:6705,Availability,mask,mask,6705,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:6714,Availability,mask,mask-lower-case,6714,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:7183,Availability,fault,fault,7183,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:7206,Availability,Error,Error,7206,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:7229,Availability,Error,Error,7229,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:7254,Availability,Error,Error,7254,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:350,Deployability,UPDATE,UPDATE,350,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:480,Deployability,UPDATE,UPDATE,480,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:535,Deployability,UPDATE,UPDATE,535,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:794,Deployability,Release,Release,794,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:6987,Energy Efficiency,consumption,consumption,6987,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:2398,Integrability,wrap,wrapped,2398,"rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/438:6803,Performance,load,load-mode,6803,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438
https://github.com/soedinglab/MMseqs2/issues/440:290,Availability,avail,available,290,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:324,Availability,down,download,324,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:724,Availability,avail,avail,724,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:898,Availability,error,error,898,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:1465,Availability,error,error,1465,"/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile pipeline. ```BASH; # make make temp folders; mkdir vog; mkdir hhmake; mkdir hhmake/vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz.md5; md5sum -c vog.raw_algs.tar.gz.md5; tar xzf vog.raw_algs.tar.gz; cd ..; ; for f in vog/*.msa;; do; hhmake -M 50 -i $f -o hhmake/$f.hhm; done; ffindex_build vog/mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:263,Deployability,release,release,263,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:2000,Deployability,pipeline,pipeline,2000,"port it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile pipeline. ```BASH; # make make temp folders; mkdir vog; mkdir hhmake; mkdir hhmake/vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz.md5; md5sum -c vog.raw_algs.tar.gz.md5; tar xzf vog.raw_algs.tar.gz; cd ..; ; for f in vog/*.msa;; do; hhmake -M 50 -i $f -o hhmake/$f.hhm; done; ffindex_build vog/mmseqs/hmm vog/mmseqs/hmm.index hhmake/vog/; mmseqs convertprofiledb vog/mmseqs/hmm vog/mmseqs/profile; ```; However, when using a search command against vog/mmseqs/profile only returns individual genes not profiles. ## Environment. MMseqs Version: 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; MMseqs source: conda install -c conda-forge -c bioconda mmseqs2; OS: NAME=CentOS Linux 7; CPUs: Intel(R) Xeon(R) Gold 5118; Threads/core: 96",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/440:2739,Deployability,install,install,2739,"port it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile pipeline. ```BASH; # make make temp folders; mkdir vog; mkdir hhmake; mkdir hhmake/vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz.md5; md5sum -c vog.raw_algs.tar.gz.md5; tar xzf vog.raw_algs.tar.gz; cd ..; ; for f in vog/*.msa;; do; hhmake -M 50 -i $f -o hhmake/$f.hhm; done; ffindex_build vog/mmseqs/hmm vog/mmseqs/hmm.index hhmake/vog/; mmseqs convertprofiledb vog/mmseqs/hmm vog/mmseqs/profile; ```; However, when using a search command against vog/mmseqs/profile only returns individual genes not profiles. ## Environment. MMseqs Version: 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; MMseqs source: conda install -c conda-forge -c bioconda mmseqs2; OS: NAME=CentOS Linux 7; CPUs: Intel(R) Xeon(R) Gold 5118; Threads/core: 96",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440
https://github.com/soedinglab/MMseqs2/issues/442:182,Integrability,message,message,182,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442
https://github.com/soedinglab/MMseqs2/issues/442:65,Safety,redund,redundancy,65,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442
https://github.com/soedinglab/MMseqs2/issues/444:702,Availability,avail,available,702,I would like to use `mmseqs taxonomy` to detect contaminations within a transcriptome assembly. The transcriptome is from a metazoan organism. Contaminations are mainly bacterial. I would like to use NR and NT databases for a start (and I successfully run first analyses with mmseqs2). But I can also build my own database.; EDIT: Level of contamination is quite high and contamination is taxonomically quite diverse. Otherwise it would be rather easy. First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444
https://github.com/soedinglab/MMseqs2/issues/444:41,Safety,detect,detect,41,I would like to use `mmseqs taxonomy` to detect contaminations within a transcriptome assembly. The transcriptome is from a metazoan organism. Contaminations are mainly bacterial. I would like to use NR and NT databases for a start (and I successfully run first analyses with mmseqs2). But I can also build my own database.; EDIT: Level of contamination is quite high and contamination is taxonomically quite diverse. Otherwise it would be rather easy. First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444
https://github.com/soedinglab/MMseqs2/issues/446:121,Availability,error,error,121,"Hi,. I'm trying to create a database before running a cluster analysis, however I'm getting a ""Fasta entry 0 is invalid"" error. ; I have tried creating databases in another fasta files and there's no problem whatsoever. . I'm using:. mmseqs createdb sequence.fasta sequenceDB. The database I'm having issues with contains over 5 millon sequences. . I will greatly appreciate any help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446
https://github.com/soedinglab/MMseqs2/issues/447:66,Availability,error,error,66,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:209,Availability,error,error,209,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:349,Availability,fault,fault,349,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:568,Availability,Error,Error,568,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:1101,Availability,error,error,1101,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:1151,Availability,down,downloaded,1151,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:1373,Availability,Down,Downloaded,1373,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:22,Performance,Perform,Perform,22,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:934,Performance,perform,performing,934,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:1124,Performance,perform,performed,1124,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/447:215,Testability,log,log,215,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447
https://github.com/soedinglab/MMseqs2/issues/448:2981,Availability,Mask,Mask,2981,"atrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:2999,Availability,Mask,Mask,2999,"atrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:3201,Availability,Mask,Mask,3201,"mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:7117,Availability,mask,mask,7117,"==] 2 0s 1ms; Time for merging to query_seqs_h: 0h 0m 0s 3ms; Time for merging to query_seqs: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 18ms; splitsequence tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity thr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:7126,Availability,mask,mask-lower-case,7126,"==] 2 0s 1ms; Time for merging to query_seqs_h: 0h 0m 0s 3ms; Time for merging to query_seqs: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 18ms; splitsequence tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity thr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:7575,Availability,Mask,Masked,7575,"ing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for mergi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:7345,Energy Efficiency,consumption,consumption,7345,"ing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for mergi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:2097,Integrability,wrap,wrapped,2097,"s:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:8984,Integrability,wrap,wrapped-scoring,8984,"AAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:9346,Modifiability,extend,extend,9346,"s produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:11911,Modifiability,extend,extend,11911,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:7215,Performance,load,load-mode,7215,"==] 2 0s 1ms; Time for merging to query_seqs_h: 0h 0m 0s 3ms; Time for merging to query_seqs: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 18ms; splitsequence tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity thr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:9203,Performance,load,load-mode,9203,"tion (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:10718,Performance,load,load-mode,10718,base size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069750715556969/query tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:11949,Performance,load,load-mode,11949,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:820,Testability,test,test,820,## Expected Behavior; Count degenerate nucleotide base (X or N) as match to any other nucleotide. ## Current Behavior; X bases are counted as a mismatch even with a custom substitution matrix that counts X as a match with score 2 to all bases. ## Steps to Reproduce (for bugs); 1. Copy matrix from nucleotide.out to nucleotide.edit.mat. Edit to replace -3 scores for X with 2 and run `MMseqs2/util/format_substitution_matrix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.ou,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:828,Testability,test,test,828,## Expected Behavior; Count degenerate nucleotide base (X or N) as match to any other nucleotide. ## Current Behavior; X bases are counted as a mismatch even with a custom substitution matrix that counts X as a match with score 2 to all bases. ## Steps to Reproduce (for bugs); 1. Copy matrix from nucleotide.out to nucleotide.edit.mat. Edit to replace -3 scores for X with 2 and run `MMseqs2/util/format_substitution_matrix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.ou,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:836,Testability,test,test,836,## Expected Behavior; Count degenerate nucleotide base (X or N) as match to any other nucleotide. ## Current Behavior; X bases are counted as a mismatch even with a custom substitution matrix that counts X as a match with score 2 to all bases. ## Steps to Reproduce (for bugs); 1. Copy matrix from nucleotide.out to nucleotide.edit.mat. Edit to replace -3 scores for X with 2 and run `MMseqs2/util/format_substitution_matrix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.ou,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1430,Testability,test,test,1430,"ix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1438,Testability,test,test,1438,".edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1446,Testability,test,test,1446,"t > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1791,Testability,test,test,1791,"replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1799,Testability,test,test,1799,"`mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:1807,Testability,test,test,1807,"easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	21",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:4503,Testability,test,test,4503,"n length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:4816,Testability,test,test,4816,"f numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp-files 1 . splitsequence tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:11497,Testability,test,test,11497,"50715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:11657,Testability,test,test,11657,"1978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Contex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/448:12110,Testability,test,test,12110,"/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concerned about ""N"" bases, but have edited my sequence for ""X"" because that's what the mmseqs sub matrix uses by default. If there's a better way to not count N or X mismatches than supplying a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448
https://github.com/soedinglab/MMseqs2/issues/449:664,Deployability,Install,Install,664,"## Expected Behavior. [Peptide_seqs.fasta.txt](https://github.com/soedinglab/MMseqs2/files/6430389/Peptide_seqs.fasta.txt); I tried to use the attached fasta file to do the easy-cluster using the following command:; mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## Current Behavior; Alignment step died; Linclust died; Search died. ## Steps to Reproduce (for bugs); mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## MMseqs Output (for bugs); [test_MMseqs2.out.txt](https://github.com/soedinglab/MMseqs2/files/6430406/test_MMseqs2.out.txt). ## Your Environment; Install MMseqs2 on an HPC with conda install -c conda-forge -c bioconda mmseqs2, which was successful. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449
https://github.com/soedinglab/MMseqs2/issues/449:701,Deployability,install,install,701,"## Expected Behavior. [Peptide_seqs.fasta.txt](https://github.com/soedinglab/MMseqs2/files/6430389/Peptide_seqs.fasta.txt); I tried to use the attached fasta file to do the easy-cluster using the following command:; mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## Current Behavior; Alignment step died; Linclust died; Search died. ## Steps to Reproduce (for bugs); mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## MMseqs Output (for bugs); [test_MMseqs2.out.txt](https://github.com/soedinglab/MMseqs2/files/6430406/test_MMseqs2.out.txt). ## Your Environment; Install MMseqs2 on an HPC with conda install -c conda-forge -c bioconda mmseqs2, which was successful. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449
https://github.com/soedinglab/MMseqs2/issues/450:1376,Deployability,pipeline,pipelines,1376,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450
https://github.com/soedinglab/MMseqs2/issues/450:982,Integrability,wrap,wrappers,982,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450
https://github.com/soedinglab/MMseqs2/issues/450:1400,Modifiability,flexible,flexible,1400,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450
https://github.com/soedinglab/MMseqs2/issues/450:1302,Security,access,accessible,1302,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450
https://github.com/soedinglab/MMseqs2/issues/450:210,Usability,simpl,simplify,210,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450
https://github.com/soedinglab/MMseqs2/issues/451:24,Modifiability,enhance,enhancement,24,"Hi,. This is more of an enhancement rather than an issue needing fixing, but it would be very helpful for newer users. ## Expected Behavior; I am using mmseq to search for short sequences against some reference database; In Blast, I just need to use -task ""blastn-short"", and it sets default params for me, and I can go explore from there.; I would like there to be a single flag like that in mmseqs, so that quick short sequence searches are possible. ## Current Behavior; Currently I need to set several options that I needed to discover manually, experimentally, because I could not find an easy pattern in docs. If I run mmseqs with default params, I get no results at all. It required me to set up a small project just to discover params that work for my sequence lengths, just to set up a baseline I can then work my way from. For example one of params setups I use: --spaced-kmer-mode 0 -k 8 -e 10. But this is for my case, the flag should probably check several things about input variables before deciding how to run the search. ## Environment; * MMseqs Version: fa4cd2a7ab15a2636b5c1615859a2491d6888300; * CPU: i7; * Operating system and version: Ubuntu 20.04.2 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/451
https://github.com/soedinglab/MMseqs2/issues/451:989,Modifiability,variab,variables,989,"Hi,. This is more of an enhancement rather than an issue needing fixing, but it would be very helpful for newer users. ## Expected Behavior; I am using mmseq to search for short sequences against some reference database; In Blast, I just need to use -task ""blastn-short"", and it sets default params for me, and I can go explore from there.; I would like there to be a single flag like that in mmseqs, so that quick short sequence searches are possible. ## Current Behavior; Currently I need to set several options that I needed to discover manually, experimentally, because I could not find an easy pattern in docs. If I run mmseqs with default params, I get no results at all. It required me to set up a small project just to discover params that work for my sequence lengths, just to set up a baseline I can then work my way from. For example one of params setups I use: --spaced-kmer-mode 0 -k 8 -e 10. But this is for my case, the flag should probably check several things about input variables before deciding how to run the search. ## Environment; * MMseqs Version: fa4cd2a7ab15a2636b5c1615859a2491d6888300; * CPU: i7; * Operating system and version: Ubuntu 20.04.2 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/451
https://github.com/soedinglab/MMseqs2/issues/453:62,Availability,error,error,62,File operations like `fclose` etc should all report the errno error code to make future debugging easier. See https://github.com/soedinglab/metaeuk/issues/22,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/453
https://github.com/soedinglab/MMseqs2/issues/455:135,Availability,redundant,redundant,135,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:901,Availability,error,error,901,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:1425,Availability,error,error,1425,"ong time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:2118,Availability,Mask,Mask,2118,"mseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:2136,Availability,Mask,Mask,2136,"mseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4208,Availability,mask,mask,4208,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4217,Availability,mask,mask-lower-case,4217,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4678,Availability,mask,mask,4678,"pped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4687,Availability,mask,mask-lower-case,4687,"pped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:5135,Availability,mask,mask,5135,"kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:5144,Availability,mask,mask-lower-case,5144,"kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:11365,Availability,mask,mask,11365,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:11374,Availability,mask,mask-lower-case,11374,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:11838,Availability,Mask,Masked,11838,"m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:12792,Availability,avail,available,12792,"at nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running CentosOS 8.1 and uses Slurm 20.11.0 as a job resource manager, Package Build Env: Spack v0.15, Software Deployment Environment: Lmod 8.2.10 and GCC 8.3.1 as the MPI compiler.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:773,Deployability,Release,Release,773,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:1031,Deployability,install,install,1031,"es. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:1083,Deployability,install,install,1083,"es. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:12987,Deployability,Deploy,Deployment,12987,"at nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running CentosOS 8.1 and uses Slurm 20.11.0 as a job resource manager, Package Build Env: Spack v0.15, Software Deployment Environment: Lmod 8.2.10 and GCC 8.3.1 as the MPI compiler.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:11594,Energy Efficiency,consumption,consumption,11594,"kup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:2460,Integrability,wrap,wrapped,2460,"t=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:3687,Integrability,wrap,wrapped-scoring,3687,"ign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:5900,Integrability,wrap,wrapped-scoring,5900,"0235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:8213,Integrability,wrap,wrapped-scoring,8213,"5406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 5ms; Time for processing: 0h 0m 3s 585ms; filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:3267,Modifiability,extend,extendable,3267,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4051,Modifiability,extend,extend,4051,"se; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4294,Modifiability,extend,extendable,4294,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4804,Modifiability,extend,extendable,4804,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:5261,Modifiability,extend,extendable,5261,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:8577,Modifiability,extend,extend,8577,"5406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 100ms. Size of the sequence database: 8785102; Size of the alignment database: 8785102; Number of clusters: 6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:3908,Performance,load,load-mode,3908,"and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:6060,Performance,load,load-mode,6060,"eq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 4ms; Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:8434,Performance,load,load-mode,8434," filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:11463,Performance,load,load-mode,11463,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:135,Safety,redund,redundant,135,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:3244,Security,hash,hash,3244,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4242,Security,hash,hash-shift,4242,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:4752,Security,hash,hash-shift,4752,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/455:5209,Security,hash,hash-shift,5209,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455
https://github.com/soedinglab/MMseqs2/issues/457:29,Deployability,release,release,29,With the change from MMseqs2 release 12 to 13 the `taxonomy` workflow does report unclassified reads/contigs anymore. This is an unwanted breaking change.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/457
https://github.com/soedinglab/MMseqs2/issues/458:258,Deployability,pipeline,pipeline,258,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458
https://github.com/soedinglab/MMseqs2/issues/458:125,Safety,detect,detection,125,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458
https://github.com/soedinglab/MMseqs2/issues/458:1002,Safety,detect,detection,1002,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458
https://github.com/soedinglab/MMseqs2/issues/460:186,Deployability,install,installed,186,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:240,Deployability,install,install,240,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:289,Deployability,install,install,289,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:329,Deployability,install,install,329,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:469,Deployability,install,installed,469,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:592,Deployability,install,install,592,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:629,Deployability,install,installing,629,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:116,Integrability,message,message,116,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:786,Integrability,depend,dependencies,786,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:373,Modifiability,portab,portable,373,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:1001,Modifiability,portab,portable,1001,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:383,Performance,optimiz,optimizations,383,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:686,Performance,optimiz,optimizations,686,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:916,Performance,optimiz,optimizations,916,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/460:272,Usability,simpl,simply,272,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460
https://github.com/soedinglab/MMseqs2/issues/461:1326,Availability,error,error,1326,". My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461
https://github.com/soedinglab/MMseqs2/issues/461:1280,Deployability,install,installs,1280,". My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461
https://github.com/soedinglab/MMseqs2/issues/461:173,Modifiability,config,config,173,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461
https://github.com/soedinglab/MMseqs2/issues/461:222,Modifiability,config,config,222,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461
https://github.com/soedinglab/MMseqs2/issues/461:914,Performance,cache,cache,914,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461
https://github.com/soedinglab/MMseqs2/issues/462:54,Availability,fault,fault,54,"Hi,. It seems that in some cases I get a segmentation fault when trying to get the alignment for linclust results. ; As always I would be highly thankful for your help to resolve this ;-). Thanks!; Haim. ## Expected Behavior. ## Current Behavior; `mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a `. Creates many (empty) .aln.x and (mostly non-empty) .aln.index.x files and crash just (before?) finish. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462
https://github.com/soedinglab/MMseqs2/issues/462:2013,Availability,fault,fault,2013,"z All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462
https://github.com/soedinglab/MMseqs2/issues/462:1247,Integrability,wrap,wrapped,1247,"r; `mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a `. Creates many (empty) .aln.x and (mostly non-empty) .aln.index.x files and crash just (before?) finish. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many rele",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462
https://github.com/soedinglab/MMseqs2/issues/465:546,Deployability,release,release,546,"I'm comparing MMSeqs2 taxonomic assignment with approx. 2bLCA and top hit and noticed that the later approach classifies more genes than the former. I extracted the alignments using `--extract-lines 1` and the top hit search had more hits to the database. All parameters were the same with the exception of `--lca-mode`. Example:; ```; mmseqs taxonomy querydb/querydb gtdb_r202/gtdb_r202 taxonomydb/taxonomydb tmp -s 3.0 --lca-mode 3 --tax-output-mode 2 --threads 64; ```. Is behavior expected? If so, what is causing this difference?. I'm using release `13-45111`. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/465
https://github.com/soedinglab/MMseqs2/issues/469:139,Availability,error,errors,139,"Hi,; Thanks for the wonderful MMseqs2, I run it on my 1k+ sample parallelly on computer cluster, most of samples failed with the following errors, only 20% samples succussed:; ; /opt/gridengine/default/spool/cngb-compute-m16-18/job_scripts/7307636: line 1: 4653 Illegal instruction (core dumped)/MMseqs2/build/bin/mmseqs created contigs.fa result/R2011005973_0_20201225/R2011005973_0_20201225.DB; /opt/gridengine/default/spool/cngb-compute-m16-18/job_scripts/7307636: line 2: 4658 Illegal instruction (core dumped)MMseqs2/build/bin/mmseqs search -a -s 7 --num-iterations 2 --search-type 2 result/R2011005973_0_20201225/R2011005973_0_20201225.DB DB/segmentNucDB result/R2011005973_0_20201225/R2011005973_0_20201225.result result/R2011005973_0_20201225/R2011005973_0_20201225.tmp; /opt/gridengine/default/spool/cngb-compute-m16-18/job_scripts/7307636: line 3: 4662 Illegal instruction (core dumped)/MMseqs2/build/bin/mmseqs convertalis result/R2011005973_0_20201225/R2011005973_0_20201225.DB DB/segmentNucDB result/R2011005973_0_20201225/R2011005973_0_20201225.result result/R2011005973_0_20201225/R2011005973_0_20201225.result.m8. MMseqs2 Version: 24f6b52a38cd8cf66d10ce00bf37dc815fef986e-MPI. Anyone could give some advice? Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469
https://github.com/soedinglab/MMseqs2/issues/470:743,Availability,echo,echo,743,"Task: I am looking for amino acid sequences in a genome (nucleotide level) with mmseqs. Equivalent to tblastn. in the output of mmseqs (mmseqs convertalis) I get not only the target in the column but also an underscore and a number (example: expected:chr1 → chr1_123); Start and stop positions are never greater than 66,000. I think the genome sequence has been split into different parts. How can I reassign the position of the parts to the complete genome?; Or did I build the index for the genome incorrectly?; What have I done wrong. Code (MMseqs2 Version: 6.f5a1c):. REF=path to fasta genom; FASTA=path to fasta query; RES=path to output folder; QRY=path to query (folder); TARGET=; TARGET_TMP=; RES_TMP=. BN=$(basename ""$FASTA""); NAME=$(echo $BN| cut -d '.' -f1); QUERY=""$QRY""""$NAME""_db; RESULT=""$RES""""$NAME""_result; RESULT_blastformat=""$RES""""$NAME""_result_mmseq.csv . mmseqs createdb ""$REF"" ""$TARGET""; mmseqs createindex ""$TARGET"" ""$TARGET_TMP"". mmseqs createdb ""$FASTA"" ""$QUERY""; mmseqs search --threads 12 ""$QUERY"" ""$TARGET"" ""$RESULT"" ""$RES_TMP"" -a; mmseqs convertalis --threads 12 ""$QUERY"" ""$TARGET"" ""$RESULT"" ""$RESULT_blastformat""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470
https://github.com/soedinglab/MMseqs2/issues/471:20,Availability,error,error,20,"Hi,. I'm getting an error when trying to blastn sequences vs NT DB. I also tried to just run the last convertalis command on a different computer and saw it crashed after getting to ~2TB of RAM usage. Is there a way to bypass and solve this issue?. Thanks!; Haim; ; ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. easy-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen /tmp/rep.fasta.gz /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/rep_vs_NT_Jan2021.mmseq2.m8 /tmp/ --threads 32 --split-memory-limit 250G . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:1870,Availability,Mask,Mask,1870,": 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:1888,Availability,Mask,Mask,1888,": 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:2089,Availability,Mask,Mask,2089,"ength 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:6029,Availability,mask,mask,6029,"89869989197200687/search_tmp/6775691152365959592/query_seqs /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 32 --compressed 0 -v 3 . [=================================================================] 1.03M 0s 146ms; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:6038,Availability,mask,mask-lower-case,6038,"89869989197200687/search_tmp/6775691152365959592/query_seqs /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 32 --compressed 0 -v 3 . [=================================================================] 1.03M 0s 146ms; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:6595,Availability,Mask,Masked,6595,"qs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 55m 45s 390ms. 0.917439 k-mers per position; 255666 DB matches per sequence; 279 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1236 sequences with 0 size result lists; Time for merging to pref_0_tmp_0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:7926,Availability,Mask,Masked,7926,230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 55m 45s 390ms. 0.917439 k-mers per position; 255666 DB matches per sequence; 279 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1236 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 5s 282ms; Time for merging to pref_0_tmp_0_tmp: 0h 0m 0s 718ms; Process prefiltering step 2 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.32M 5m 48s 439ms; Index table: Masked residues: 548391268; Index table: fill; [=================================================================] 7.32M 11m 41s 676ms; Index statistics; Entries: 27946347047; DB size: 168102 MB; Avg k-mer size: 26.027064; Top 10 k-mers; GGGGCAGCGTGATTT	302432; TAATCGTGCAGCGGG	270001; GTGCGCAGCGTATCG	254980; CTCTCGGGGGCGTGG	245801; CCACGCCGGGTCGAG	232302; TCCAGGGAGCATGGG	220720; CACGCCAGCTAGGAG	213322; AGTGGAATTTCATGG	211645; ACTCACGGAGGAGGG	184383; ATTAGGGGCCAAACG	175886; Time for index table init: 0h 18m 20s 132ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 2 of 12); Query db start 1 to 1298472; Target db start 7796648 to 15112675; [=================================================================] 1.30M 44m 23s 521ms. 0.917439 k-mers per position; 274912 DB matches per sequence; 265 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1001 sequences with 0 size result lists; Time for merging to pref,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:9265,Availability,Mask,Masked,9265,CACGCCAGCTAGGAG	213322; AGTGGAATTTCATGG	211645; ACTCACGGAGGAGGG	184383; ATTAGGGGCCAAACG	175886; Time for index table init: 0h 18m 20s 132ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 2 of 12); Query db start 1 to 1298472; Target db start 7796648 to 15112675; [=================================================================] 1.30M 44m 23s 521ms. 0.917439 k-mers per position; 274912 DB matches per sequence; 265 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1001 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 0s 435ms; Time for merging to pref_0_tmp_1_tmp: 0h 0m 0s 767ms; Process prefiltering step 3 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.33M 5m 30s 202ms; Index table: Masked residues: 528733028; Index table: fill; [=================================================================] 7.33M 10m 2s 214ms; Index statistics; Entries: 27900220272; DB size: 167838 MB; Avg k-mer size: 25.984105; Top 10 k-mers; GGGGCAGCGTGATTT	243297; TAATCGTGCAGCGGG	231491; AACGATTAATCGGAG	206367; CTCTCGGGGGCGTGG	194936; TACGAGGCGCGGGAT	183478; ACAGTTAGTATGTGT	181256; AGGGTGCAGGTGTAG	174472; TCCAGGGAGCATGGG	173238; AGCACAGGTTTCCTG	162937; TCGCGCTCTGTAGTG	159530; Time for index table init: 0h 16m 19s 363ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 3 of 12); Query db start 1 to 1298472; Target db start 15112676 to 22438113; [=================================================================] 1.30M 44m 17s 882ms. 0.917439 k-mers per position; 271574 DB matches per sequence; 178 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 979 sequences with 0 size result lists; Time for merging to pref_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:10603,Availability,Mask,Masked,10603,AGGGTGCAGGTGTAG	174472; TCCAGGGAGCATGGG	173238; AGCACAGGTTTCCTG	162937; TCGCGCTCTGTAGTG	159530; Time for index table init: 0h 16m 19s 363ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 3 of 12); Query db start 1 to 1298472; Target db start 15112676 to 22438113; [=================================================================] 1.30M 44m 17s 882ms. 0.917439 k-mers per position; 271574 DB matches per sequence; 178 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 979 sequences with 0 size result lists; Time for merging to pref_0_tmp_2: 0h 0m 0s 384ms; Time for merging to pref_0_tmp_2_tmp: 0h 0m 0s 726ms; Process prefiltering step 4 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.66M 5m 25s 221ms; Index table: Masked residues: 515919403; Index table: fill; [=================================================================] 7.66M 10m 17s 860ms; Index statistics; Entries: 27956997653; DB size: 168163 MB; Avg k-mer size: 26.036983; Top 10 k-mers; GGGGCAGCGTGATTT	317032; TAATCGTGCAGCGGG	288721; GTGCGCAGCGTATCG	272966; CTCTCGGGGGCGTGG	255502; ACAGTTAGTATGTGT	230984; TCCAGGGAGCATGGG	229608; AGTGGAATTTCATGG	222369; TCGCGCTCTGTAGTG	208085; ACTCACGGAGGAGGG	192057; CAGTGTGTGTAGTGG	182199; Time for index table init: 0h 16m 27s 836ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 4 of 12); Query db start 1 to 1298472; Target db start 22438114 to 30101861; [=================================================================] 1.30M 1h 3m 25s 964ms. 0.917439 k-mers per position; 266756 DB matches per sequence; 280 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1036 sequences with 0 size result lists; Time for merging to p,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:11945,Availability,Mask,Masked,11945,GGAATTTCATGG	222369; TCGCGCTCTGTAGTG	208085; ACTCACGGAGGAGGG	192057; CAGTGTGTGTAGTGG	182199; Time for index table init: 0h 16m 27s 836ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 4 of 12); Query db start 1 to 1298472; Target db start 22438114 to 30101861; [=================================================================] 1.30M 1h 3m 25s 964ms. 0.917439 k-mers per position; 266756 DB matches per sequence; 280 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1036 sequences with 0 size result lists; Time for merging to pref_0_tmp_3: 0h 0m 0s 378ms; Time for merging to pref_0_tmp_3_tmp: 0h 0m 0s 740ms; Process prefiltering step 5 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.53M 5m 30s 242ms; Index table: Masked residues: 553861159; Index table: fill; [=================================================================] 7.53M 11m 6s 119ms; Index statistics; Entries: 27929979419; DB size: 168008 MB; Avg k-mer size: 26.011820; Top 10 k-mers; GGGGCAGCGTGATTT	305689; TAATCGTGCAGCGGG	273513; GTGCGCAGCGTATCG	258679; CTCTCGGGGGCGTGG	248552; CCACGCCGGGTCGAG	235716; TCCAGGGAGCATGGG	222601; CACGCCAGCTAGGAG	215703; AGTGGAATTTCATGG	213837; ACTCACGGAGGAGGG	186164; ATTAGGGGCCAAACG	178017; Time for index table init: 0h 17m 20s 368ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 5 of 12); Query db start 1 to 1298472; Target db start 30101862 to 37628027; [=================================================================] 1.30M 56m 9s 404ms. 0.917439 k-mers per position; 271980 DB matches per sequence; 274 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1008 sequences with 0 size result lists; Time for merging to pref_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:13283,Availability,Mask,Masked,13283,CACGCCAGCTAGGAG	215703; AGTGGAATTTCATGG	213837; ACTCACGGAGGAGGG	186164; ATTAGGGGCCAAACG	178017; Time for index table init: 0h 17m 20s 368ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 5 of 12); Query db start 1 to 1298472; Target db start 30101862 to 37628027; [=================================================================] 1.30M 56m 9s 404ms. 0.917439 k-mers per position; 271980 DB matches per sequence; 274 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1008 sequences with 0 size result lists; Time for merging to pref_0_tmp_4: 0h 0m 0s 363ms; Time for merging to pref_0_tmp_4_tmp: 0h 0m 0s 760ms; Process prefiltering step 6 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.42M 5m 24s 811ms; Index table: Masked residues: 525484196; Index table: fill; [=================================================================] 7.42M 11m 32s 518ms; Index statistics; Entries: 27972994863; DB size: 168254 MB; Avg k-mer size: 26.051882; Top 10 k-mers; GGGGCAGCGTGATTT	244801; TAATCGTGCAGCGGG	232626; AACGATTAATCGGAG	207999; CTCTCGGGGGCGTGG	196420; TACGAGGCGCGGGAT	184136; ACAGTTAGTATGTGT	183047; AGGGTGCAGGTGTAG	176276; TCCAGGGAGCATGGG	173982; AGCACAGGTTTCCTG	164447; TCGCGCTCTGTAGTG	160943; Time for index table init: 0h 17m 43s 928ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 6 of 12); Query db start 1 to 1298472; Target db start 37628028 to 45047375; [=================================================================] 1.30M 18m 11s 653ms. 0.917439 k-mers per position; 256760 DB matches per sequence; 136 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1009 sequences with 0 size result lists; Time for merging to pre,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:14622,Availability,Mask,Masked,14622,AGGGTGCAGGTGTAG	176276; TCCAGGGAGCATGGG	173982; AGCACAGGTTTCCTG	164447; TCGCGCTCTGTAGTG	160943; Time for index table init: 0h 17m 43s 928ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 6 of 12); Query db start 1 to 1298472; Target db start 37628028 to 45047375; [=================================================================] 1.30M 18m 11s 653ms. 0.917439 k-mers per position; 256760 DB matches per sequence; 136 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1009 sequences with 0 size result lists; Time for merging to pref_0_tmp_5: 0h 0m 0s 416ms; Time for merging to pref_0_tmp_5_tmp: 0h 0m 0s 720ms; Process prefiltering step 7 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 5m 2s 613ms; Index table: Masked residues: 514774889; Index table: fill; [=================================================================] 7.80M 10m 41s 164ms; Index statistics; Entries: 28098092220; DB size: 168970 MB; Avg k-mer size: 26.168388; Top 10 k-mers; GGGGCAGCGTGATTT	319151; TAATCGTGCAGCGGG	292218; GTGCGCAGCGTATCG	276625; CTCTCGGGGGCGTGG	257089; ACAGTTAGTATGTGT	233222; TCCAGGGAGCATGGG	230492; AGTGGAATTTCATGG	223709; TCGCGCTCTGTAGTG	208846; ACTCACGGAGGAGGG	192862; CAGTGTGTGTAGTGG	183547; Time for index table init: 0h 16m 29s 433ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 7 of 12); Query db start 1 to 1298472; Target db start 45047376 to 52851039; [=================================================================] 1.30M 42m 2s 780ms. 0.917439 k-mers per position; 268468 DB matches per sequence; 280 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 979 sequences with 0 size result lists; Time for merging to pref_0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:15960,Availability,Mask,Masked,15960, AGTGGAATTTCATGG	223709; TCGCGCTCTGTAGTG	208846; ACTCACGGAGGAGGG	192862; CAGTGTGTGTAGTGG	183547; Time for index table init: 0h 16m 29s 433ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 7 of 12); Query db start 1 to 1298472; Target db start 45047376 to 52851039; [=================================================================] 1.30M 42m 2s 780ms. 0.917439 k-mers per position; 268468 DB matches per sequence; 280 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 979 sequences with 0 size result lists; Time for merging to pref_0_tmp_6: 0h 0m 0s 435ms; Time for merging to pref_0_tmp_6_tmp: 0h 0m 0s 740ms; Process prefiltering step 8 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.31M 4m 58s 818ms; Index table: Masked residues: 539302246; Index table: fill; [=================================================================] 7.31M 10m 23s 294ms; Index statistics; Entries: 27909901374; DB size: 167893 MB; Avg k-mer size: 25.993121; Top 10 k-mers; GGGGCAGCGTGATTT	303802; TAATCGTGCAGCGGG	270271; GTGCGCAGCGTATCG	255221; CTCTCGGGGGCGTGG	245307; CCACGCCGGGTCGAG	232798; TCCAGGGAGCATGGG	220250; AGTGGAATTTCATGG	213181; TCGCGCTCTGTAGTG	197549; ACTCACGGAGGAGGG	184290; ATTAGGGGCCAAACG	175053; Time for index table init: 0h 16m 4s 844ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 8 of 12); Query db start 1 to 1298472; Target db start 52851040 to 60159460; [=================================================================] 1.30M 35m 55s 821ms. 0.917439 k-mers per position; 291196 DB matches per sequence; 284 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 958 sequences with 0 size result lists; Time for merging to pref_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:17297,Availability,Mask,Masked,17297,; AGTGGAATTTCATGG	213181; TCGCGCTCTGTAGTG	197549; ACTCACGGAGGAGGG	184290; ATTAGGGGCCAAACG	175053; Time for index table init: 0h 16m 4s 844ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 8 of 12); Query db start 1 to 1298472; Target db start 52851040 to 60159460; [=================================================================] 1.30M 35m 55s 821ms. 0.917439 k-mers per position; 291196 DB matches per sequence; 284 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 958 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 0s 394ms; Time for merging to pref_0_tmp_7_tmp: 0h 0m 0s 755ms; Process prefiltering step 9 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.32M 5m 3s 892ms; Index table: Masked residues: 495939070; Index table: fill; [=================================================================] 7.32M 10m 28s 309ms; Index statistics; Entries: 28080210851; DB size: 168868 MB; Avg k-mer size: 26.151734; Top 10 k-mers; GGGGCAGCGTGATTT	240991; TAATCGTGCAGCGGG	229318; AACGATTAATCGGAG	204618; CTCTCGGGGGCGTGG	195002; TACGAGGCGCGGGAT	181416; ACAGTTAGTATGTGT	179824; AGGGTGCAGGTGTAG	174892; TCCAGGGAGCATGGG	172833; AGCACAGGTTTCCTG	161336; TCGCGCTCTGTAGTG	159888; Time for index table init: 0h 16m 15s 377ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 9 of 12); Query db start 1 to 1298472; Target db start 60159461 to 67479075; [=================================================================] 1.30M 22m 17s 156ms. 0.917439 k-mers per position; 269966 DB matches per sequence; 121 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1033 sequences with 0 size result lists; Time for merging to pref,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:18637,Availability,Mask,Masked,18637,GGGTGCAGGTGTAG	174892; TCCAGGGAGCATGGG	172833; AGCACAGGTTTCCTG	161336; TCGCGCTCTGTAGTG	159888; Time for index table init: 0h 16m 15s 377ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 9 of 12); Query db start 1 to 1298472; Target db start 60159461 to 67479075; [=================================================================] 1.30M 22m 17s 156ms. 0.917439 k-mers per position; 269966 DB matches per sequence; 121 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1033 sequences with 0 size result lists; Time for merging to pref_0_tmp_8: 0h 0m 0s 419ms; Time for merging to pref_0_tmp_8_tmp: 0h 0m 0s 897ms; Process prefiltering step 10 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.76M 5m 3s 280ms; Index table: Masked residues: 481928997; Index table: fill; [=================================================================] 7.76M 10m 27s 288ms; Index statistics; Entries: 28104694617; DB size: 169008 MB; Avg k-mer size: 26.174537; Top 10 k-mers; GGGGCAGCGTGATTT	319084; TAATCGTGCAGCGGG	291742; GTGCGCAGCGTATCG	275950; CTCTCGGGGGCGTGG	257217; ACAGTTAGTATGTGT	232875; TCCAGGGAGCATGGG	230888; AGTGGAATTTCATGG	223619; TCGCGCTCTGTAGTG	208663; ACTCACGGAGGAGGG	193225; CAGTGTGTGTAGTGG	183044; Time for index table init: 0h 16m 13s 601ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 10 of 12); Query db start 1 to 1298472; Target db start 67479076 to 75236806; [=================================================================] 1.30M 59m 1s 792ms. 0.917439 k-mers per position; 274723 DB matches per sequence; 277 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1068 sequences with 0 size result lists; Time for merging to pref,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:19978,Availability,Mask,Masked,19978,TGGAATTTCATGG	223619; TCGCGCTCTGTAGTG	208663; ACTCACGGAGGAGGG	193225; CAGTGTGTGTAGTGG	183044; Time for index table init: 0h 16m 13s 601ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 10 of 12); Query db start 1 to 1298472; Target db start 67479076 to 75236806; [=================================================================] 1.30M 59m 1s 792ms. 0.917439 k-mers per position; 274723 DB matches per sequence; 277 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1068 sequences with 0 size result lists; Time for merging to pref_0_tmp_9: 0h 0m 4s 398ms; Time for merging to pref_0_tmp_9_tmp: 0h 0m 0s 890ms; Process prefiltering step 11 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.33M 4m 48s 354ms; Index table: Masked residues: 516172937; Index table: fill; [=================================================================] 7.33M 9m 28s 253ms; Index statistics; Entries: 28124885703; DB size: 169123 MB; Avg k-mer size: 26.193341; Top 10 k-mers; GGGGCAGCGTGATTT	293229; TAATCGTGCAGCGGG	261503; GTGCGCAGCGTATCG	247301; CTCTCGGGGGCGTGG	237939; CCACGCCGGGTCGAG	225211; TCCAGGGAGCATGGG	213144; CACGCCAGCTAGGAG	206914; AGTGGAATTTCATGG	203910; ACTCACGGAGGAGGG	177651; CAGTGTGTGTAGTGG	170264; Time for index table init: 0h 14m 59s 9ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 11 of 12); Query db start 1 to 1298472; Target db start 75236807 to 82571160; [=================================================================] 1.30M 23m 9s 242ms. 0.917439 k-mers per position; 265400 DB matches per sequence; 261 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1163 sequences with 0 size result lists; Time for merging to pref_0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:21317,Availability,Mask,Masked,21317,ACGCCAGCTAGGAG	206914; AGTGGAATTTCATGG	203910; ACTCACGGAGGAGGG	177651; CAGTGTGTGTAGTGG	170264; Time for index table init: 0h 14m 59s 9ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 11 of 12); Query db start 1 to 1298472; Target db start 75236807 to 82571160; [=================================================================] 1.30M 23m 9s 242ms. 0.917439 k-mers per position; 265400 DB matches per sequence; 261 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1163 sequences with 0 size result lists; Time for merging to pref_0_tmp_10: 0h 0m 17s 90ms; Time for merging to pref_0_tmp_10_tmp: 0h 0m 0s 818ms; Process prefiltering step 12 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.49M 5m 8s 662ms; Index table: Masked residues: 477689390; Index table: fill; [=================================================================] 7.49M 10m 34s 966ms; Index statistics; Entries: 28128243126; DB size: 169143 MB; Avg k-mer size: 26.196468; Top 10 k-mers; GGGGCAGCGTGATTT	255888; TAATCGTGCAGCGGG	241953; AACGATTAATCGGAG	215872; CTCTCGGGGGCGTGG	205871; TACGAGGCGCGGGAT	193257; ACAGTTAGTATGTGT	189730; TCCAGGGAGCATGGG	182205; AGTGGAATTTCATGG	181418; AGCACAGGTTTCCTG	171345; TCGCGCTCTGTAGTG	166362; Time for index table init: 0h 16m 25s 785ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 12 of 12); Query db start 1 to 1298472; Target db start 82571161 to 90056195; [=================================================================] 1.30M 40m 7s 693ms. 0.917439 k-mers per position; 248633 DB matches per sequence; 224 overflows; 0 queries produce too many hits (truncated result); 41 sequences passed prefiltering per query sequence; 45 median result list length; 1350 sequences with 0 size result lists; Time for merging to pref,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:26336,Availability,Error,Error,26336,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:6311,Energy Efficiency,consumption,consumption,6311,"s; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:1005,Integrability,wrap,wrapped,1005,"i,. I'm getting an error when trying to blastn sequences vs NT DB. I also tried to just run the last convertalis command on a different computer and saw it crashed after getting to ~2TB of RAM usage. Is there a way to bypass and solve this issue?. Thanks!; Haim; ; ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. easy-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen /tmp/rep.fasta.gz /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/rep_vs_NT_Jan2021.mmseq2.m8 /tmp/ --threads 32 --split-memory-limit 250G . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:23149,Integrability,wrap,wrapped-scoring,23149," 224 overflows; 0 queries produce too many hits (truncated result); 41 sequences passed prefiltering per query sequence; 45 median result list length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:23511,Modifiability,extend,extend,23511," 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:26130,Modifiability,extend,extend,26130,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:6127,Performance,load,load-mode,6127,"89869989197200687/search_tmp/6775691152365959592/query_seqs /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 32 --compressed 0 -v 3 . [=================================================================] 1.03M 0s 146ms; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:23368,Performance,load,load-mode,23368,"ist length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for proces",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:24961,Performance,load,load-mode,24961,s; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment /tmp//2989869989197200687/query /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/aln /tmp//2989869989197200687/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 32 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for proce,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:26168,Performance,load,load-mode,26168,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/471:26325,Safety,Abort,Aborted,26325,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471
https://github.com/soedinglab/MMseqs2/issues/473:655,Availability,recover,recover,655,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:1878,Availability,mask,mask,1878,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:1887,Availability,mask,mask-lower-case,1887,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2435,Availability,Mask,Masked,2435,"407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 512G; Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2587,Availability,Error,Error,2587,"407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 512G; Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2610,Availability,Error,Error,2610,"407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 512G; Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2636,Availability,Error,Error,2636,"407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 512G; Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2658,Availability,Error,Error,2658,"407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 512G; Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:2151,Energy Efficiency,consumption,consumption,2151,"7fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:1976,Performance,load,load-mode,1976,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:655,Safety,recover,recover,655,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:228,Testability,log,log,228,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:317,Testability,log,log,317,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:1155,Testability,log,logs,1155,"contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/473:1208,Testability,log,log,1208,".com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473
https://github.com/soedinglab/MMseqs2/issues/474:1246,Availability,error,error,1246,"I am having a problem with the taxonomy module, probably linked to building a taxdb by myself. I have created the taxdb for proteins I want to be all classified simply as ""virus"" (taxid 10239). head NEWDB_all_70_rep.fasta ; >DB_2501651210_000001|2501651824|2501735350; MSITKFINKRKYMDFSTFESASQALSLSIYFLVGAAAAIAFVQGFKSN. mmseqs createdb NEWDB_all_70_rep.fasta NEWDB_70_rep; awk '{print $2 ""\t10239""}' NEWDB_70_rep.lookup > taxidmapping; mkdir ncbi-taxdump && cd ncbi-taxdump; wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz; tar xzvf taxdump.tar.gz; cd -; mmseqs createtaxdb NEWDB_70_rep /tmp --ncbi-tax-dump ncbi-taxdump/ --tax-mapping-file taxidmapping. I am then able to use this taxdb with taxonomy module. I then used concatdbs to add my taxdb to U90. mmseqs concatdbs ../NEWDB/NEWDB_70_rep U90 U90andNEWDB70 --threads 1; mmseqs concatdbs ../NEWDB/NEWDB_70_rep_h U90_h U90andNEWDB70_h --threads 1; nohup mmseqs createindex U90andNEWDB70 /tmp/ &; mmseqs createtaxdb U90andNEWDB70 /tmp. I am then able to use this concat taxdb with taxonomy module. I then applied taxonomy filter to the concatdb. nohup mmseqs filtertaxseqdb U90andNEWDB70 U90andNEWDB70_nostrepto --taxon-list '!35493' 1>& filter.out &. In this case, I get the following error:; Input taxonomy database ""../../../U90andNEWDB70_nostrepto"" is missing files:; - ../../../U90andNEWDB70_nostrepto_nodes.dmp; - ../../../U90andNEWDB70_nostrepto_names.dmp; - ../../../U90andNEWDB70_nostrepto_merged.dmp. In fact, I'm finding out that there were none of the _nodes.dmp, _merged.dmp and _delnodes.dmp files created for the new taxdb and the concatdb. Maybe that's where the problem comes from?. Could you kindly help figuring out what's wrong with this? . Thanks a lot for your help,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474
https://github.com/soedinglab/MMseqs2/issues/474:161,Usability,simpl,simply,161,"I am having a problem with the taxonomy module, probably linked to building a taxdb by myself. I have created the taxdb for proteins I want to be all classified simply as ""virus"" (taxid 10239). head NEWDB_all_70_rep.fasta ; >DB_2501651210_000001|2501651824|2501735350; MSITKFINKRKYMDFSTFESASQALSLSIYFLVGAAAAIAFVQGFKSN. mmseqs createdb NEWDB_all_70_rep.fasta NEWDB_70_rep; awk '{print $2 ""\t10239""}' NEWDB_70_rep.lookup > taxidmapping; mkdir ncbi-taxdump && cd ncbi-taxdump; wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz; tar xzvf taxdump.tar.gz; cd -; mmseqs createtaxdb NEWDB_70_rep /tmp --ncbi-tax-dump ncbi-taxdump/ --tax-mapping-file taxidmapping. I am then able to use this taxdb with taxonomy module. I then used concatdbs to add my taxdb to U90. mmseqs concatdbs ../NEWDB/NEWDB_70_rep U90 U90andNEWDB70 --threads 1; mmseqs concatdbs ../NEWDB/NEWDB_70_rep_h U90_h U90andNEWDB70_h --threads 1; nohup mmseqs createindex U90andNEWDB70 /tmp/ &; mmseqs createtaxdb U90andNEWDB70 /tmp. I am then able to use this concat taxdb with taxonomy module. I then applied taxonomy filter to the concatdb. nohup mmseqs filtertaxseqdb U90andNEWDB70 U90andNEWDB70_nostrepto --taxon-list '!35493' 1>& filter.out &. In this case, I get the following error:; Input taxonomy database ""../../../U90andNEWDB70_nostrepto"" is missing files:; - ../../../U90andNEWDB70_nostrepto_nodes.dmp; - ../../../U90andNEWDB70_nostrepto_names.dmp; - ../../../U90andNEWDB70_nostrepto_merged.dmp. In fact, I'm finding out that there were none of the _nodes.dmp, _merged.dmp and _delnodes.dmp files created for the new taxdb and the concatdb. Maybe that's where the problem comes from?. Could you kindly help figuring out what's wrong with this? . Thanks a lot for your help,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474
https://github.com/soedinglab/MMseqs2/issues/475:543,Availability,down,download,543,"## Expected Behavior. If an input contig was annotated at species level (in the lca.tsv file) by easy-taxonomy, it would align or show similarity to an existing assembly of that species. It did not and I am not sure how to interprete. ## Current Behavior & Context. I assembled a quite unique library. Some circular contigs got bad scores from checkM. I checked with mmseqs2's easy-taxonomy (default parameters, Uniprot90) and found 3 contigs being classified at species level. They all had reference assemblies at refseq/genbank. Therefore I download them and aligned my contigs (minimap2 -c -xasm20), where one did not align and two hardly had hits. Running `mash dist` (default parameters) confimed with this result. . I checked GC skew, which visually suggested that 1 might have misassembly (two peaks; checkM gave 100% completeness and 100% contamination), but the other 2 looked ok (one peak; not contaminated, but also <70% complete). ## The Question. I wonder if this could be interpreted as the contigs are wrong & just happened to land at species level annotation in mmseqs2, or not necessarily so? What else can I check, or it's hard to draw a conclusion? Thank you!. ## Your Environment. mmseqs2: 45111b641859ed0ddd875b94d6fd1aef1a675b7e, statically-compiled; I'm on centOS/ubuntu server, the run didn't yield warnings. edit: minor typo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/475
https://github.com/soedinglab/MMseqs2/issues/476:1238,Availability,error,error,1238,"ant a search of nucleotide against nucleotides. ## Steps to Reproduce (for bugs). For the creation of the database I followed this ; ```; mmseqs createdb samples.fasta viral_db; mmseqs cluster viral_db viral6_clu tEmp --min-seq-id 0.9 -c 0.8 --cov-mode 2 --remove-tmp-files 1 --threads 1 --split-memory-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:1480,Availability,error,error,1480,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:2597,Availability,Mask,Mask,2597,"parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:2615,Availability,Mask,Mask,2615,"parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:3762,Availability,error,error,3762,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:4099,Availability,redundant,redundant,4099,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:3924,Deployability,pipeline,pipeline,3924,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:1472,Integrability,message,message,1472,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:2894,Integrability,wrap,wrapped,2894,"E/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:1568,Performance,perform,performed,1568,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:3612,Performance,perform,performed,3612,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:4099,Safety,redund,redundant,4099,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/476:1732,Usability,simpl,simple,1732,"/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476
https://github.com/soedinglab/MMseqs2/issues/477:1301,Availability,mask,mask,1301,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1310,Availability,mask,mask-lower-case,1310,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1793,Availability,Mask,Mask,1793,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1812,Availability,Mask,Mask,1812,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:2110,Deployability,install,installed,2110,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1429,Modifiability,extend,extendable,1429,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1988,Modifiability,extend,extendable,1988,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:381,Performance,load,loads,381,"## Expected Behavior; I am clustering billions of protein sequences. I already built the database. I was expecting linclust to run fairly quickly, but it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable fa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1377,Security,hash,hash-shift,1377,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/477:1940,Security,hash,hash,1940,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477
https://github.com/soedinglab/MMseqs2/issues/478:31,Availability,error,error,31,"Hello. MMSeq2 dies after write error, The shell output is below. Anyone knows why this happens?. Thanks,. Torsten. ___________________; Create directory tmp; search kelp_database uniref50 results tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:1222,Availability,Mask,Mask,1222," Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:1240,Availability,Mask,Mask,1240," Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:1442,Availability,Mask,Mask,1442,"t length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:3426,Availability,mask,mask,3426,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:3435,Availability,mask,mask-lo,3435,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:3994,Availability,Mask,Masked,3994,"/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Time for index table init: 0h 5m 17s 428ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 2); Query db start 1 to 61153309; Target db start 1 to 24258060; [=================================================================] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34327 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 44s 467ms; Time for merging to pref_0_tmp_0_tmp: 0h 12m 8s 854ms; Proces",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:5249,Availability,Mask,Masked,5249,DFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Time for index table init: 0h 5m 17s 428ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 2); Query db start 1 to 61153309; Target db start 1 to 24258060; [=================================================================] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34327 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 44s 467ms; Time for merging to pref_0_tmp_0_tmp: 0h 12m 8s 854ms; Process prefiltering step 2 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.27M 1m 54s 630ms; Index table: Masked residues: 187586445; Index table: fill; [=================================================================] 24.27M 3m 32s 124ms; Index statistics; Entries: 6287362445; DB size: 45742 MB; Avg k-mer size: 4.912002; Top 10 k-mers; DFEQLPH	33023; NVPGWSP	32989; QGKSPFQ	32900; FRYAFPS	32880; RYYVLGW	32788; WRLDFLN	31914; TVDGDFS	31713; NKTDFVQ	31393; QDWVQIP	31110; LDGAYVP	30048; Time for index table init: 0h 5m 43s 381ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 2 of 2); Query db start 1 to 61153309; Target db start 24258061 to 48531432; [=================================================================] 61.15M 28h 53m 9s 351ms. 2412.140792 k-mers per position; 608911 DB matches per sequence; 174 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34543 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 35s 830ms; Time for merging to pref_0_tmp_1_tmp: 0h 10m 54s 136ms;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:6566,Availability,error,error,6566,========] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34327 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 44s 467ms; Time for merging to pref_0_tmp_0_tmp: 0h 12m 8s 854ms; Process prefiltering step 2 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.27M 1m 54s 630ms; Index table: Masked residues: 187586445; Index table: fill; [=================================================================] 24.27M 3m 32s 124ms; Index statistics; Entries: 6287362445; DB size: 45742 MB; Avg k-mer size: 4.912002; Top 10 k-mers; DFEQLPH	33023; NVPGWSP	32989; QGKSPFQ	32900; FRYAFPS	32880; RYYVLGW	32788; WRLDFLN	31914; TVDGDFS	31713; NKTDFVQ	31393; QDWVQIP	31110; LDGAYVP	30048; Time for index table init: 0h 5m 43s 381ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 2 of 2); Query db start 1 to 61153309; Target db start 24258061 to 48531432; [=================================================================] 61.15M 28h 53m 9s 351ms. 2412.140792 k-mers per position; 608911 DB matches per sequence; 174 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34543 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 35s 830ms; Time for merging to pref_0_tmp_1_tmp: 0h 10m 54s 136ms; Merging 2 target splits to pref_0; Preparing offsets for merging: 0h 0m 19s 175ms; [=================================================================] 61.15M 26m 22s 19ms; Time for merging to pref_0: 0h 0m 36s 177ms; Time for merging target splits: 0h 27m 38s 35ms; write error; Error: Prefilter died; Error: Search step died; -bash-4.2$,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:6573,Availability,Error,Error,6573,========] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34327 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 44s 467ms; Time for merging to pref_0_tmp_0_tmp: 0h 12m 8s 854ms; Process prefiltering step 2 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.27M 1m 54s 630ms; Index table: Masked residues: 187586445; Index table: fill; [=================================================================] 24.27M 3m 32s 124ms; Index statistics; Entries: 6287362445; DB size: 45742 MB; Avg k-mer size: 4.912002; Top 10 k-mers; DFEQLPH	33023; NVPGWSP	32989; QGKSPFQ	32900; FRYAFPS	32880; RYYVLGW	32788; WRLDFLN	31914; TVDGDFS	31713; NKTDFVQ	31393; QDWVQIP	31110; LDGAYVP	30048; Time for index table init: 0h 5m 43s 381ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 2 of 2); Query db start 1 to 61153309; Target db start 24258061 to 48531432; [=================================================================] 61.15M 28h 53m 9s 351ms. 2412.140792 k-mers per position; 608911 DB matches per sequence; 174 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34543 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 35s 830ms; Time for merging to pref_0_tmp_1_tmp: 0h 10m 54s 136ms; Merging 2 target splits to pref_0; Preparing offsets for merging: 0h 0m 19s 175ms; [=================================================================] 61.15M 26m 22s 19ms; Time for merging to pref_0: 0h 0m 36s 177ms; Time for merging target splits: 0h 27m 38s 35ms; write error; Error: Prefilter died; Error: Search step died; -bash-4.2$,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:6596,Availability,Error,Error,6596,========] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34327 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 44s 467ms; Time for merging to pref_0_tmp_0_tmp: 0h 12m 8s 854ms; Process prefiltering step 2 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.27M 1m 54s 630ms; Index table: Masked residues: 187586445; Index table: fill; [=================================================================] 24.27M 3m 32s 124ms; Index statistics; Entries: 6287362445; DB size: 45742 MB; Avg k-mer size: 4.912002; Top 10 k-mers; DFEQLPH	33023; NVPGWSP	32989; QGKSPFQ	32900; FRYAFPS	32880; RYYVLGW	32788; WRLDFLN	31914; TVDGDFS	31713; NKTDFVQ	31393; QDWVQIP	31110; LDGAYVP	30048; Time for index table init: 0h 5m 43s 381ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 2 of 2); Query db start 1 to 61153309; Target db start 24258061 to 48531432; [=================================================================] 61.15M 28h 53m 9s 351ms. 2412.140792 k-mers per position; 608911 DB matches per sequence; 174 overflows; 0 queries produce too many hits (truncated result); 196 sequences passed prefiltering per query sequence; 198 median result list length; 34543 sequences with 0 size result lists; Time for merging to pref_0_tmp_1: 0h 0m 35s 830ms; Time for merging to pref_0_tmp_1_tmp: 0h 10m 54s 136ms; Merging 2 target splits to pref_0; Preparing offsets for merging: 0h 0m 19s 175ms; [=================================================================] 61.15M 26m 22s 19ms; Time for merging to pref_0: 0h 0m 36s 177ms; Time for merging target splits: 0h 27m 38s 35ms; write error; Error: Prefilter died; Error: Search step died; -bash-4.2$,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:3711,Energy Efficiency,consumption,consumption,3711,"-id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Time for index table init: 0h 5m 17s 428ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 2); Query db start 1 to 61153309; Target db start 1 to 24258060; [=================================================================] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 ov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:360,Integrability,wrap,wrapped,360,"Hello. MMSeq2 dies after write error, The shell output is below. Anyone knows why this happens?. Thanks,. Torsten. ___________________; Create directory tmp; search kelp_database uniref50 results tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/478:3526,Performance,load,load-mode,3526,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478
https://github.com/soedinglab/MMseqs2/issues/479:1900,Availability,Mask,Mask,1900,"olumn with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:1917,Availability,Mask,Mask,1917,"olumn with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:2109,Availability,Mask,Mask,2109," Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. extractorfs bin.1.mmseqs.db /rds/gene",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:4178,Availability,mask,mask,4178,"/ephemeral//9711778946736545179/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:4187,Availability,mask,mask-lower-case,4187,"/ephemeral//9711778946736545179/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:4738,Availability,Mask,Masked,4738,"es 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ~190 Gb, HPC; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:4446,Energy Efficiency,consumption,consumption,4446,"es 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ~190 Gb, HPC; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:1137,Integrability,wrap,wrapped,1137,"in GTDB database for mmseqs (https://zenodo.org/record/4751564/files/GTDB_v95.tar.gz) and standard taxonomy command line with 24 threads and >100 Gb RAM. mmseqs2 is progressing very slowly for this single bin (330kbases only, quoting hours to run). The authors of SemiBin quote the step which includes mmseq taxonomic assignment as taking 90-120 minutes on similar sizes servers for contigs from whole datasets. Does runtime scales with the search database and not the query size? Have I done something wrong? All advice gratefully received. ## MMseqs Output (for bugs); ```; MMseqs Version: 13.45111; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/479:4275,Performance,load,load-mode,4275,"/ephemeral//9711778946736545179/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479
https://github.com/soedinglab/MMseqs2/issues/480:407,Availability,error,error,407,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:480,Availability,error,error,480,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:118,Deployability,install,install,118,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:740,Deployability,install,installed,740,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:2561,Deployability,release,release,2561,"rectory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 2.8.12.2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; uname -a | grep x86_64; Linux 3.10.0-862.3.3.el7.x86_64 #1 SMP Fri Jun 15 04:15:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```; * Operating system and version:; CentOS Linux release 7.5.1804 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:998,Integrability,depend,dependencies,998,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:492,Performance,load,loading,492,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:1104,Security,certificate,certificates,1104,"t a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:229,Testability,test,test,229,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/480:319,Testability,test,test,319,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480
https://github.com/soedinglab/MMseqs2/issues/483:1077,Availability,down,downstream,1077,"ergeclusters`. . `mergeclusters` runs successfully and I get the following output:. ```; mergeclusters myDB deepClusterDB clusteringStep0 clusteringStep1 clusteringStep2. MMseqs Version: f349118312919c4fcc448f4595ca3b3a387018e2; Threads 20; Compressed 0; Verbosity 3. Clustering step 1; [=================================================================] 100.00% 699 0s 22ms; Clustering step 2; [=================================================================] 100.00% 101 0s 26ms; Clustering step 3; [=================================================================] 100.00% 79 0s 29ms; Write merged clustering; [=================================================================] 100.00% 77.44K 0s 54ms; Time for merging to deepClusterDB: 0h 0m 0s 2ms===============> ] 94.08% 72.85K eta 0s; Time for processing: 0h 0m 0s 74ms; ```. However, only the following files get created, and no file just called `deepClusterDB` (no numbers or file extentions) as I would expect. Consequently, I can't do any downstream operations. ; ```; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.0; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.1; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.10; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.11; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.12; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.13; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.14; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.15; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.16; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.17; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.18; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.19; -rw-r--r-- 1 440K Aug 24 20:42 deepClusterDB.2; -rw-r--r-- 1 3.8K Aug 24 20:42 deepClusterDB.3; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.4; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.5; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.6; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.7; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.8; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.9; -rw-r--r-- 1 4 Aug 24 20:42 deepClusterDB.dbtype; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/483
https://github.com/soedinglab/MMseqs2/issues/485:271,Availability,error,error,271,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:337,Availability,error,error,337,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:353,Availability,Error,Error,353,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:3382,Availability,Mask,Mask,3382,"nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:3399,Availability,Mask,Mask,3399,"nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:3591,Availability,Mask,Mask,3591,"shold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequence",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:5431,Availability,error,error,5431,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:5448,Availability,Error,Error,5448,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:2559,Integrability,wrap,wrapped,2559,"YGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:4809,Integrability,wrap,wrapped-scoring,4809,"nimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:533,Modifiability,extend,extend,533,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:2361,Modifiability,extend,extend,2361,"GAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:5032,Performance,load,load-mode,5032,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:345,Safety,Abort,Aborted,345,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/485:5439,Safety,Abort,Aborted,5439,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485
https://github.com/soedinglab/MMseqs2/issues/486:312,Usability,guid,guide,312,"Hi There,; I am curious if you could provide any solution to generate Blast XML based on the output of MMseqs2. It seems there were some efforts but not final solution. I want to use blast2go at the next step but it is not possible to generate required format using m8 format. I would be appreciate if you could guide me.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/486
https://github.com/soedinglab/MMseqs2/issues/487:3088,Availability,error,errors,3088,"	0	-3	-2	1	-1	2	5	-2	-2	0	-1	-1	-1	1	-1	-1	-1; N	-2	-3	1	0	-3	0	1	-3	0	-3	-2	6	-2	0	0	1	0	-3	-4	-2	-1; P	-1	-3	-1	-1	-4	-2	-2	-3	-1	-3	-2	-2	7	-1	-2	-1	-1	-2	-4	-3	-2; Q	-1	-3	0	2	-3	-2	0	-3	1	-2	0	0	-1	5	1	0	-1	-2	-2	-1	-1; R	-1	-3	-2	0	-3	-2	0	-3	2	-2	-1	0	-2	1	5	-1	-1	-3	-3	-2	-1; S	1	-1	0	0	-2	0	-1	-2	0	-2	-1	1	-1	0	-1	4	1	-2	-3	-2	0; T	0	-1	-1	-1	-2	-2	-2	-1	-1	-1	-1	0	-1	-1	-1	1	5	0	-2	-2	0; V	0	-1	-3	-2	-1	-3	-3	3	-2	1	1	-3	-2	-2	-3	-2	0	4	-3	-1	-1; W	-3	-2	-4	-3	1	-2	-2	-3	-3	-2	-1	-4	-4	-2	-3	-3	-2	-3	11	2	-2; Y	-2	-2	-3	-2	3	-3	2	-1	-2	-1	-1	-2	-3	-1	-2	-2	-2	-1	2	7	-1; X	0	-2	-1	-1	-1	-1	-1	-1	-1	-1	-1	-1	-2	-1	-1	0	0	-1	-2	-1	-1. This was the map command:; map //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 -k 0 --rescore-mode 2 --sub-mat /app/matrices/blosum62-parasail.out. ## MMseqs Output (for bugs). There were no errors in running the map function. After map finished, I took the scores for each sequence with itself and divided these scores by the length of the sequence. This gave the score for each amino acid with itself, which should agree with the substitution matrix, e.g. A with A should be 4. For parasail, this was exactly the result. For mmseqs, the scores were fractional, not corresponding to the original matrix:. A	4.43; C	10.43; D	6.79; E	5.71; F	6.79; G	6.79; H	9.14; I	4.43; K	5.71; L	4.43; M	5.71; N	6.79; P	8.07; Q	5.71; R	5.71; S	4.43; T	5.71; V	4.43; W	12.79; X	-0.21; Y	8.07. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487
https://github.com/soedinglab/MMseqs2/issues/487:384,Usability,simpl,simply,384,"## Expected Behavior; I would like to replicate the scores given by other implementations of SW local alignment such as parasail. . ## Current Behavior; Even when I use the same substitution matrix as parasail, I get different scores. From looking at the code it looks like the substitution matrix is modified by the ""lambda"" and ""background"" values. I would like for mmseqs align to simply use the substitution matrix I input without any modifications. . ## Steps to Reproduce (for bugs); I created a list of repetitive sequences; ['AAAAAAAAAAAAAA',; 'CCCCCCCCCCCCCC',; 'DDDDDDDDDDDDDD',; 'EEEEEEEEEEEEEE',; 'FFFFFFFFFFFFFF',; 'GGGGGGGGGGGGGG',; 'HHHHHHHHHHHHHH',; 'IIIIIIIIIIIIII',; 'KKKKKKKKKKKKKK',; 'LLLLLLLLLLLLLL',; 'MMMMMMMMMMMMMM',; 'NNNNNNNNNNNNNN',; 'PPPPPPPPPPPPPP',; 'QQQQQQQQQQQQQQ',; 'RRRRRRRRRRRRRR',; 'SSSSSSSSSSSSSS',; 'TTTTTTTTTTTTTT',; 'VVVVVVVVVVVVVV',; 'WWWWWWWWWWWWWW',; 'YYYYYYYYYYYYYY',; 'XXXXXXXXXXXXXX']. I converted these sequences to a database and used ""map"" with this database against itself with the following BLOSUM62 substitution matrix (the # in the first 3 lines was removed for formatting):. Background (precomputed optional): 0.0794 0.0213 0.0501 0.0468 0.0525 0.0647 0.0228 0.0642 0.0491 0.0869 0.0323 0.0376 0.0447 0.0426 0.0649 0.0564 0.0528 0.0591 0.0115 0.0284 0.00001; Lambda (precomputed optional): 0.34657; Avg SeqId (precomputed optional): 0.32351; 	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y	X; A	4	0	-2	-1	-2	0	-2	-1	-1	-1	-1	-2	-1	-1	-1	1	0	0	-3	-2	0; C	0	9	-3	-4	-2	-3	-3	-1	-3	-1	-1	-3	-3	-3	-3	-1	-1	-1	-2	-2	-2; D	-2	-3	6	2	-3	-1	-1	-3	-1	-4	-3	1	-1	0	-2	0	-1	-3	-4	-3	-1; E	-1	-4	2	5	-3	-2	0	-3	1	-3	-2	0	-1	2	0	0	-1	-2	-3	-2	-1; F	-2	-2	-3	-3	6	-3	-1	0	-3	0	0	-3	-4	-3	-3	-2	-2	-1	1	3	-1; G	0	-3	-1	-2	-3	6	-2	-4	-2	-4	-3	0	-2	-2	-2	0	-2	-3	-2	-3	-1; H	-2	-3	-1	0	-1	-2	8	-3	-1	-3	-2	1	-2	0	0	-1	-2	-3	-2	2	-1; I	-1	-1	-3	-3	0	-4	-3	4	-3	2	1	-3	-3	-3	-3	-2	-1	3	-3	-1	-1; K	-1	-3	-1	1	-3	-2	-1	-3	5	-2	-1	0	-1	1	2	0	-1	-2	-3	-2	-1; L	-1	-1	-4	-3	0	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487
https://github.com/soedinglab/MMseqs2/issues/488:240,Availability,error,error,240,"Hello,; I noticed the latest mmseqs2 has already merged a3m conversion option to result2msa by selecting --msa-format-mode 5. When I try to use data from examples/QUERY.fasta, examples/DB.fasta and output.m8 resulted from easy-search, this error appeared:; ----------------------------------------------------------------------------------------------; Input database ""examples/QUERY.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ----------------------------------------------------------------------------------------------; The command I gave is this:; mmseqs result2msa --msa-format-mode 5 examples/QUERY.fasta examples/DB.fasta output.m8 output.a3m. Looking forward to any advice. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/488
https://github.com/soedinglab/MMseqs2/issues/489:383,Availability,error,error,383,"I'm currently testing linclust using the easy-linclust workflow with very small datasets (100 / 1000 sequences). Each sequence is a nucleotide sequence, on average, 3000 basepairs long. So using 20 kmers, and an automatically generated kmer size (of 17) must find overlaps between these two sequences. And yet I see several sequence pairs that have 1-5 mismatches between them (0.1% error rate) that are missed and classified as single member clusters. They should not be disqualified by the min-seq-id or -c values that I'm using (of 0.99), which are stringent in the general case. Is there anything I could use to increase sensitivity at this stage?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489
https://github.com/soedinglab/MMseqs2/issues/489:14,Testability,test,testing,14,"I'm currently testing linclust using the easy-linclust workflow with very small datasets (100 / 1000 sequences). Each sequence is a nucleotide sequence, on average, 3000 basepairs long. So using 20 kmers, and an automatically generated kmer size (of 17) must find overlaps between these two sequences. And yet I see several sequence pairs that have 1-5 mismatches between them (0.1% error rate) that are missed and classified as single member clusters. They should not be disqualified by the min-seq-id or -c values that I'm using (of 0.99), which are stringent in the general case. Is there anything I could use to increase sensitivity at this stage?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489
https://github.com/soedinglab/MMseqs2/issues/491:847,Availability,error,error,847,"Hello! (It's me again :D). I want to create report with taxonomy and alignment information. I need a little bit more than in Kraken/Krona and found out nice convertalis module with all fields that I interested in.; So, first I created taxonomy alignment database. `mmseqs createdb EcyBK_4.fasta EcyBK_4_db`. ```; mmseqs taxonomy \; EcyBK_4_db \; /media/tertiary/database_nr/mmseqs_20210920/NR_tax_mmseqs \; EcyBK_4_mmseqs tmp -s 7.5 \; --exact-kmer-matching 1 --min-ungapped-score 30 --threads 6; ```. And as next step I planned to use convertalis module. ```; mmseqs convertalis /media/tertiary/database_nr/mmseqs_20210920/NR_tax_mmseqs \; \EcyBK_4_db \; EcyBK_4_mmseqs \; EcyBK_4_mmseqs_report.tab \; --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,taxid,taxname,taxlineage""; ```. But catch this error:. ```; MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Alignment format 0; Format alignment output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,\ ; tstart,tend,evalue,bits,taxid,taxname,taxlineage; Translation table 1; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Database output false; Preload mode 0; Search type 0; Threads 12; Compressed 0; Verbosity 3. Input database ""EcyBK_4_mmseqs"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```. So if I understand right the idea of module - it is about new taxonomy annotation, not construct the report from the previous taxonomy annotation, right? Maybe some ways exists to extract this type of custom report from the already taxonomy assigned database?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491
https://github.com/soedinglab/MMseqs2/issues/492:94,Usability,simpl,simple,94,"Hi I am new to MMseqs2 (and the coding world in general). What I want to do I am sure is very simple I just cannot seem to figure out how to do it. I ran a query protein sequence against the UniProtKB/Swiss-Prot database. The resultant ResultDB showed 20 hits. I want to extract those sequences corresponding to the 20 hits to do a MSA using ClustalO. Is there a way to obtain the actual sequences corresponding to the hits from a search query and convert them to fasta format?. I tried using the creattsv function to convert the ResultDB to a tsv file, but because there is no header information the convert2fasta function did not work. Any help or suggestions would be appreciated. . Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/492
https://github.com/soedinglab/MMseqs2/issues/494:48,Availability,down,downloaded,48,"## Expected Behavior; The Resfinder database is downloaded and an mmseqs2 index is created. ## Current Behavior; Fails at the download extraction step. ## Steps to Reproduce (for bugs); mmseqs databases Resfinder db/rf tmp. ## MMseqs Output (for bugs); databases Resfinder db/rf tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. --2021-10-08 14:50:24-- https://api.bitbucket.org/2.0/repositories/genomicepidemiology/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494
https://github.com/soedinglab/MMseqs2/issues/494:126,Availability,down,download,126,"## Expected Behavior; The Resfinder database is downloaded and an mmseqs2 index is created. ## Current Behavior; Fails at the download extraction step. ## Steps to Reproduce (for bugs); mmseqs databases Resfinder db/rf tmp. ## MMseqs Output (for bugs); databases Resfinder db/rf tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. --2021-10-08 14:50:24-- https://api.bitbucket.org/2.0/repositories/genomicepidemiology/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494
https://github.com/soedinglab/MMseqs2/issues/494:1958,Availability,Error,Error,1958,"/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): h95f258a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): singularity container downloaded from Biocontainers; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon 8268, 192GB RAM; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494
https://github.com/soedinglab/MMseqs2/issues/494:2318,Availability,down,downloaded,2318,"/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): h95f258a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): singularity container downloaded from Biocontainers; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon 8268, 192GB RAM; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494
https://github.com/soedinglab/MMseqs2/issues/494:543,Security,hash,hash,543,"## Expected Behavior; The Resfinder database is downloaded and an mmseqs2 index is created. ## Current Behavior; Fails at the download extraction step. ## Steps to Reproduce (for bugs); mmseqs databases Resfinder db/rf tmp. ## MMseqs Output (for bugs); databases Resfinder db/rf tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. --2021-10-08 14:50:24-- https://api.bitbucket.org/2.0/repositories/genomicepidemiology/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494
https://github.com/soedinglab/MMseqs2/pull/496:63,Availability,error,error,63,Requesting from the current urls with ftp as protocol gives me error as follows:. `Invalid request. Privoxy doesn't support FTP.`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/496
https://github.com/soedinglab/MMseqs2/pull/496:45,Integrability,protocol,protocol,45,Requesting from the current urls with ftp as protocol gives me error as follows:. `Invalid request. Privoxy doesn't support FTP.`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/496
https://github.com/soedinglab/MMseqs2/issues/497:216,Performance,load,load-mode,216,"The colabdb_search.sh script calls `mmseqs result2msa --msa-format-mode 6` (`""${MMSEQS}"" result2msa ""${BASE}/qdb"" ""${DBBASE}/${DB1}.idx"" ""${BASE}/res_exp_realign_filter"" ""${BASE}/uniref.a3m"" --msa-format-mode 6 --db-load-mode 2 ${FILTER_PARAM}` to be exact), which replaces `X` with `-` in the query. [Q58725.fasta](https://www.uniprot.org/uniprot/Q58725.fasta) according to uniprot:. ```; >sp|Q58725|MAP2_METJA Methionine aminopeptidase OS=Methanocaldococcus jannaschii (strain ATCC 43067 / DSM 2661 / JAL-1 / JCM 10045 / NBRC 100440) OX=243232 GN=map PE=3 SV=1; MEIEGYEKIIEAGKIASKVREEAVKLIXPGVKLLEVAEFVENRIRELGGEPAFPCNISIN; EIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYT; VIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYI; DVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAER; WVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; ```. a3m file from `result2msa` (there's a `-` in the second line):. ```; >Q58725; MEIEGYEKIIEAGKIASKVREEAVKLI-PGVKLLEVAEFVENRIRELGGEPAFPCNISINEIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYTVIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYIDVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAERWVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; >Q6GNF9	341	0.334	1.229E-101	0	293	294	159	475	480; MDqaSEEIwTDFRQAAEAHRQVRKYVMSWIKPGMTMIEICEKLEDcsrkLIKENGLYagLAFPTGCSLNNCAAHYTPNAGDPTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVKDATNTGIRCSGIDVRLCDVGEAIQEVMESYeveidGktyqVKPIRNLNGHSIGPYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVINEKFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDMKGSYTAQFEHTILLRPNCKEVVSR; >A0A3B3D0Y5	336	0.331	1.005E-99	0	293	294	180	496	501; MDkaNEEmWNDFRQAAEAHRQVRKHVRSFLKPGMTMIEICERLEDcsrkLIKENGlnAGLAFPTGCSLNHCAAHYTPNAGDTTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVRDATNTGIKNAGIDVRLCDVGEAIQEVMESYeveldGktyqVKPIRNLNGHSIGQYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVVNENFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDTKGCYTAQFEHTILLRPTCKEVVSR; ```. ## E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/497
https://github.com/soedinglab/MMseqs2/issues/498:1297,Deployability,configurat,configuration,1297,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498
https://github.com/soedinglab/MMseqs2/issues/498:1297,Modifiability,config,configuration,1297,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498
https://github.com/soedinglab/MMseqs2/issues/498:115,Performance,perform,perform,115,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498
https://github.com/soedinglab/MMseqs2/issues/498:75,Usability,guid,guide,75,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498
https://github.com/soedinglab/MMseqs2/issues/499:1098,Deployability,install,installed,1098,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499
https://github.com/soedinglab/MMseqs2/issues/499:982,Modifiability,config,config,982,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499
https://github.com/soedinglab/MMseqs2/issues/499:1031,Modifiability,config,config,1031,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499
https://github.com/soedinglab/MMseqs2/issues/499:1568,Performance,cache,cache,1568,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499
https://github.com/soedinglab/MMseqs2/issues/501:533,Availability,error,error,533,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:71,Deployability,update,update,71,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:285,Deployability,update,updated,285,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:307,Deployability,update,update,307,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:410,Deployability,update,updated,410,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1282,Deployability,update,update,1282,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1347,Deployability,update,updatedDB,1347,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1430,Deployability,update,updatedDB,1430,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1440,Deployability,update,updatedDB,1440,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1464,Deployability,update,updated,1464,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1010,Performance,Perform,Performing,1010,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/501:1259,Performance,Perform,Performing,1259,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501
https://github.com/soedinglab/MMseqs2/issues/503:211,Availability,down,downloaded,211,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503
https://github.com/soedinglab/MMseqs2/issues/503:240,Deployability,install,installation,240,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503
https://github.com/soedinglab/MMseqs2/issues/503:1504,Usability,learn,learning,1504,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503
https://github.com/soedinglab/MMseqs2/issues/504:56,Availability,down,downloading,56,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504
https://github.com/soedinglab/MMseqs2/issues/504:114,Safety,predict,predicting,114,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504
https://github.com/soedinglab/MMseqs2/issues/504:504,Usability,simpl,simplicity,504,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504
https://github.com/soedinglab/MMseqs2/issues/505:204,Integrability,message,message,204,"I would like to specify in a `mmseqs search` command the effective size of a database, the way blastp allows with the `-dbsize` option. I have not been able to find an analogous option in the MMseqs help message, am I missing anything?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/505
https://github.com/soedinglab/MMseqs2/issues/507:244,Availability,down,downloading,244,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:578,Availability,error,error,578,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:1961,Availability,Mask,Mask,1961,"ps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:1979,Availability,Mask,Mask,1979,"ps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:3150,Availability,error,error,3150,"; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub-mat"" (Seed substitution matrix)?; `. For some reason I couldn't switch to nucleotide search. Do you know how can I fix this?; Thanks for your help with this. Andrés. ## Your Environment. conda version of mmseqs MMseqs2 Version: 13.45111. ## Operating system and version:; Fedora",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:2258,Integrability,wrap,wrapped,2258,"p sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:776,Performance,perform,performed,776,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:2978,Performance,perform,performed,2978,"; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub-mat"" (Seed substitution matrix)?; `. For some reason I couldn't switch to nucleotide search. Do you know how can I fix this?; Thanks for your help with this. Andrés. ## Your Environment. conda version of mmseqs MMseqs2 Version: 13.45111. ## Operating system and version:; Fedora",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/507:324,Safety,predict,predicting,324,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507
https://github.com/soedinglab/MMseqs2/issues/508:669,Availability,error,error,669,"Hi,I'm trying to convert the MSA of a cluster DB to HH-blits format. Following the user guide below. > mmseqs cluster DB clu tmp; mmseqs result2msa DB DB clu cluMsa --msa-format-mode 1; ln -s DB_h cluMsa_header.ffdata; ln -s DB_h.index cluMsa_header.ffindex; ln -s DB cluMsa_sequence.ffdata; ln -s DB.index cluMsa_sequence.ffindex; mpirun -np 2 cstranslate_mpi -i cluMsa -o cluMsa_cs219 -A /path/to/cs219.lib -D /path/to/context_data.lib -x 0.3 -c 4 -I ca3m -b. However, I notice there is no one file named clusMsa, although 11 files with different file extensions are outputed. And the 'ln -s' links seems to be unnecessary.; When I try to run cstranslate, I got this error:. > Unable to read input file 'clu_msa'. I think the file not existing.; So how to realize the output file of result2msa? If I just need the single clu_msa file for next analysis, is there any way to get it?. My mmseqs version is 13.45111 and CPU support for AVX2/SSE.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508
https://github.com/soedinglab/MMseqs2/issues/508:88,Usability,guid,guide,88,"Hi,I'm trying to convert the MSA of a cluster DB to HH-blits format. Following the user guide below. > mmseqs cluster DB clu tmp; mmseqs result2msa DB DB clu cluMsa --msa-format-mode 1; ln -s DB_h cluMsa_header.ffdata; ln -s DB_h.index cluMsa_header.ffindex; ln -s DB cluMsa_sequence.ffdata; ln -s DB.index cluMsa_sequence.ffindex; mpirun -np 2 cstranslate_mpi -i cluMsa -o cluMsa_cs219 -A /path/to/cs219.lib -D /path/to/context_data.lib -x 0.3 -c 4 -I ca3m -b. However, I notice there is no one file named clusMsa, although 11 files with different file extensions are outputed. And the 'ln -s' links seems to be unnecessary.; When I try to run cstranslate, I got this error:. > Unable to read input file 'clu_msa'. I think the file not existing.; So how to realize the output file of result2msa? If I just need the single clu_msa file for next analysis, is there any way to get it?. My mmseqs version is 13.45111 and CPU support for AVX2/SSE.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508
https://github.com/soedinglab/MMseqs2/issues/509:452,Availability,ERROR,ERROR,452,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:805,Availability,error,error,805,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:117,Integrability,wrap,wrapped-scoring,117,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:196,Integrability,wrap,wrapped-scoring,196,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:385,Integrability,wrap,wrapped-scoring,385,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:459,Integrability,wrap,wrapped,459,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:850,Integrability,wrap,wrapped-scoring,850,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/509:887,Testability,test,test,887,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509
https://github.com/soedinglab/MMseqs2/issues/510:182,Availability,error,error,182,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/510:1322,Availability,Error,Error,1322,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/510:430,Energy Efficiency,allocate,allocate,430,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/510:668,Integrability,wrap,wrapped-scoring,668,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/510:1112,Modifiability,extend,extend,1112,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/510:887,Performance,load,load-mode,887,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510
https://github.com/soedinglab/MMseqs2/issues/511:65,Availability,error,error,65,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511
https://github.com/soedinglab/MMseqs2/issues/511:289,Availability,Error,Error,289,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511
https://github.com/soedinglab/MMseqs2/issues/511:319,Availability,Error,Error,319,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511
https://github.com/soedinglab/MMseqs2/issues/511:397,Availability,down,download,397,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511
https://github.com/soedinglab/MMseqs2/issues/511:151,Safety,Abort,Aborted,151,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511
https://github.com/soedinglab/MMseqs2/issues/512:24,Performance,perform,perform,24,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512
https://github.com/soedinglab/MMseqs2/issues/512:116,Usability,clear,clear,116,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512
https://github.com/soedinglab/MMseqs2/issues/513:284,Availability,fault,fault,284,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:305,Availability,Error,Error,305,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:1599,Availability,Mask,Mask,1599," aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 35; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:1616,Availability,Mask,Mask,1616," aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 35; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:1808,Availability,Mask,Mask,1808,"ignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 35; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:3261,Availability,mask,mask,3261,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:3270,Availability,mask,mask-lower-case,3270,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:3801,Availability,Mask,Masked,3801,"prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5828,Availability,fault,fault,5828,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5849,Availability,Error,Error,5849,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:180,Energy Efficiency,allocate,allocate,180,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:218,Energy Efficiency,allocate,allocate,218,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:3551,Energy Efficiency,consumption,consumption,3551,"1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5724,Energy Efficiency,allocate,allocate,5724,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5762,Energy Efficiency,allocate,allocate,5762,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:686,Integrability,wrap,wrapped,686,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5050,Integrability,wrap,wrapped-scoring,5050,"ers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5494,Modifiability,extend,extend,5494,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:3359,Performance,load,load-mode,3359,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/513:5269,Performance,load,load-mode,5269,"index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Tit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513
https://github.com/soedinglab/MMseqs2/issues/514:290,Deployability,release,releases,290,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514
https://github.com/soedinglab/MMseqs2/issues/514:41,Usability,guid,guide,41,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514
https://github.com/soedinglab/MMseqs2/issues/515:59700,Availability,Mask,Mask,59700,"===================================================================	441 Mio. sequences processed; ===================================================================================================	442 Mio. sequences processed; ===================================================================================================	443 Mio. sequences processed; ===================================================================================================	444 Mio. sequences processed; ============================================================; Time for merging to NR_h: 0h 3m 55s 886ms; Time for merging to NR: 0h 7m 40s 283ms; Database type: Aminoacid; Time for processing: 1h 17m 9s 618ms; ```; This is the output for `createindex`:; ```; createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower cas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:59718,Availability,Mask,Mask,59718,"===================================================================	441 Mio. sequences processed; ===================================================================================================	442 Mio. sequences processed; ===================================================================================================	443 Mio. sequences processed; ===================================================================================================	444 Mio. sequences processed; ============================================================; Time for merging to NR_h: 0h 3m 55s 886ms; Time for merging to NR: 0h 7m 40s 283ms; Database type: Aminoacid; Time for processing: 1h 17m 9s 618ms; ```; This is the output for `createindex`:; ```; createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower cas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:60655,Availability,Mask,Mask,60655,"; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:60673,Availability,Mask,Mask,60673,"; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex refDB/NR tmp --split-memory-limit 100G . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:61505,Availability,mask,mask,61505," matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:61514,Availability,mask,mask-lower-case,61514," matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	100G; Verbosity 	3; Threads 	48; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:62127,Availability,Mask,Masked,62127,"lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [=================================================================] 10.85M 1m 22s 65ms; Index statistics; Entries: 3849611059; DB size: 31793 MB; Avg k-mer size: 3.007509; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	29650; ATQAYAV	29520; GLGTVAK	29423; KLKLNKS	29407; LAYGSGV	29406; GSLGSSV	29390; MLYKVMT	29388; AC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:62816,Availability,Mask,Masked,62816,(2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [=================================================================] 10.85M 1m 22s 65ms; Index statistics; Entries: 3849611059; DB size: 31793 MB; Avg k-mer size: 3.007509; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	29650; ATQAYAV	29520; GLGTVAK	29423; KLKLNKS	29407; LAYGSGV	29406; GSLGSSV	29390; MLYKVMT	29388; ACNSPVY	29374; NEQILVS	29366; Write ENTRIES (1009); Write ENTRIESOFFSETS (1010); Write SEQINDEXDATASIZE (1015); Write SEQINDEXSEQOFFSET (1016); Write SEQINDEXDATA (1014); Write ENTRIESNUM (1012); Write SEQCOUNT (1013); Index table: counting k-mers; [=================================================================] 10.84M 1m 9s 665ms; Index table: Masked residues: 61188721; Index table: fill; [=================================================================] 10.84M 1m 30s 911ms; Index statistics; Entries: 3850232186; DB size: 31796 MB; Avg k-mer size: 3.007994; Top 10 k-mers; SGQQRIA	33408; FLLLLLA	30301; ATQAYAV	30153; AVNDSVL	30055; DNALQAS	30055; LAYGSGV	30055; SVAYNPS	30029; GS,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:63519,Availability,Mask,Masked,63519, SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [=================================================================] 10.85M 1m 22s 65ms; Index statistics; Entries: 3849611059; DB size: 31793 MB; Avg k-mer size: 3.007509; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	29650; ATQAYAV	29520; GLGTVAK	29423; KLKLNKS	29407; LAYGSGV	29406; GSLGSSV	29390; MLYKVMT	29388; ACNSPVY	29374; NEQILVS	29366; Write ENTRIES (1009); Write ENTRIESOFFSETS (1010); Write SEQINDEXDATASIZE (1015); Write SEQINDEXSEQOFFSET (1016); Write SEQINDEXDATA (1014); Write ENTRIESNUM (1012); Write SEQCOUNT (1013); Index table: counting k-mers; [=================================================================] 10.84M 1m 9s 665ms; Index table: Masked residues: 61188721; Index table: fill; [=================================================================] 10.84M 1m 30s 911ms; Index statistics; Entries: 3850232186; DB size: 31796 MB; Avg k-mer size: 3.007994; Top 10 k-mers; SGQQRIA	33408; FLLLLLA	30301; ATQAYAV	30153; AVNDSVL	30055; DNALQAS	30055; LAYGSGV	30055; SVAYNPS	30029; GSLGSSV	30023; ISEQEGT	30012; ACNSPVY	30011; Write ENTRIES (2009); Write ENTRIESOFFSETS (2010); Write SEQINDEXDATASIZE (2015); Write SEQINDEXSEQOFFSET (2016); Write SEQINDEXDATA (2014); Write ENTRIESNUM (2012); Write SEQCOUNT (2013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 736ms; Index table: Masked residues: 61279535; Index table: fill; [=================================================================] 10.84M 1m 21s 843ms; Index statistics; Entries: 3850105067; DB size: 31796 MB; Avg k-mer size: 3.007895; Top 10 k-mers; SGQQRIA	32981; FLLLLLA	30126; ATQAYAV	29941; GSLGSSV	29847; EKVLLLL	29841; KLKLNKS	29837; DNALQAS	29818; H,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:64223,Availability,Mask,Masked,64223,TASIZE (1015); Write SEQINDEXSEQOFFSET (1016); Write SEQINDEXDATA (1014); Write ENTRIESNUM (1012); Write SEQCOUNT (1013); Index table: counting k-mers; [=================================================================] 10.84M 1m 9s 665ms; Index table: Masked residues: 61188721; Index table: fill; [=================================================================] 10.84M 1m 30s 911ms; Index statistics; Entries: 3850232186; DB size: 31796 MB; Avg k-mer size: 3.007994; Top 10 k-mers; SGQQRIA	33408; FLLLLLA	30301; ATQAYAV	30153; AVNDSVL	30055; DNALQAS	30055; LAYGSGV	30055; SVAYNPS	30029; GSLGSSV	30023; ISEQEGT	30012; ACNSPVY	30011; Write ENTRIES (2009); Write ENTRIESOFFSETS (2010); Write SEQINDEXDATASIZE (2015); Write SEQINDEXSEQOFFSET (2016); Write SEQINDEXDATA (2014); Write ENTRIESNUM (2012); Write SEQCOUNT (2013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 736ms; Index table: Masked residues: 61279535; Index table: fill; [=================================================================] 10.84M 1m 21s 843ms; Index statistics; Entries: 3850105067; DB size: 31796 MB; Avg k-mer size: 3.007895; Top 10 k-mers; SGQQRIA	32981; FLLLLLA	30126; ATQAYAV	29941; GSLGSSV	29847; EKVLLLL	29841; KLKLNKS	29837; DNALQAS	29818; HALLFPS	29817; SVAYNPS	29814; MLYKVMT	29808; Write ENTRIES (3009); Write ENTRIESOFFSETS (3010); Write SEQINDEXDATASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; F,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:64927,Availability,Mask,Masked,64927,TASIZE (2015); Write SEQINDEXSEQOFFSET (2016); Write SEQINDEXDATA (2014); Write ENTRIESNUM (2012); Write SEQCOUNT (2013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 736ms; Index table: Masked residues: 61279535; Index table: fill; [=================================================================] 10.84M 1m 21s 843ms; Index statistics; Entries: 3850105067; DB size: 31796 MB; Avg k-mer size: 3.007895; Top 10 k-mers; SGQQRIA	32981; FLLLLLA	30126; ATQAYAV	29941; GSLGSSV	29847; EKVLLLL	29841; KLKLNKS	29837; DNALQAS	29818; HALLFPS	29817; SVAYNPS	29814; MLYKVMT	29808; Write ENTRIES (3009); Write ENTRIESOFFSETS (3010); Write SEQINDEXDATASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; FSLCYSP	29805; ILSISKQ	29801; TELKAKV	29800; Write ENTRIES (4009); Write ENTRIESOFFSETS (4010); Write SEQINDEXDATASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; S,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:65631,Availability,Mask,Masked,65631,TASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; FSLCYSP	29805; ILSISKQ	29801; TELKAKV	29800; Write ENTRIES (4009); Write ENTRIESOFFSETS (4010); Write SEQINDEXDATASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; SVAYNPS	29704; ACNSPVY	29692; GQFVLYN	29673; Write ENTRIES (5009); Write ENTRIESOFFSETS (5010); Write SEQINDEXDATASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; F,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:66335,Availability,Mask,Masked,66335,TASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; SVAYNPS	29704; ACNSPVY	29692; GQFVLYN	29673; Write ENTRIES (5009); Write ENTRIESOFFSETS (5010); Write SEQINDEXDATASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; FSLCYSP	29963; KLKLNKS	29958; HALLFPS	29956; Write ENTRIES (6009); Write ENTRIESOFFSETS (6010); Write SEQINDEXDATASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; S,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:67039,Availability,Mask,Masked,67039,TASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; FSLCYSP	29963; KLKLNKS	29958; HALLFPS	29956; Write ENTRIES (6009); Write ENTRIESOFFSETS (6010); Write SEQINDEXDATASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; SVAYNPS	29827; ACNSPVY	29817; FLPLAAY	29796; Write ENTRIES (7009); Write ENTRIESOFFSETS (7010); Write SEQINDEXDATASIZE (7015); Write SEQINDEXSEQOFFSET (7016); Write SEQINDEXDATA (7014); Write ENTRIESNUM (7012); Write SEQCOUNT (7013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 797ms; Index table: Masked residues: 61311938; Index table: fill; [=================================================================] 10.84M 1m 21s 46ms; Index statistics; Entries: 3850086594; DB size: 31795 MB; Avg k-mer size: 3.007880; Top 10 k-mers; SGQQRIA	33346; FLLLLLA	30182; ATQAYAV	30024; KLKLNKS	29930; AVNDSVL	29924; LAYGSGV	29921; MLYKVMT	29906; GS,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:67743,Availability,Mask,Masked,67743,TASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; SVAYNPS	29827; ACNSPVY	29817; FLPLAAY	29796; Write ENTRIES (7009); Write ENTRIESOFFSETS (7010); Write SEQINDEXDATASIZE (7015); Write SEQINDEXSEQOFFSET (7016); Write SEQINDEXDATA (7014); Write ENTRIESNUM (7012); Write SEQCOUNT (7013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 797ms; Index table: Masked residues: 61311938; Index table: fill; [=================================================================] 10.84M 1m 21s 46ms; Index statistics; Entries: 3850086594; DB size: 31795 MB; Avg k-mer size: 3.007880; Top 10 k-mers; SGQQRIA	33346; FLLLLLA	30182; ATQAYAV	30024; KLKLNKS	29930; AVNDSVL	29924; LAYGSGV	29921; MLYKVMT	29906; GSLGSSV	29905; ACNSPVY	29878; LTNVETP	29872; Write ENTRIES (8009); Write ENTRIESOFFSETS (8010); Write SEQINDEXDATASIZE (8015); Write SEQINDEXSEQOFFSET (8016); Write SEQINDEXDATA (8014); Write ENTRIESNUM (8012); Write SEQCOUNT (8013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 400ms; Index table: Masked residues: 61287007; Index table: fill; [=================================================================] 10.84M 1m 21s 849ms; Index statistics; Entries: 3850445130; DB size: 31798 MB; Avg k-mer size: 3.008160; Top 10 k-mers; SGQQRIA	33244; FLLLLLA	30250; ATQAYAV	30105; GLGTVAK	30034; KLKLNKS	30017; LAYGSGV	30007; GSLGSSV	29989; AC,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:68446,Availability,Mask,Masked,68446,ATASIZE (7015); Write SEQINDEXSEQOFFSET (7016); Write SEQINDEXDATA (7014); Write ENTRIESNUM (7012); Write SEQCOUNT (7013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 797ms; Index table: Masked residues: 61311938; Index table: fill; [=================================================================] 10.84M 1m 21s 46ms; Index statistics; Entries: 3850086594; DB size: 31795 MB; Avg k-mer size: 3.007880; Top 10 k-mers; SGQQRIA	33346; FLLLLLA	30182; ATQAYAV	30024; KLKLNKS	29930; AVNDSVL	29924; LAYGSGV	29921; MLYKVMT	29906; GSLGSSV	29905; ACNSPVY	29878; LTNVETP	29872; Write ENTRIES (8009); Write ENTRIESOFFSETS (8010); Write SEQINDEXDATASIZE (8015); Write SEQINDEXSEQOFFSET (8016); Write SEQINDEXDATA (8014); Write ENTRIESNUM (8012); Write SEQCOUNT (8013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 400ms; Index table: Masked residues: 61287007; Index table: fill; [=================================================================] 10.84M 1m 21s 849ms; Index statistics; Entries: 3850445130; DB size: 31798 MB; Avg k-mer size: 3.008160; Top 10 k-mers; SGQQRIA	33244; FLLLLLA	30250; ATQAYAV	30105; GLGTVAK	30034; KLKLNKS	30017; LAYGSGV	30007; GSLGSSV	29989; ACNSPVY	29970; HALLFPS	29959; ISEQEGT	29956; Write ENTRIES (9009); Write ENTRIESOFFSETS (9010); Write SEQINDEXDATASIZE (9015); Write SEQINDEXSEQOFFSET (9016); Write SEQINDEXDATA (9014); Write ENTRIESNUM (9012); Write SEQCOUNT (9013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 678ms; Index table: Masked residues: 61466528; Index table: fill; [=================================================================] 10.85M 1m 30s 622ms; Index statistics; Entries: 3849908410; DB size: 31794 MB; Avg k-mer size: 3.007741; Top 10 k-mers; SGQQRIA	33047; FLLLLLA	30087; ATQAYAV	29938; KLKLNKS	29845; LAYGSGV	29839; SVAYNPS	29821; GSLGSSV	29801; A,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:69150,Availability,Mask,Masked,69150,TASIZE (8015); Write SEQINDEXSEQOFFSET (8016); Write SEQINDEXDATA (8014); Write ENTRIESNUM (8012); Write SEQCOUNT (8013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 400ms; Index table: Masked residues: 61287007; Index table: fill; [=================================================================] 10.84M 1m 21s 849ms; Index statistics; Entries: 3850445130; DB size: 31798 MB; Avg k-mer size: 3.008160; Top 10 k-mers; SGQQRIA	33244; FLLLLLA	30250; ATQAYAV	30105; GLGTVAK	30034; KLKLNKS	30017; LAYGSGV	30007; GSLGSSV	29989; ACNSPVY	29970; HALLFPS	29959; ISEQEGT	29956; Write ENTRIES (9009); Write ENTRIESOFFSETS (9010); Write SEQINDEXDATASIZE (9015); Write SEQINDEXSEQOFFSET (9016); Write SEQINDEXDATA (9014); Write ENTRIESNUM (9012); Write SEQCOUNT (9013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 678ms; Index table: Masked residues: 61466528; Index table: fill; [=================================================================] 10.85M 1m 30s 622ms; Index statistics; Entries: 3849908410; DB size: 31794 MB; Avg k-mer size: 3.007741; Top 10 k-mers; SGQQRIA	33047; FLLLLLA	30087; ATQAYAV	29938; KLKLNKS	29845; LAYGSGV	29839; SVAYNPS	29821; GSLGSSV	29801; ACNSPVY	29799; KHFCLLP	29784; VVLVLLR	29783; Write ENTRIES (10009); Write ENTRIESOFFSETS (10010); Write SEQINDEXDATASIZE (10015); Write SEQINDEXSEQOFFSET (10016); Write SEQINDEXDATA (10014); Write ENTRIESNUM (10012); Write SEQCOUNT (10013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 921ms; Index table: Masked residues: 61076649; Index table: fill; [=================================================================] 10.84M 1m 21s 691ms; Index statistics; Entries: 3850338479; DB size: 31797 MB; Avg k-mer size: 3.008077; Top 10 k-mers; SGQQRIA	32957; FLLLLLA	30300; ATQAYAV	30150; VLCNGSG	30032; LAYGSGV	30032; AVNDSVL	30028; CYGPSYQ	3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:69861,Availability,Mask,Masked,69861,(9015); Write SEQINDEXSEQOFFSET (9016); Write SEQINDEXDATA (9014); Write ENTRIESNUM (9012); Write SEQCOUNT (9013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 678ms; Index table: Masked residues: 61466528; Index table: fill; [=================================================================] 10.85M 1m 30s 622ms; Index statistics; Entries: 3849908410; DB size: 31794 MB; Avg k-mer size: 3.007741; Top 10 k-mers; SGQQRIA	33047; FLLLLLA	30087; ATQAYAV	29938; KLKLNKS	29845; LAYGSGV	29839; SVAYNPS	29821; GSLGSSV	29801; ACNSPVY	29799; KHFCLLP	29784; VVLVLLR	29783; Write ENTRIES (10009); Write ENTRIESOFFSETS (10010); Write SEQINDEXDATASIZE (10015); Write SEQINDEXSEQOFFSET (10016); Write SEQINDEXDATA (10014); Write ENTRIESNUM (10012); Write SEQCOUNT (10013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 921ms; Index table: Masked residues: 61076649; Index table: fill; [=================================================================] 10.84M 1m 21s 691ms; Index statistics; Entries: 3850338479; DB size: 31797 MB; Avg k-mer size: 3.008077; Top 10 k-mers; SGQQRIA	32957; FLLLLLA	30300; ATQAYAV	30150; VLCNGSG	30032; LAYGSGV	30032; AVNDSVL	30028; CYGPSYQ	30023; TELKAKV	30017; SVAYNPS	30014; GSLGSSV	30004; Write ENTRIES (11009); Write ENTRIESOFFSETS (11010); Write SEQINDEXDATASIZE (11015); Write SEQINDEXSEQOFFSET (11016); Write SEQINDEXDATA (11014); Write ENTRIESNUM (11012); Write SEQCOUNT (11013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 855ms; Index table: Masked residues: 61187843; Index table: fill; [=================================================================] 10.85M 1m 30s 773ms; Index statistics; Entries: 3850149201; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	33023; FLLLLLA	30135; ATQAYAV	29963; LAYGSGV	29880; SVAYNPS	29853; GSLGSSV	29842; HALLFPS	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:70572,Availability,Mask,Masked,70572,5); Write SEQINDEXSEQOFFSET (10016); Write SEQINDEXDATA (10014); Write ENTRIESNUM (10012); Write SEQCOUNT (10013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 921ms; Index table: Masked residues: 61076649; Index table: fill; [=================================================================] 10.84M 1m 21s 691ms; Index statistics; Entries: 3850338479; DB size: 31797 MB; Avg k-mer size: 3.008077; Top 10 k-mers; SGQQRIA	32957; FLLLLLA	30300; ATQAYAV	30150; VLCNGSG	30032; LAYGSGV	30032; AVNDSVL	30028; CYGPSYQ	30023; TELKAKV	30017; SVAYNPS	30014; GSLGSSV	30004; Write ENTRIES (11009); Write ENTRIESOFFSETS (11010); Write SEQINDEXDATASIZE (11015); Write SEQINDEXSEQOFFSET (11016); Write SEQINDEXDATA (11014); Write ENTRIESNUM (11012); Write SEQCOUNT (11013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 855ms; Index table: Masked residues: 61187843; Index table: fill; [=================================================================] 10.85M 1m 30s 773ms; Index statistics; Entries: 3850149201; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	33023; FLLLLLA	30135; ATQAYAV	29963; LAYGSGV	29880; SVAYNPS	29853; GSLGSSV	29842; HALLFPS	29838; ACNSPVY	29836; KLKLNKS	29820; ISEQEGT	29805; Write ENTRIES (12009); Write ENTRIESOFFSETS (12010); Write SEQINDEXDATASIZE (12015); Write SEQINDEXSEQOFFSET (12016); Write SEQINDEXDATA (12014); Write ENTRIESNUM (12012); Write SEQCOUNT (12013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 214ms; Index table: Masked residues: 61302946; Index table: fill; [=================================================================] 10.84M 1m 22s 633ms; Index statistics; Entries: 3850002684; DB size: 31795 MB; Avg k-mer size: 3.007815; Top 10 k-mers; SGQQRIA	33277; FLLLLLA	30092; ATQAYAV	29927; MVVCGTL	29836; KLKLNKS	29833; LAYGSGV	29827; GSLGSSV	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:71283,Availability,Mask,Masked,71283,5); Write SEQINDEXSEQOFFSET (11016); Write SEQINDEXDATA (11014); Write ENTRIESNUM (11012); Write SEQCOUNT (11013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 855ms; Index table: Masked residues: 61187843; Index table: fill; [=================================================================] 10.85M 1m 30s 773ms; Index statistics; Entries: 3850149201; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	33023; FLLLLLA	30135; ATQAYAV	29963; LAYGSGV	29880; SVAYNPS	29853; GSLGSSV	29842; HALLFPS	29838; ACNSPVY	29836; KLKLNKS	29820; ISEQEGT	29805; Write ENTRIES (12009); Write ENTRIESOFFSETS (12010); Write SEQINDEXDATASIZE (12015); Write SEQINDEXSEQOFFSET (12016); Write SEQINDEXDATA (12014); Write ENTRIESNUM (12012); Write SEQCOUNT (12013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 214ms; Index table: Masked residues: 61302946; Index table: fill; [=================================================================] 10.84M 1m 22s 633ms; Index statistics; Entries: 3850002684; DB size: 31795 MB; Avg k-mer size: 3.007815; Top 10 k-mers; SGQQRIA	33277; FLLLLLA	30092; ATQAYAV	29927; MVVCGTL	29836; KLKLNKS	29833; LAYGSGV	29827; GSLGSSV	29825; ILSISKQ	29800; LKTNVKN	29795; ACNSPVY	29795; Write ENTRIES (13009); Write ENTRIESOFFSETS (13010); Write SEQINDEXDATASIZE (13015); Write SEQINDEXSEQOFFSET (13016); Write SEQINDEXDATA (13014); Write ENTRIESNUM (13012); Write SEQCOUNT (13013); Index table: counting k-mers; [=================================================================] 10.85M 1m 6s 563ms; Index table: Masked residues: 61272135; Index table: fill; [=================================================================] 10.85M 1m 21s 448ms; Index statistics; Entries: 3850117980; DB size: 31796 MB; Avg k-mer size: 3.007905; Top 10 k-mers; SGQQRIA	33363; FLLLLLA	29998; ATQAYAV	29857; AVNDSVL	29755; LAYGSGV	29740; GSLGSSV	29722; MVVCGTL	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:71994,Availability,Mask,Masked,71994,5); Write SEQINDEXSEQOFFSET (12016); Write SEQINDEXDATA (12014); Write ENTRIESNUM (12012); Write SEQCOUNT (12013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 214ms; Index table: Masked residues: 61302946; Index table: fill; [=================================================================] 10.84M 1m 22s 633ms; Index statistics; Entries: 3850002684; DB size: 31795 MB; Avg k-mer size: 3.007815; Top 10 k-mers; SGQQRIA	33277; FLLLLLA	30092; ATQAYAV	29927; MVVCGTL	29836; KLKLNKS	29833; LAYGSGV	29827; GSLGSSV	29825; ILSISKQ	29800; LKTNVKN	29795; ACNSPVY	29795; Write ENTRIES (13009); Write ENTRIESOFFSETS (13010); Write SEQINDEXDATASIZE (13015); Write SEQINDEXSEQOFFSET (13016); Write SEQINDEXDATA (13014); Write ENTRIESNUM (13012); Write SEQCOUNT (13013); Index table: counting k-mers; [=================================================================] 10.85M 1m 6s 563ms; Index table: Masked residues: 61272135; Index table: fill; [=================================================================] 10.85M 1m 21s 448ms; Index statistics; Entries: 3850117980; DB size: 31796 MB; Avg k-mer size: 3.007905; Top 10 k-mers; SGQQRIA	33363; FLLLLLA	29998; ATQAYAV	29857; AVNDSVL	29755; LAYGSGV	29740; GSLGSSV	29722; MVVCGTL	29711; MLYKVMT	29710; HALLFPS	29694; ACNSPVY	29694; Write ENTRIES (14009); Write ENTRIESOFFSETS (14010); Write SEQINDEXDATASIZE (14015); Write SEQINDEXSEQOFFSET (14016); Write SEQINDEXDATA (14014); Write ENTRIESNUM (14012); Write SEQCOUNT (14013); Index table: counting k-mers; [=================================================================] 10.84M 1m 11s 175ms; Index table: Masked residues: 61180635; Index table: fill; [=================================================================] 10.84M 1m 31s 883ms; Index statistics; Entries: 3850138116; DB size: 31796 MB; Avg k-mer size: 3.007920; Top 10 k-mers; SGQQRIA	33160; FLLLLLA	30415; ATQAYAV	30219; LAYGSGV	30142; SVAYNPS	30130; GSLGSSV	30128; ACNSPVY	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:72706,Availability,Mask,Masked,72706,); Write SEQINDEXSEQOFFSET (13016); Write SEQINDEXDATA (13014); Write ENTRIESNUM (13012); Write SEQCOUNT (13013); Index table: counting k-mers; [=================================================================] 10.85M 1m 6s 563ms; Index table: Masked residues: 61272135; Index table: fill; [=================================================================] 10.85M 1m 21s 448ms; Index statistics; Entries: 3850117980; DB size: 31796 MB; Avg k-mer size: 3.007905; Top 10 k-mers; SGQQRIA	33363; FLLLLLA	29998; ATQAYAV	29857; AVNDSVL	29755; LAYGSGV	29740; GSLGSSV	29722; MVVCGTL	29711; MLYKVMT	29710; HALLFPS	29694; ACNSPVY	29694; Write ENTRIES (14009); Write ENTRIESOFFSETS (14010); Write SEQINDEXDATASIZE (14015); Write SEQINDEXSEQOFFSET (14016); Write SEQINDEXDATA (14014); Write ENTRIESNUM (14012); Write SEQCOUNT (14013); Index table: counting k-mers; [=================================================================] 10.84M 1m 11s 175ms; Index table: Masked residues: 61180635; Index table: fill; [=================================================================] 10.84M 1m 31s 883ms; Index statistics; Entries: 3850138116; DB size: 31796 MB; Avg k-mer size: 3.007920; Top 10 k-mers; SGQQRIA	33160; FLLLLLA	30415; ATQAYAV	30219; LAYGSGV	30142; SVAYNPS	30130; GSLGSSV	30128; ACNSPVY	30105; MLYKVMT	30094; FLPLAAY	30091; KLKLNKS	30076; Write ENTRIES (15009); Write ENTRIESOFFSETS (15010); Write SEQINDEXDATASIZE (15015); Write SEQINDEXSEQOFFSET (15016); Write SEQINDEXDATA (15014); Write ENTRIESNUM (15012); Write SEQCOUNT (15013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 779ms; Index table: Masked residues: 61262358; Index table: fill; [=================================================================] 10.84M 1m 22s 983ms; Index statistics; Entries: 3849957767; DB size: 31795 MB; Avg k-mer size: 3.007780; Top 10 k-mers; SGQQRIA	33057; FLLLLLA	30065; ATQAYAV	29891; LAYGSGV	29796; VLCNGSG	29781; KLKLNKS	29780; SVAYNPS	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:73417,Availability,Mask,Masked,73417,); Write SEQINDEXSEQOFFSET (14016); Write SEQINDEXDATA (14014); Write ENTRIESNUM (14012); Write SEQCOUNT (14013); Index table: counting k-mers; [=================================================================] 10.84M 1m 11s 175ms; Index table: Masked residues: 61180635; Index table: fill; [=================================================================] 10.84M 1m 31s 883ms; Index statistics; Entries: 3850138116; DB size: 31796 MB; Avg k-mer size: 3.007920; Top 10 k-mers; SGQQRIA	33160; FLLLLLA	30415; ATQAYAV	30219; LAYGSGV	30142; SVAYNPS	30130; GSLGSSV	30128; ACNSPVY	30105; MLYKVMT	30094; FLPLAAY	30091; KLKLNKS	30076; Write ENTRIES (15009); Write ENTRIESOFFSETS (15010); Write SEQINDEXDATASIZE (15015); Write SEQINDEXSEQOFFSET (15016); Write SEQINDEXDATA (15014); Write ENTRIESNUM (15012); Write SEQCOUNT (15013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 779ms; Index table: Masked residues: 61262358; Index table: fill; [=================================================================] 10.84M 1m 22s 983ms; Index statistics; Entries: 3849957767; DB size: 31795 MB; Avg k-mer size: 3.007780; Top 10 k-mers; SGQQRIA	33057; FLLLLLA	30065; ATQAYAV	29891; LAYGSGV	29796; VLCNGSG	29781; KLKLNKS	29780; SVAYNPS	29774; ACNSPVY	29763; GSLGSSV	29756; MLYKVMT	29752; Write ENTRIES (16009); Write ENTRIESOFFSETS (16010); Write SEQINDEXDATASIZE (16015); Write SEQINDEXSEQOFFSET (16016); Write SEQINDEXDATA (16014); Write ENTRIESNUM (16012); Write SEQCOUNT (16013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 149ms; Index table: Masked residues: 61004416; Index table: fill; [=================================================================] 10.84M 1m 21s 354ms; Index statistics; Entries: 3850452900; DB size: 31798 MB; Avg k-mer size: 3.008166; Top 10 k-mers; SGQQRIA	33588; FLLLLLA	30144; ATQAYAV	29993; LAYGSGV	29895; MVVCGTL	29874; AVNDSVL	29868; CYGPSYQ	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:74128,Availability,Mask,Masked,74128,5); Write SEQINDEXSEQOFFSET (15016); Write SEQINDEXDATA (15014); Write ENTRIESNUM (15012); Write SEQCOUNT (15013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 779ms; Index table: Masked residues: 61262358; Index table: fill; [=================================================================] 10.84M 1m 22s 983ms; Index statistics; Entries: 3849957767; DB size: 31795 MB; Avg k-mer size: 3.007780; Top 10 k-mers; SGQQRIA	33057; FLLLLLA	30065; ATQAYAV	29891; LAYGSGV	29796; VLCNGSG	29781; KLKLNKS	29780; SVAYNPS	29774; ACNSPVY	29763; GSLGSSV	29756; MLYKVMT	29752; Write ENTRIES (16009); Write ENTRIESOFFSETS (16010); Write SEQINDEXDATASIZE (16015); Write SEQINDEXSEQOFFSET (16016); Write SEQINDEXDATA (16014); Write ENTRIESNUM (16012); Write SEQCOUNT (16013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 149ms; Index table: Masked residues: 61004416; Index table: fill; [=================================================================] 10.84M 1m 21s 354ms; Index statistics; Entries: 3850452900; DB size: 31798 MB; Avg k-mer size: 3.008166; Top 10 k-mers; SGQQRIA	33588; FLLLLLA	30144; ATQAYAV	29993; LAYGSGV	29895; MVVCGTL	29874; AVNDSVL	29868; CYGPSYQ	29867; GSLGSSV	29864; ACNSPVY	29854; ISEQEGT	29838; Write ENTRIES (17009); Write ENTRIESOFFSETS (17010); Write SEQINDEXDATASIZE (17015); Write SEQINDEXSEQOFFSET (17016); Write SEQINDEXDATA (17014); Write ENTRIESNUM (17012); Write SEQCOUNT (17013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 890ms; Index table: Masked residues: 61440134; Index table: fill; [=================================================================] 10.85M 1m 31s 477ms; Index statistics; Entries: 3849779316; DB size: 31794 MB; Avg k-mer size: 3.007640; Top 10 k-mers; SGQQRIA	33287; FLLLLLA	29845; ATQAYAV	29665; LAYGSGV	29575; KLKLNKS	29567; GSLGSSV	29566; FSLCYSP	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:74839,Availability,Mask,Masked,74839,5); Write SEQINDEXSEQOFFSET (16016); Write SEQINDEXDATA (16014); Write ENTRIESNUM (16012); Write SEQCOUNT (16013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 149ms; Index table: Masked residues: 61004416; Index table: fill; [=================================================================] 10.84M 1m 21s 354ms; Index statistics; Entries: 3850452900; DB size: 31798 MB; Avg k-mer size: 3.008166; Top 10 k-mers; SGQQRIA	33588; FLLLLLA	30144; ATQAYAV	29993; LAYGSGV	29895; MVVCGTL	29874; AVNDSVL	29868; CYGPSYQ	29867; GSLGSSV	29864; ACNSPVY	29854; ISEQEGT	29838; Write ENTRIES (17009); Write ENTRIESOFFSETS (17010); Write SEQINDEXDATASIZE (17015); Write SEQINDEXSEQOFFSET (17016); Write SEQINDEXDATA (17014); Write ENTRIESNUM (17012); Write SEQCOUNT (17013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 890ms; Index table: Masked residues: 61440134; Index table: fill; [=================================================================] 10.85M 1m 31s 477ms; Index statistics; Entries: 3849779316; DB size: 31794 MB; Avg k-mer size: 3.007640; Top 10 k-mers; SGQQRIA	33287; FLLLLLA	29845; ATQAYAV	29665; LAYGSGV	29575; KLKLNKS	29567; GSLGSSV	29566; FSLCYSP	29555; SVAYNPS	29551; MLYKVMT	29550; ACNSPVY	29542; Write ENTRIES (18009); Write ENTRIESOFFSETS (18010); Write SEQINDEXDATASIZE (18015); Write SEQINDEXSEQOFFSET (18016); Write SEQINDEXDATA (18014); Write ENTRIESNUM (18012); Write SEQCOUNT (18013); Index table: counting k-mers; [=================================================================] 10.84M 1m 12s 514ms; Index table: Masked residues: 61281590; Index table: fill; [=================================================================] 10.84M 1m 31s 295ms; Index statistics; Entries: 3850348785; DB size: 31797 MB; Avg k-mer size: 3.008085; Top 10 k-mers; SGQQRIA	33176; FLLLLLA	30272; ATQAYAV	30107; AVNDSVL	29995; KLKLNKS	29989; LAYGSGV	29986; MVVCGTL	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:75551,Availability,Mask,Masked,75551,); Write SEQINDEXSEQOFFSET (17016); Write SEQINDEXDATA (17014); Write ENTRIESNUM (17012); Write SEQCOUNT (17013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 890ms; Index table: Masked residues: 61440134; Index table: fill; [=================================================================] 10.85M 1m 31s 477ms; Index statistics; Entries: 3849779316; DB size: 31794 MB; Avg k-mer size: 3.007640; Top 10 k-mers; SGQQRIA	33287; FLLLLLA	29845; ATQAYAV	29665; LAYGSGV	29575; KLKLNKS	29567; GSLGSSV	29566; FSLCYSP	29555; SVAYNPS	29551; MLYKVMT	29550; ACNSPVY	29542; Write ENTRIES (18009); Write ENTRIESOFFSETS (18010); Write SEQINDEXDATASIZE (18015); Write SEQINDEXSEQOFFSET (18016); Write SEQINDEXDATA (18014); Write ENTRIESNUM (18012); Write SEQCOUNT (18013); Index table: counting k-mers; [=================================================================] 10.84M 1m 12s 514ms; Index table: Masked residues: 61281590; Index table: fill; [=================================================================] 10.84M 1m 31s 295ms; Index statistics; Entries: 3850348785; DB size: 31797 MB; Avg k-mer size: 3.008085; Top 10 k-mers; SGQQRIA	33176; FLLLLLA	30272; ATQAYAV	30107; AVNDSVL	29995; KLKLNKS	29989; LAYGSGV	29986; MVVCGTL	29961; GSLGSSV	29957; ACNSPVY	29952; MLYKVMT	29936; Write ENTRIES (19009); Write ENTRIESOFFSETS (19010); Write SEQINDEXDATASIZE (19015); Write SEQINDEXSEQOFFSET (19016); Write SEQINDEXDATA (19014); Write ENTRIESNUM (19012); Write SEQCOUNT (19013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 347ms; Index table: Masked residues: 61054807; Index table: fill; [=================================================================] 10.84M 1m 21s 327ms; Index statistics; Entries: 3850437386; DB size: 31798 MB; Avg k-mer size: 3.008154; Top 10 k-mers; SGQQRIA	33395; FLLLLLA	30061; ATQAYAV	29933; LAYGSGV	29830; KLKLNKS	29820; SVAYNPS	29801; ACNSPVY	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:76262,Availability,Mask,Masked,76262,); Write SEQINDEXSEQOFFSET (18016); Write SEQINDEXDATA (18014); Write ENTRIESNUM (18012); Write SEQCOUNT (18013); Index table: counting k-mers; [=================================================================] 10.84M 1m 12s 514ms; Index table: Masked residues: 61281590; Index table: fill; [=================================================================] 10.84M 1m 31s 295ms; Index statistics; Entries: 3850348785; DB size: 31797 MB; Avg k-mer size: 3.008085; Top 10 k-mers; SGQQRIA	33176; FLLLLLA	30272; ATQAYAV	30107; AVNDSVL	29995; KLKLNKS	29989; LAYGSGV	29986; MVVCGTL	29961; GSLGSSV	29957; ACNSPVY	29952; MLYKVMT	29936; Write ENTRIES (19009); Write ENTRIESOFFSETS (19010); Write SEQINDEXDATASIZE (19015); Write SEQINDEXSEQOFFSET (19016); Write SEQINDEXDATA (19014); Write ENTRIESNUM (19012); Write SEQCOUNT (19013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 347ms; Index table: Masked residues: 61054807; Index table: fill; [=================================================================] 10.84M 1m 21s 327ms; Index statistics; Entries: 3850437386; DB size: 31798 MB; Avg k-mer size: 3.008154; Top 10 k-mers; SGQQRIA	33395; FLLLLLA	30061; ATQAYAV	29933; LAYGSGV	29830; KLKLNKS	29820; SVAYNPS	29801; ACNSPVY	29795; MLYKVMT	29785; GSLGSSV	29781; GQFVLYN	29758; Write ENTRIES (20009); Write ENTRIESOFFSETS (20010); Write SEQINDEXDATASIZE (20015); Write SEQINDEXSEQOFFSET (20016); Write SEQINDEXDATA (20014); Write ENTRIESNUM (20012); Write SEQCOUNT (20013); Index table: counting k-mers; [=================================================================] 10.85M 1m 10s 948ms; Index table: Masked residues: 61358532; Index table: fill; [=================================================================] 10.85M 1m 29s 524ms; Index statistics; Entries: 3849836671; DB size: 31794 MB; Avg k-mer size: 3.007685; Top 10 k-mers; SGQQRIA	33178; FLLLLLA	29948; ATQAYAV	29740; LAYGSGV	29648; AVNDSVL	29635; CYGPSYQ	29631; SVAYNPS	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:76974,Availability,Mask,Masked,76974,); Write SEQINDEXSEQOFFSET (19016); Write SEQINDEXDATA (19014); Write ENTRIESNUM (19012); Write SEQCOUNT (19013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 347ms; Index table: Masked residues: 61054807; Index table: fill; [=================================================================] 10.84M 1m 21s 327ms; Index statistics; Entries: 3850437386; DB size: 31798 MB; Avg k-mer size: 3.008154; Top 10 k-mers; SGQQRIA	33395; FLLLLLA	30061; ATQAYAV	29933; LAYGSGV	29830; KLKLNKS	29820; SVAYNPS	29801; ACNSPVY	29795; MLYKVMT	29785; GSLGSSV	29781; GQFVLYN	29758; Write ENTRIES (20009); Write ENTRIESOFFSETS (20010); Write SEQINDEXDATASIZE (20015); Write SEQINDEXSEQOFFSET (20016); Write SEQINDEXDATA (20014); Write ENTRIESNUM (20012); Write SEQCOUNT (20013); Index table: counting k-mers; [=================================================================] 10.85M 1m 10s 948ms; Index table: Masked residues: 61358532; Index table: fill; [=================================================================] 10.85M 1m 29s 524ms; Index statistics; Entries: 3849836671; DB size: 31794 MB; Avg k-mer size: 3.007685; Top 10 k-mers; SGQQRIA	33178; FLLLLLA	29948; ATQAYAV	29740; LAYGSGV	29648; AVNDSVL	29635; CYGPSYQ	29631; SVAYNPS	29630; GSLGSSV	29623; ACNSPVY	29604; FLPLAAY	29581; Write ENTRIES (21009); Write ENTRIESOFFSETS (21010); Write SEQINDEXDATASIZE (21015); Write SEQINDEXSEQOFFSET (21016); Write SEQINDEXDATA (21014); Write ENTRIESNUM (21012); Write SEQCOUNT (21013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 273ms; Index table: Masked residues: 61202841; Index table: fill; [=================================================================] 10.84M 1m 19s 228ms; Index statistics; Entries: 3850254812; DB size: 31796 MB; Avg k-mer size: 3.008012; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	30118; ATQAYAV	29943; VLCNGSG	29851; LAYGSGV	29851; SVAYNPS	29837; GSLGSSV	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:77685,Availability,Mask,Masked,77685,); Write SEQINDEXSEQOFFSET (20016); Write SEQINDEXDATA (20014); Write ENTRIESNUM (20012); Write SEQCOUNT (20013); Index table: counting k-mers; [=================================================================] 10.85M 1m 10s 948ms; Index table: Masked residues: 61358532; Index table: fill; [=================================================================] 10.85M 1m 29s 524ms; Index statistics; Entries: 3849836671; DB size: 31794 MB; Avg k-mer size: 3.007685; Top 10 k-mers; SGQQRIA	33178; FLLLLLA	29948; ATQAYAV	29740; LAYGSGV	29648; AVNDSVL	29635; CYGPSYQ	29631; SVAYNPS	29630; GSLGSSV	29623; ACNSPVY	29604; FLPLAAY	29581; Write ENTRIES (21009); Write ENTRIESOFFSETS (21010); Write SEQINDEXDATASIZE (21015); Write SEQINDEXSEQOFFSET (21016); Write SEQINDEXDATA (21014); Write ENTRIESNUM (21012); Write SEQCOUNT (21013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 273ms; Index table: Masked residues: 61202841; Index table: fill; [=================================================================] 10.84M 1m 19s 228ms; Index statistics; Entries: 3850254812; DB size: 31796 MB; Avg k-mer size: 3.008012; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	30118; ATQAYAV	29943; VLCNGSG	29851; LAYGSGV	29851; SVAYNPS	29837; GSLGSSV	29834; HALLFPS	29812; ACNSPVY	29806; ISEQEGT	29802; Write ENTRIES (22009); Write ENTRIESOFFSETS (22010); Write SEQINDEXDATASIZE (22015); Write SEQINDEXSEQOFFSET (22016); Write SEQINDEXDATA (22014); Write ENTRIESNUM (22012); Write SEQCOUNT (22013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 694ms; Index table: Masked residues: 61145173; Index table: fill; [=================================================================] 10.85M 1m 27s 632ms; Index statistics; Entries: 3850176462; DB size: 31796 MB; Avg k-mer size: 3.007950; Top 10 k-mers; SGQQRIA	33446; FLLLLLA	30080; ATQAYAV	29847; GSLGSSV	29771; AVNDSVL	29749; CYGPSYQ	29749; SVAYNPS	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:78397,Availability,Mask,Masked,78397,); Write SEQINDEXSEQOFFSET (21016); Write SEQINDEXDATA (21014); Write ENTRIESNUM (21012); Write SEQCOUNT (21013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 273ms; Index table: Masked residues: 61202841; Index table: fill; [=================================================================] 10.84M 1m 19s 228ms; Index statistics; Entries: 3850254812; DB size: 31796 MB; Avg k-mer size: 3.008012; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	30118; ATQAYAV	29943; VLCNGSG	29851; LAYGSGV	29851; SVAYNPS	29837; GSLGSSV	29834; HALLFPS	29812; ACNSPVY	29806; ISEQEGT	29802; Write ENTRIES (22009); Write ENTRIESOFFSETS (22010); Write SEQINDEXDATASIZE (22015); Write SEQINDEXSEQOFFSET (22016); Write SEQINDEXDATA (22014); Write ENTRIESNUM (22012); Write SEQCOUNT (22013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 694ms; Index table: Masked residues: 61145173; Index table: fill; [=================================================================] 10.85M 1m 27s 632ms; Index statistics; Entries: 3850176462; DB size: 31796 MB; Avg k-mer size: 3.007950; Top 10 k-mers; SGQQRIA	33446; FLLLLLA	30080; ATQAYAV	29847; GSLGSSV	29771; AVNDSVL	29749; CYGPSYQ	29749; SVAYNPS	29744; HALLFPS	29718; ACNSPVY	29716; KHFCLLP	29702; Write ENTRIES (23009); Write ENTRIESOFFSETS (23010); Write SEQINDEXDATASIZE (23015); Write SEQINDEXSEQOFFSET (23016); Write SEQINDEXDATA (23014); Write ENTRIESNUM (23012); Write SEQCOUNT (23013); Index table: counting k-mers; [=================================================================] 10.85M 1m 8s 743ms; Index table: Masked residues: 61136999; Index table: fill; [=================================================================] 10.85M 1m 17s 938ms; Index statistics; Entries: 3850256482; DB size: 31796 MB; Avg k-mer size: 3.008013; Top 10 k-mers; SGQQRIA	33137; FLLLLLA	29781; ATQAYAV	29580; LAYGSGV	29521; CYGPSYQ	29506; SVAYNPS	29500; FSLCYSP	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:79108,Availability,Mask,Masked,79108,); Write SEQINDEXSEQOFFSET (22016); Write SEQINDEXDATA (22014); Write ENTRIESNUM (22012); Write SEQCOUNT (22013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 694ms; Index table: Masked residues: 61145173; Index table: fill; [=================================================================] 10.85M 1m 27s 632ms; Index statistics; Entries: 3850176462; DB size: 31796 MB; Avg k-mer size: 3.007950; Top 10 k-mers; SGQQRIA	33446; FLLLLLA	30080; ATQAYAV	29847; GSLGSSV	29771; AVNDSVL	29749; CYGPSYQ	29749; SVAYNPS	29744; HALLFPS	29718; ACNSPVY	29716; KHFCLLP	29702; Write ENTRIES (23009); Write ENTRIESOFFSETS (23010); Write SEQINDEXDATASIZE (23015); Write SEQINDEXSEQOFFSET (23016); Write SEQINDEXDATA (23014); Write ENTRIESNUM (23012); Write SEQCOUNT (23013); Index table: counting k-mers; [=================================================================] 10.85M 1m 8s 743ms; Index table: Masked residues: 61136999; Index table: fill; [=================================================================] 10.85M 1m 17s 938ms; Index statistics; Entries: 3850256482; DB size: 31796 MB; Avg k-mer size: 3.008013; Top 10 k-mers; SGQQRIA	33137; FLLLLLA	29781; ATQAYAV	29580; LAYGSGV	29521; CYGPSYQ	29506; SVAYNPS	29500; FSLCYSP	29491; GSLGSSV	29490; ACNSPVY	29486; ILSISKQ	29461; Write ENTRIES (24009); Write ENTRIESOFFSETS (24010); Write SEQINDEXDATASIZE (24015); Write SEQINDEXSEQOFFSET (24016); Write SEQINDEXDATA (24014); Write ENTRIESNUM (24012); Write SEQCOUNT (24013); Index table: counting k-mers; [=================================================================] 10.85M 1m 7s 705ms; Index table: Masked residues: 61196311; Index table: fill; [=================================================================] 10.85M 1m 18s 198ms; Index statistics; Entries: 3850220763; DB size: 31796 MB; Avg k-mer size: 3.007985; Top 10 k-mers; SGQQRIA	33140; FLLLLLA	29995; ATQAYAV	29827; LAYGSGV	29771; MVVCGTL	29759; CYGPSYQ	29753; KLKLNKS	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:79819,Availability,Mask,Masked,79819,5); Write SEQINDEXSEQOFFSET (23016); Write SEQINDEXDATA (23014); Write ENTRIESNUM (23012); Write SEQCOUNT (23013); Index table: counting k-mers; [=================================================================] 10.85M 1m 8s 743ms; Index table: Masked residues: 61136999; Index table: fill; [=================================================================] 10.85M 1m 17s 938ms; Index statistics; Entries: 3850256482; DB size: 31796 MB; Avg k-mer size: 3.008013; Top 10 k-mers; SGQQRIA	33137; FLLLLLA	29781; ATQAYAV	29580; LAYGSGV	29521; CYGPSYQ	29506; SVAYNPS	29500; FSLCYSP	29491; GSLGSSV	29490; ACNSPVY	29486; ILSISKQ	29461; Write ENTRIES (24009); Write ENTRIESOFFSETS (24010); Write SEQINDEXDATASIZE (24015); Write SEQINDEXSEQOFFSET (24016); Write SEQINDEXDATA (24014); Write ENTRIESNUM (24012); Write SEQCOUNT (24013); Index table: counting k-mers; [=================================================================] 10.85M 1m 7s 705ms; Index table: Masked residues: 61196311; Index table: fill; [=================================================================] 10.85M 1m 18s 198ms; Index statistics; Entries: 3850220763; DB size: 31796 MB; Avg k-mer size: 3.007985; Top 10 k-mers; SGQQRIA	33140; FLLLLLA	29995; ATQAYAV	29827; LAYGSGV	29771; MVVCGTL	29759; CYGPSYQ	29753; KLKLNKS	29751; SVAYNPS	29748; ACNSPVY	29735; MLYKVMT	29712; Write ENTRIES (25009); Write ENTRIESOFFSETS (25010); Write SEQINDEXDATASIZE (25015); Write SEQINDEXSEQOFFSET (25016); Write SEQINDEXDATA (25014); Write ENTRIESNUM (25012); Write SEQCOUNT (25013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 929ms; Index table: Masked residues: 61047096; Index table: fill; [=================================================================] 10.85M 1m 27s 703ms; Index statistics; Entries: 3850450523; DB size: 31798 MB; Avg k-mer size: 3.008164; Top 10 k-mers; SGQQRIA	33254; FLLLLLA	30111; ATQAYAV	29941; LAYGSGV	29869; CYGPSYQ	29850; SVAYNPS	29847; GSLGSSV	,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:80531,Availability,Mask,Masked,80531,); Write SEQINDEXSEQOFFSET (24016); Write SEQINDEXDATA (24014); Write ENTRIESNUM (24012); Write SEQCOUNT (24013); Index table: counting k-mers; [=================================================================] 10.85M 1m 7s 705ms; Index table: Masked residues: 61196311; Index table: fill; [=================================================================] 10.85M 1m 18s 198ms; Index statistics; Entries: 3850220763; DB size: 31796 MB; Avg k-mer size: 3.007985; Top 10 k-mers; SGQQRIA	33140; FLLLLLA	29995; ATQAYAV	29827; LAYGSGV	29771; MVVCGTL	29759; CYGPSYQ	29753; KLKLNKS	29751; SVAYNPS	29748; ACNSPVY	29735; MLYKVMT	29712; Write ENTRIES (25009); Write ENTRIESOFFSETS (25010); Write SEQINDEXDATASIZE (25015); Write SEQINDEXSEQOFFSET (25016); Write SEQINDEXDATA (25014); Write ENTRIESNUM (25012); Write SEQCOUNT (25013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 929ms; Index table: Masked residues: 61047096; Index table: fill; [=================================================================] 10.85M 1m 27s 703ms; Index statistics; Entries: 3850450523; DB size: 31798 MB; Avg k-mer size: 3.008164; Top 10 k-mers; SGQQRIA	33254; FLLLLLA	30111; ATQAYAV	29941; LAYGSGV	29869; CYGPSYQ	29850; SVAYNPS	29847; GSLGSSV	29830; ACNSPVY	29828; KLKLNKS	29823; HALLFPS	29811; Write ENTRIES (26009); Write ENTRIESOFFSETS (26010); Write SEQINDEXDATASIZE (26015); Write SEQINDEXSEQOFFSET (26016); Write SEQINDEXDATA (26014); Write ENTRIESNUM (26012); Write SEQCOUNT (26013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 57ms; Index table: Masked residues: 61463986; Index table: fill; [=================================================================] 10.84M 1m 17s 662ms; Index statistics; Entries: 3849969010; DB size: 31795 MB; Avg k-mer size: 3.007788; Top 10 k-mers; SGQQRIA	33231; FLLLLLA	30254; ATQAYAV	30083; MVVCGTL	29995; LAYGSGV	29994; KLKLNKS	29983; GSLGSSV	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:81241,Availability,Mask,Masked,81241,); Write SEQINDEXSEQOFFSET (25016); Write SEQINDEXDATA (25014); Write ENTRIESNUM (25012); Write SEQCOUNT (25013); Index table: counting k-mers; [=================================================================] 10.85M 1m 11s 929ms; Index table: Masked residues: 61047096; Index table: fill; [=================================================================] 10.85M 1m 27s 703ms; Index statistics; Entries: 3850450523; DB size: 31798 MB; Avg k-mer size: 3.008164; Top 10 k-mers; SGQQRIA	33254; FLLLLLA	30111; ATQAYAV	29941; LAYGSGV	29869; CYGPSYQ	29850; SVAYNPS	29847; GSLGSSV	29830; ACNSPVY	29828; KLKLNKS	29823; HALLFPS	29811; Write ENTRIES (26009); Write ENTRIESOFFSETS (26010); Write SEQINDEXDATASIZE (26015); Write SEQINDEXSEQOFFSET (26016); Write SEQINDEXDATA (26014); Write ENTRIESNUM (26012); Write SEQCOUNT (26013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 57ms; Index table: Masked residues: 61463986; Index table: fill; [=================================================================] 10.84M 1m 17s 662ms; Index statistics; Entries: 3849969010; DB size: 31795 MB; Avg k-mer size: 3.007788; Top 10 k-mers; SGQQRIA	33231; FLLLLLA	30254; ATQAYAV	30083; MVVCGTL	29995; LAYGSGV	29994; KLKLNKS	29983; GSLGSSV	29978; ILSISKQ	29956; TELKAKV	29954; ACNSPVY	29953; Write ENTRIES (27009); Write ENTRIESOFFSETS (27010); Write SEQINDEXDATASIZE (27015); Write SEQINDEXSEQOFFSET (27016); Write SEQINDEXDATA (27014); Write ENTRIESNUM (27012); Write SEQCOUNT (27013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 421ms; Index table: Masked residues: 61447173; Index table: fill; [=================================================================] 10.84M 1m 17s 628ms; Index statistics; Entries: 3850043049; DB size: 31795 MB; Avg k-mer size: 3.007846; Top 10 k-mers; SGQQRIA	33530; FLLLLLA	29878; ATQAYAV	29693; VLCNGSG	29651; LAYGSGV	29644; CYGPSYQ	29636; GSLGSSV	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:81952,Availability,Mask,Masked,81952,15); Write SEQINDEXSEQOFFSET (26016); Write SEQINDEXDATA (26014); Write ENTRIESNUM (26012); Write SEQCOUNT (26013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 57ms; Index table: Masked residues: 61463986; Index table: fill; [=================================================================] 10.84M 1m 17s 662ms; Index statistics; Entries: 3849969010; DB size: 31795 MB; Avg k-mer size: 3.007788; Top 10 k-mers; SGQQRIA	33231; FLLLLLA	30254; ATQAYAV	30083; MVVCGTL	29995; LAYGSGV	29994; KLKLNKS	29983; GSLGSSV	29978; ILSISKQ	29956; TELKAKV	29954; ACNSPVY	29953; Write ENTRIES (27009); Write ENTRIESOFFSETS (27010); Write SEQINDEXDATASIZE (27015); Write SEQINDEXSEQOFFSET (27016); Write SEQINDEXDATA (27014); Write ENTRIESNUM (27012); Write SEQCOUNT (27013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 421ms; Index table: Masked residues: 61447173; Index table: fill; [=================================================================] 10.84M 1m 17s 628ms; Index statistics; Entries: 3850043049; DB size: 31795 MB; Avg k-mer size: 3.007846; Top 10 k-mers; SGQQRIA	33530; FLLLLLA	29878; ATQAYAV	29693; VLCNGSG	29651; LAYGSGV	29644; CYGPSYQ	29636; GSLGSSV	29614; ACNSPVY	29613; KLKLNKS	29597; MVVCGTL	29592; Write ENTRIES (28009); Write ENTRIESOFFSETS (28010); Write SEQINDEXDATASIZE (28015); Write SEQINDEXSEQOFFSET (28016); Write SEQINDEXDATA (28014); Write ENTRIESNUM (28012); Write SEQCOUNT (28013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 265ms; Index table: Masked residues: 61304785; Index table: fill; [=================================================================] 10.84M 1m 17s 421ms; Index statistics; Entries: 3849995941; DB size: 31795 MB; Avg k-mer size: 3.007809; Top 10 k-mers; SGQQRIA	33071; FLLLLLA	30126; ATQAYAV	29984; LAYGSGV	29870; GLGTVAK	29855; VVLVLLR	29854; DNALQAS	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:82663,Availability,Mask,Masked,82663,5); Write SEQINDEXSEQOFFSET (27016); Write SEQINDEXDATA (27014); Write ENTRIESNUM (27012); Write SEQCOUNT (27013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 421ms; Index table: Masked residues: 61447173; Index table: fill; [=================================================================] 10.84M 1m 17s 628ms; Index statistics; Entries: 3850043049; DB size: 31795 MB; Avg k-mer size: 3.007846; Top 10 k-mers; SGQQRIA	33530; FLLLLLA	29878; ATQAYAV	29693; VLCNGSG	29651; LAYGSGV	29644; CYGPSYQ	29636; GSLGSSV	29614; ACNSPVY	29613; KLKLNKS	29597; MVVCGTL	29592; Write ENTRIES (28009); Write ENTRIESOFFSETS (28010); Write SEQINDEXDATASIZE (28015); Write SEQINDEXSEQOFFSET (28016); Write SEQINDEXDATA (28014); Write ENTRIESNUM (28012); Write SEQCOUNT (28013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 265ms; Index table: Masked residues: 61304785; Index table: fill; [=================================================================] 10.84M 1m 17s 421ms; Index statistics; Entries: 3849995941; DB size: 31795 MB; Avg k-mer size: 3.007809; Top 10 k-mers; SGQQRIA	33071; FLLLLLA	30126; ATQAYAV	29984; LAYGSGV	29870; GLGTVAK	29855; VVLVLLR	29854; DNALQAS	29854; SVAYNPS	29854; GSLGSSV	29851; ACNSPVY	29835; Write ENTRIES (29009); Write ENTRIESOFFSETS (29010); Write SEQINDEXDATASIZE (29015); Write SEQINDEXSEQOFFSET (29016); Write SEQINDEXDATA (29014); Write ENTRIESNUM (29012); Write SEQCOUNT (29013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 542ms; Index table: Masked residues: 61389881; Index table: fill; [=================================================================] 10.84M 1m 17s 448ms; Index statistics; Entries: 3849817877; DB size: 31794 MB; Avg k-mer size: 3.007670; Top 10 k-mers; SGQQRIA	33369; FLLLLLA	30183; ATQAYAV	30042; VLCNGSG	29941; MVVCGTL	29937; LAYGSGV	29936; GSLGSSV	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:83374,Availability,Mask,Masked,83374,5); Write SEQINDEXSEQOFFSET (28016); Write SEQINDEXDATA (28014); Write ENTRIESNUM (28012); Write SEQCOUNT (28013); Index table: counting k-mers; [=================================================================] 10.84M 1m 6s 265ms; Index table: Masked residues: 61304785; Index table: fill; [=================================================================] 10.84M 1m 17s 421ms; Index statistics; Entries: 3849995941; DB size: 31795 MB; Avg k-mer size: 3.007809; Top 10 k-mers; SGQQRIA	33071; FLLLLLA	30126; ATQAYAV	29984; LAYGSGV	29870; GLGTVAK	29855; VVLVLLR	29854; DNALQAS	29854; SVAYNPS	29854; GSLGSSV	29851; ACNSPVY	29835; Write ENTRIES (29009); Write ENTRIESOFFSETS (29010); Write SEQINDEXDATASIZE (29015); Write SEQINDEXSEQOFFSET (29016); Write SEQINDEXDATA (29014); Write ENTRIESNUM (29012); Write SEQCOUNT (29013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 542ms; Index table: Masked residues: 61389881; Index table: fill; [=================================================================] 10.84M 1m 17s 448ms; Index statistics; Entries: 3849817877; DB size: 31794 MB; Avg k-mer size: 3.007670; Top 10 k-mers; SGQQRIA	33369; FLLLLLA	30183; ATQAYAV	30042; VLCNGSG	29941; MVVCGTL	29937; LAYGSGV	29936; GSLGSSV	29920; ACNSPVY	29901; TELKAKV	29890; TLGWLVV	29887; Write ENTRIES (30009); Write ENTRIESOFFSETS (30010); Write SEQINDEXDATASIZE (30015); Write SEQINDEXSEQOFFSET (30016); Write SEQINDEXDATA (30014); Write ENTRIESNUM (30012); Write SEQCOUNT (30013); Index table: counting k-mers; [=================================================================] 10.85M 1m 5s 69ms; Index table: Masked residues: 61266593; Index table: fill; [=================================================================] 10.85M 1m 17s 362ms; Index statistics; Entries: 3849915772; DB size: 31795 MB; Avg k-mer size: 3.007747; Top 10 k-mers; SGQQRIA	33329; FLLLLLA	30187; ATQAYAV	30023; GLGTVAK	29954; LAYGSGV	29930; CYGPSYQ	29910; HALLFPS	29,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:84084,Availability,Mask,Masked,84084,5); Write SEQINDEXSEQOFFSET (29016); Write SEQINDEXDATA (29014); Write ENTRIESNUM (29012); Write SEQCOUNT (29013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 542ms; Index table: Masked residues: 61389881; Index table: fill; [=================================================================] 10.84M 1m 17s 448ms; Index statistics; Entries: 3849817877; DB size: 31794 MB; Avg k-mer size: 3.007670; Top 10 k-mers; SGQQRIA	33369; FLLLLLA	30183; ATQAYAV	30042; VLCNGSG	29941; MVVCGTL	29937; LAYGSGV	29936; GSLGSSV	29920; ACNSPVY	29901; TELKAKV	29890; TLGWLVV	29887; Write ENTRIES (30009); Write ENTRIESOFFSETS (30010); Write SEQINDEXDATASIZE (30015); Write SEQINDEXSEQOFFSET (30016); Write SEQINDEXDATA (30014); Write ENTRIESNUM (30012); Write SEQCOUNT (30013); Index table: counting k-mers; [=================================================================] 10.85M 1m 5s 69ms; Index table: Masked residues: 61266593; Index table: fill; [=================================================================] 10.85M 1m 17s 362ms; Index statistics; Entries: 3849915772; DB size: 31795 MB; Avg k-mer size: 3.007747; Top 10 k-mers; SGQQRIA	33329; FLLLLLA	30187; ATQAYAV	30023; GLGTVAK	29954; LAYGSGV	29930; CYGPSYQ	29910; HALLFPS	29907; SVAYNPS	29904; GSLGSSV	29900; ACNSPVY	29883; Write ENTRIES (31009); Write ENTRIESOFFSETS (31010); Write SEQINDEXDATASIZE (31015); Write SEQINDEXSEQOFFSET (31016); Write SEQINDEXDATA (31014); Write ENTRIESNUM (31012); Write SEQCOUNT (31013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 938ms; Index table: Masked residues: 61324289; Index table: fill; [=================================================================] 10.85M 1m 17s 470ms; Index statistics; Entries: 3850149373; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	32987; FLLLLLA	29953; ATQAYAV	29771; LAYGSGV	29658; GSLGSSV	29657; KHHFLFL	29638; EKVLLLL	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:84795,Availability,Mask,Masked,84795,15); Write SEQINDEXSEQOFFSET (30016); Write SEQINDEXDATA (30014); Write ENTRIESNUM (30012); Write SEQCOUNT (30013); Index table: counting k-mers; [=================================================================] 10.85M 1m 5s 69ms; Index table: Masked residues: 61266593; Index table: fill; [=================================================================] 10.85M 1m 17s 362ms; Index statistics; Entries: 3849915772; DB size: 31795 MB; Avg k-mer size: 3.007747; Top 10 k-mers; SGQQRIA	33329; FLLLLLA	30187; ATQAYAV	30023; GLGTVAK	29954; LAYGSGV	29930; CYGPSYQ	29910; HALLFPS	29907; SVAYNPS	29904; GSLGSSV	29900; ACNSPVY	29883; Write ENTRIES (31009); Write ENTRIESOFFSETS (31010); Write SEQINDEXDATASIZE (31015); Write SEQINDEXSEQOFFSET (31016); Write SEQINDEXDATA (31014); Write ENTRIESNUM (31012); Write SEQCOUNT (31013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 938ms; Index table: Masked residues: 61324289; Index table: fill; [=================================================================] 10.85M 1m 17s 470ms; Index statistics; Entries: 3850149373; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	32987; FLLLLLA	29953; ATQAYAV	29771; LAYGSGV	29658; GSLGSSV	29657; KHHFLFL	29638; EKVLLLL	29637; CYGPSYQ	29636; HALLFPS	29633; SVAYNPS	29626; Write ENTRIES (32009); Write ENTRIESOFFSETS (32010); Write SEQINDEXDATASIZE (32015); Write SEQINDEXSEQOFFSET (32016); Write SEQINDEXDATA (32014); Write ENTRIESNUM (32012); Write SEQCOUNT (32013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 962ms; Index table: Masked residues: 61229032; Index table: fill; [=================================================================] 10.85M 1m 17s 193ms; Index statistics; Entries: 3850133104; DB size: 31796 MB; Avg k-mer size: 3.007916; Top 10 k-mers; SGQQRIA	33206; FLLLLLA	29981; ATQAYAV	29773; VLCNGSG	29656; KLKLNKS	29654; LAYGSGV	29650; AVNDSVL	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:85506,Availability,Mask,Masked,85506,5); Write SEQINDEXSEQOFFSET (31016); Write SEQINDEXDATA (31014); Write ENTRIESNUM (31012); Write SEQCOUNT (31013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 938ms; Index table: Masked residues: 61324289; Index table: fill; [=================================================================] 10.85M 1m 17s 470ms; Index statistics; Entries: 3850149373; DB size: 31796 MB; Avg k-mer size: 3.007929; Top 10 k-mers; SGQQRIA	32987; FLLLLLA	29953; ATQAYAV	29771; LAYGSGV	29658; GSLGSSV	29657; KHHFLFL	29638; EKVLLLL	29637; CYGPSYQ	29636; HALLFPS	29633; SVAYNPS	29626; Write ENTRIES (32009); Write ENTRIESOFFSETS (32010); Write SEQINDEXDATASIZE (32015); Write SEQINDEXSEQOFFSET (32016); Write SEQINDEXDATA (32014); Write ENTRIESNUM (32012); Write SEQCOUNT (32013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 962ms; Index table: Masked residues: 61229032; Index table: fill; [=================================================================] 10.85M 1m 17s 193ms; Index statistics; Entries: 3850133104; DB size: 31796 MB; Avg k-mer size: 3.007916; Top 10 k-mers; SGQQRIA	33206; FLLLLLA	29981; ATQAYAV	29773; VLCNGSG	29656; KLKLNKS	29654; LAYGSGV	29650; AVNDSVL	29630; GSLGSSV	29622; DNALQAS	29621; ACNSPVY	29612; Write ENTRIES (33009); Write ENTRIESOFFSETS (33010); Write SEQINDEXDATASIZE (33015); Write SEQINDEXSEQOFFSET (33016); Write SEQINDEXDATA (33014); Write ENTRIESNUM (33012); Write SEQCOUNT (33013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 860ms; Index table: Masked residues: 61307069; Index table: fill; [=================================================================] 10.85M 1m 17s 150ms; Index statistics; Entries: 3849878129; DB size: 31794 MB; Avg k-mer size: 3.007717; Top 10 k-mers; SGQQRIA	32843; FLLLLLA	30212; ATQAYAV	30033; VLCNGSG	29957; KLKLNKS	29939; LAYGSGV	29937; ILSISKQ	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:86217,Availability,Mask,Masked,86217,5); Write SEQINDEXSEQOFFSET (32016); Write SEQINDEXDATA (32014); Write ENTRIESNUM (32012); Write SEQCOUNT (32013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 962ms; Index table: Masked residues: 61229032; Index table: fill; [=================================================================] 10.85M 1m 17s 193ms; Index statistics; Entries: 3850133104; DB size: 31796 MB; Avg k-mer size: 3.007916; Top 10 k-mers; SGQQRIA	33206; FLLLLLA	29981; ATQAYAV	29773; VLCNGSG	29656; KLKLNKS	29654; LAYGSGV	29650; AVNDSVL	29630; GSLGSSV	29622; DNALQAS	29621; ACNSPVY	29612; Write ENTRIES (33009); Write ENTRIESOFFSETS (33010); Write SEQINDEXDATASIZE (33015); Write SEQINDEXSEQOFFSET (33016); Write SEQINDEXDATA (33014); Write ENTRIESNUM (33012); Write SEQCOUNT (33013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 860ms; Index table: Masked residues: 61307069; Index table: fill; [=================================================================] 10.85M 1m 17s 150ms; Index statistics; Entries: 3849878129; DB size: 31794 MB; Avg k-mer size: 3.007717; Top 10 k-mers; SGQQRIA	32843; FLLLLLA	30212; ATQAYAV	30033; VLCNGSG	29957; KLKLNKS	29939; LAYGSGV	29937; ILSISKQ	29921; ISEQEGT	29919; GSLGSSV	29913; ACNSPVY	29909; Write ENTRIES (34009); Write ENTRIESOFFSETS (34010); Write SEQINDEXDATASIZE (34015); Write SEQINDEXSEQOFFSET (34016); Write SEQINDEXDATA (34014); Write ENTRIESNUM (34012); Write SEQCOUNT (34013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 319ms; Index table: Masked residues: 61203280; Index table: fill; [=================================================================] 10.84M 1m 17s 218ms; Index statistics; Entries: 3850317290; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	33293; FLLLLLA	30047; ATQAYAV	29922; KLKLNKS	29793; LAYGSGV	29790; HALLFPS	29770; MVVCGTL	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:86928,Availability,Mask,Masked,86928,5); Write SEQINDEXSEQOFFSET (33016); Write SEQINDEXDATA (33014); Write ENTRIESNUM (33012); Write SEQCOUNT (33013); Index table: counting k-mers; [=================================================================] 10.85M 1m 4s 860ms; Index table: Masked residues: 61307069; Index table: fill; [=================================================================] 10.85M 1m 17s 150ms; Index statistics; Entries: 3849878129; DB size: 31794 MB; Avg k-mer size: 3.007717; Top 10 k-mers; SGQQRIA	32843; FLLLLLA	30212; ATQAYAV	30033; VLCNGSG	29957; KLKLNKS	29939; LAYGSGV	29937; ILSISKQ	29921; ISEQEGT	29919; GSLGSSV	29913; ACNSPVY	29909; Write ENTRIES (34009); Write ENTRIESOFFSETS (34010); Write SEQINDEXDATASIZE (34015); Write SEQINDEXSEQOFFSET (34016); Write SEQINDEXDATA (34014); Write ENTRIESNUM (34012); Write SEQCOUNT (34013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 319ms; Index table: Masked residues: 61203280; Index table: fill; [=================================================================] 10.84M 1m 17s 218ms; Index statistics; Entries: 3850317290; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	33293; FLLLLLA	30047; ATQAYAV	29922; KLKLNKS	29793; LAYGSGV	29790; HALLFPS	29770; MVVCGTL	29767; SVAYNPS	29766; MLYKVMT	29766; GSLGSSV	29766; Write ENTRIES (35009); Write ENTRIESOFFSETS (35010); Write SEQINDEXDATASIZE (35015); Write SEQINDEXSEQOFFSET (35016); Write SEQINDEXDATA (35014); Write ENTRIESNUM (35012); Write SEQCOUNT (35013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 360ms; Index table: Masked residues: 61352470; Index table: fill; [=================================================================] 10.84M 1m 17s 49ms; Index statistics; Entries: 3849997806; DB size: 31795 MB; Avg k-mer size: 3.007811; Top 10 k-mers; SGQQRIA	33159; FLLLLLA	30256; ATQAYAV	30113; LAYGSGV	30002; GSLGSSV	29975; SVAYNPS	29966; ACNSPVY	29,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:87639,Availability,Mask,Masked,87639,5); Write SEQINDEXSEQOFFSET (34016); Write SEQINDEXDATA (34014); Write ENTRIESNUM (34012); Write SEQCOUNT (34013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 319ms; Index table: Masked residues: 61203280; Index table: fill; [=================================================================] 10.84M 1m 17s 218ms; Index statistics; Entries: 3850317290; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	33293; FLLLLLA	30047; ATQAYAV	29922; KLKLNKS	29793; LAYGSGV	29790; HALLFPS	29770; MVVCGTL	29767; SVAYNPS	29766; MLYKVMT	29766; GSLGSSV	29766; Write ENTRIES (35009); Write ENTRIESOFFSETS (35010); Write SEQINDEXDATASIZE (35015); Write SEQINDEXSEQOFFSET (35016); Write SEQINDEXDATA (35014); Write ENTRIESNUM (35012); Write SEQCOUNT (35013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 360ms; Index table: Masked residues: 61352470; Index table: fill; [=================================================================] 10.84M 1m 17s 49ms; Index statistics; Entries: 3849997806; DB size: 31795 MB; Avg k-mer size: 3.007811; Top 10 k-mers; SGQQRIA	33159; FLLLLLA	30256; ATQAYAV	30113; LAYGSGV	30002; GSLGSSV	29975; SVAYNPS	29966; ACNSPVY	29962; KHFCLLP	29940; KLKLNKS	29934; MLYKVMT	29933; Write ENTRIES (36009); Write ENTRIESOFFSETS (36010); Write SEQINDEXDATASIZE (36015); Write SEQINDEXSEQOFFSET (36016); Write SEQINDEXDATA (36014); Write ENTRIESNUM (36012); Write SEQCOUNT (36013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 494ms; Index table: Masked residues: 61207851; Index table: fill; [=================================================================] 10.84M 1m 17s 227ms; Index statistics; Entries: 3850216299; DB size: 31796 MB; Avg k-mer size: 3.007981; Top 10 k-mers; SGQQRIA	33099; FLLLLLA	29994; ATQAYAV	29804; VLCNGSG	29727; LAYGSGV	29718; CYGPSYQ	29709; KLKLNKS	29,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:88349,Availability,Mask,Masked,88349,15); Write SEQINDEXSEQOFFSET (35016); Write SEQINDEXDATA (35014); Write ENTRIESNUM (35012); Write SEQCOUNT (35013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 360ms; Index table: Masked residues: 61352470; Index table: fill; [=================================================================] 10.84M 1m 17s 49ms; Index statistics; Entries: 3849997806; DB size: 31795 MB; Avg k-mer size: 3.007811; Top 10 k-mers; SGQQRIA	33159; FLLLLLA	30256; ATQAYAV	30113; LAYGSGV	30002; GSLGSSV	29975; SVAYNPS	29966; ACNSPVY	29962; KHFCLLP	29940; KLKLNKS	29934; MLYKVMT	29933; Write ENTRIES (36009); Write ENTRIESOFFSETS (36010); Write SEQINDEXDATASIZE (36015); Write SEQINDEXSEQOFFSET (36016); Write SEQINDEXDATA (36014); Write ENTRIESNUM (36012); Write SEQCOUNT (36013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 494ms; Index table: Masked residues: 61207851; Index table: fill; [=================================================================] 10.84M 1m 17s 227ms; Index statistics; Entries: 3850216299; DB size: 31796 MB; Avg k-mer size: 3.007981; Top 10 k-mers; SGQQRIA	33099; FLLLLLA	29994; ATQAYAV	29804; VLCNGSG	29727; LAYGSGV	29718; CYGPSYQ	29709; KLKLNKS	29704; GSLGSSV	29701; SVAYNPS	29697; ISEQEGT	29678; Write ENTRIES (37009); Write ENTRIESOFFSETS (37010); Write SEQINDEXDATASIZE (37015); Write SEQINDEXSEQOFFSET (37016); Write SEQINDEXDATA (37014); Write ENTRIESNUM (37012); Write SEQCOUNT (37013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 815ms; Index table: Masked residues: 61187236; Index table: fill; [=================================================================] 10.84M 1m 16s 934ms; Index statistics; Entries: 3850225941; DB size: 31796 MB; Avg k-mer size: 3.007989; Top 10 k-mers; SGQQRIA	33128; FLLLLLA	30170; ATQAYAV	29962; VLCNGSG	29895; LAYGSGV	29894; KLKLNKS	29870; GSLGSSV	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:89060,Availability,Mask,Masked,89060,5); Write SEQINDEXSEQOFFSET (36016); Write SEQINDEXDATA (36014); Write ENTRIESNUM (36012); Write SEQCOUNT (36013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 494ms; Index table: Masked residues: 61207851; Index table: fill; [=================================================================] 10.84M 1m 17s 227ms; Index statistics; Entries: 3850216299; DB size: 31796 MB; Avg k-mer size: 3.007981; Top 10 k-mers; SGQQRIA	33099; FLLLLLA	29994; ATQAYAV	29804; VLCNGSG	29727; LAYGSGV	29718; CYGPSYQ	29709; KLKLNKS	29704; GSLGSSV	29701; SVAYNPS	29697; ISEQEGT	29678; Write ENTRIES (37009); Write ENTRIESOFFSETS (37010); Write SEQINDEXDATASIZE (37015); Write SEQINDEXSEQOFFSET (37016); Write SEQINDEXDATA (37014); Write ENTRIESNUM (37012); Write SEQCOUNT (37013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 815ms; Index table: Masked residues: 61187236; Index table: fill; [=================================================================] 10.84M 1m 16s 934ms; Index statistics; Entries: 3850225941; DB size: 31796 MB; Avg k-mer size: 3.007989; Top 10 k-mers; SGQQRIA	33128; FLLLLLA	30170; ATQAYAV	29962; VLCNGSG	29895; LAYGSGV	29894; KLKLNKS	29870; GSLGSSV	29870; TELKAKV	29857; ACNSPVY	29843; NEQILVS	29829; Write ENTRIES (38009); Write ENTRIESOFFSETS (38010); Write SEQINDEXDATASIZE (38015); Write SEQINDEXSEQOFFSET (38016); Write SEQINDEXDATA (38014); Write ENTRIESNUM (38012); Write SEQCOUNT (38013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 594ms; Index table: Masked residues: 61224305; Index table: fill; [=================================================================] 10.84M 1m 16s 989ms; Index statistics; Entries: 3850265437; DB size: 31797 MB; Avg k-mer size: 3.008020; Top 10 k-mers; SGQQRIA	32988; FLLLLLA	30232; ATQAYAV	30073; LAYGSGV	29988; CYGPSYQ	29965; SVAYNPS	29965; ACNSPVY	2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:89771,Availability,Mask,Masked,89771,5); Write SEQINDEXSEQOFFSET (37016); Write SEQINDEXDATA (37014); Write ENTRIESNUM (37012); Write SEQCOUNT (37013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 815ms; Index table: Masked residues: 61187236; Index table: fill; [=================================================================] 10.84M 1m 16s 934ms; Index statistics; Entries: 3850225941; DB size: 31796 MB; Avg k-mer size: 3.007989; Top 10 k-mers; SGQQRIA	33128; FLLLLLA	30170; ATQAYAV	29962; VLCNGSG	29895; LAYGSGV	29894; KLKLNKS	29870; GSLGSSV	29870; TELKAKV	29857; ACNSPVY	29843; NEQILVS	29829; Write ENTRIES (38009); Write ENTRIESOFFSETS (38010); Write SEQINDEXDATASIZE (38015); Write SEQINDEXSEQOFFSET (38016); Write SEQINDEXDATA (38014); Write ENTRIESNUM (38012); Write SEQCOUNT (38013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 594ms; Index table: Masked residues: 61224305; Index table: fill; [=================================================================] 10.84M 1m 16s 989ms; Index statistics; Entries: 3850265437; DB size: 31797 MB; Avg k-mer size: 3.008020; Top 10 k-mers; SGQQRIA	32988; FLLLLLA	30232; ATQAYAV	30073; LAYGSGV	29988; CYGPSYQ	29965; SVAYNPS	29965; ACNSPVY	29944; HALLFPS	29941; GSLGSSV	29937; MLYKVMT	29929; Write ENTRIES (39009); Write ENTRIESOFFSETS (39010); Write SEQINDEXDATASIZE (39015); Write SEQINDEXSEQOFFSET (39016); Write SEQINDEXDATA (39014); Write ENTRIESNUM (39012); Write SEQCOUNT (39013); Index table: counting k-mers; [=================================================================] 10.84M 1m 7s 44ms; Index table: Masked residues: 61246094; Index table: fill; [=================================================================] 10.84M 1m 17s 250ms; Index statistics; Entries: 3850118943; DB size: 31796 MB; Avg k-mer size: 3.007905; Top 10 k-mers; SGQQRIA	33367; FLLLLLA	30314; ATQAYAV	30098; GLGTVAK	30043; LAYGSGV	29998; GSLGSSV	29988; SVAYNPS	29,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:90481,Availability,Mask,Masked,90481,"5); Write SEQINDEXSEQOFFSET (38016); Write SEQINDEXDATA (38014); Write ENTRIESNUM (38012); Write SEQCOUNT (38013); Index table: counting k-mers; [=================================================================] 10.84M 1m 5s 594ms; Index table: Masked residues: 61224305; Index table: fill; [=================================================================] 10.84M 1m 16s 989ms; Index statistics; Entries: 3850265437; DB size: 31797 MB; Avg k-mer size: 3.008020; Top 10 k-mers; SGQQRIA	32988; FLLLLLA	30232; ATQAYAV	30073; LAYGSGV	29988; CYGPSYQ	29965; SVAYNPS	29965; ACNSPVY	29944; HALLFPS	29941; GSLGSSV	29937; MLYKVMT	29929; Write ENTRIES (39009); Write ENTRIESOFFSETS (39010); Write SEQINDEXDATASIZE (39015); Write SEQINDEXSEQOFFSET (39016); Write SEQINDEXDATA (39014); Write ENTRIESNUM (39012); Write SEQCOUNT (39013); Index table: counting k-mers; [=================================================================] 10.84M 1m 7s 44ms; Index table: Masked residues: 61246094; Index table: fill; [=================================================================] 10.84M 1m 17s 250ms; Index statistics; Entries: 3850118943; DB size: 31796 MB; Avg k-mer size: 3.007905; Top 10 k-mers; SGQQRIA	33367; FLLLLLA	30314; ATQAYAV	30098; GLGTVAK	30043; LAYGSGV	29998; GSLGSSV	29988; SVAYNPS	29980; HALLFPS	29973; TELKAKV	29968; ACNSPVY	29959; Write ENTRIES (40009); Write ENTRIESOFFSETS (40010); Write SEQINDEXDATASIZE (40015); Write SEQINDEXSEQOFFSET (40016); Write SEQINDEXDATA (40014); Write ENTRIESNUM (40012); Write SEQCOUNT (40013); Time for merging to NR.idx: 0h 0m 0s 603ms; Time for processing: 2h 25m 32s 642ms; ```; Unfortunately, I don't have the output of `createtaxdb` as managed to run it in interactive mode (it took less than 10 minutes). This is the output from the `easy-taxonomy` command:; ```. easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16 . MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:92680,Availability,Mask,Mask,92680,"osity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sens",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:92698,Availability,Mask,Mask,92698,"osity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sens",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:92900,Availability,Mask,Mask,92900,".001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:96287,Availability,mask,mask,96287," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:96296,Availability,mask,mask-lower-case,96296," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:61730,Energy Efficiency,consumption,consumption,61730,"ons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [===========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:96629,Energy Efficiency,consumption,consumption,96629," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:91859,Integrability,wrap,wrapped,91859,"68; ACNSPVY	29959; Write ENTRIES (40009); Write ENTRIESOFFSETS (40010); Write SEQINDEXDATASIZE (40015); Write SEQINDEXSEQOFFSET (40016); Write SEQINDEXDATA (40014); Write ENTRIESNUM (40012); Write SEQCOUNT (40013); Time for merging to NR.idx: 0h 0m 0s 603ms; Time for processing: 2h 25m 32s 642ms; ```; Unfortunately, I don't have the output of `createtaxdb` as managed to run it in interactive mode (it took less than 10 minutes). This is the output from the `easy-taxonomy` command:; ```. easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16 . MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mo; ```de 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	16; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:96384,Performance,load,load-mode,96384," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/515:519,Usability,guid,guide,519,"Hi,; I am trying to get the taxonomy of several contigs present in a multi-fasta file, but I'm having some issues with the `easy-taxonomy` command, as it is has not completed the assignment of about 804K contigs on 16 threads in 24h using as reference database NR. ; Due to the limits of the machine that I'm using (I can use a partition with external connection using only a single core and a rather short time limit) set up the database using a mix of the `databases` command and the other commands shown in the user guide. Among the different steps I changed the number of threads used, as, for example, it seemed that `createdb` worked only using the same number of threads with which `databases` was initially run.; Is this something to be expected or have I done something wrong during the database setup?. Thanks in advance for your help and, also, for making this tool!. These are the commands that I've used:; ```; mmseqs databases NR refDB/NR tmp --threads 1 -v 3 --force-reuse 1; mmseqs createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3; mmseqs createtaxdb refDB/NR tmp; mmseqs createindex refDB/NR tmp --split-memory-limit 100G; mmseqs easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16; ```. This is the output of `createdb`:; ```; createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3 . MMseqs Version: 	13.45111; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [===================================================================================================	1 Mio. sequences processed; ===================================================================================================	2 Mio. sequences processed; ===================================================================================================	3 Mio. sequences processed; ======================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515
https://github.com/soedinglab/MMseqs2/issues/517:2016,Availability,Mask,Mask,2016,"2159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap be",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:2067,Availability,Mask,Mask,2067,"2159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap be",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:2084,Availability,Mask,Mask,2084,"2159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap be",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:2115,Availability,Mask,Mask,2115,"e 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhausti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:2307,Availability,Mask,Mask,2307,"x reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space lim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:3833,Availability,mask,mask,3833,"ode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is eno",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:3842,Availability,mask,mask-prob,3842,"ode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is eno",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:3858,Availability,mask,mask-lower-case,3858,"dd orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:5624,Deployability,release,release,5624," --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-complied ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 6.1 ; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz, support AVX2/SSE, total 503 G memory (`free -g`); * Operating system and version: Red Hat Enterprise Linux Server release 7.6 (Maipo)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:4232,Energy Efficiency,consumption,consumption,4232," 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:1085,Integrability,wrap,wrapped,1085,"er using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:470,Performance,load,load-mode,470,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:843,Performance,load,load-mode,843,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:3949,Performance,load,load-mode,3949,"dd orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/517:134,Usability,pause,paused,134,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517
https://github.com/soedinglab/MMseqs2/issues/518:15,Availability,error,error,15,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/518:85,Availability,error,error,85,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/518:346,Availability,error,error,346,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/518:587,Availability,down,downloaded,587,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/518:733,Availability,error,error,733,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/518:322,Integrability,message,message,322,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518
https://github.com/soedinglab/MMseqs2/issues/519:614,Energy Efficiency,efficient,efficient,614,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519
https://github.com/soedinglab/MMseqs2/issues/519:224,Performance,perform,performed,224,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519
https://github.com/soedinglab/MMseqs2/issues/521:152,Availability,down,downloaded,152,"Is there a way to get MSA for multimers (homo/hetro) with the local MMSEQ similar to what the API outputs?; I am running the version compiled from git, downloaded about a month and a half ago.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521
https://github.com/soedinglab/MMseqs2/issues/523:196,Deployability,configurat,configuration,196,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523
https://github.com/soedinglab/MMseqs2/issues/523:196,Modifiability,config,configuration,196,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523
https://github.com/soedinglab/MMseqs2/issues/524:178,Energy Efficiency,efficient,efficient,178,"As the data that can be processed with mmseqs is generally quite large. The tsv output is usually very large. I wonder if it would be difficult to create hdf files or other more efficient file formats e.g. parquet to store the data. . Concretely, I'm thinking about the output of linclust. But there it would only make sense if the cluster id would be a categorical or so. What do you think?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/524
https://github.com/soedinglab/MMseqs2/issues/525:51,Availability,down,downloaded,51,"What is the final size of the BFD, __unpacked__? I downloaded it successfully, but now am trying to allocate enough storage. https://bfd.mmseqs.com/. Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/525
https://github.com/soedinglab/MMseqs2/issues/525:100,Energy Efficiency,allocate,allocate,100,"What is the final size of the BFD, __unpacked__? I downloaded it successfully, but now am trying to allocate enough storage. https://bfd.mmseqs.com/. Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/525
https://github.com/soedinglab/MMseqs2/issues/527:170,Performance,perform,perform,170,"Hi,. I just want to ask a quick question. ; Say I create index for the uniref30_2103_db database with 3 splits: `mmseqs createindex uniref30_2103_db tmp --split 3` and I perform 50 queries (in a single .fasta file) on it using the `colabfold_search.sh` script provided on https://colabfold.mmseqs.com. Will each of the three partial index be loaded into memory for ~50 times? Assume my RAM cannot hold more than one partial index and I don't use the colabfold_envdb. In other words, I'm wondering if mmseqs works like either ; 1); ```; for query in queries_in_fasta:; 	for partial_index_file in indices:; 		search(query, partial_index_file); ```; or 2); ```; for partial_index_file in indices:; 	for query in queries_in_fasta:; 		search(query, partial_index_file); ```; In the first case I guess each partial index will be loaded into RAM from storage repeatedly for `num_of_queries` times which is slow, but for the second case it's just once. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527
https://github.com/soedinglab/MMseqs2/issues/527:342,Performance,load,loaded,342,"Hi,. I just want to ask a quick question. ; Say I create index for the uniref30_2103_db database with 3 splits: `mmseqs createindex uniref30_2103_db tmp --split 3` and I perform 50 queries (in a single .fasta file) on it using the `colabfold_search.sh` script provided on https://colabfold.mmseqs.com. Will each of the three partial index be loaded into memory for ~50 times? Assume my RAM cannot hold more than one partial index and I don't use the colabfold_envdb. In other words, I'm wondering if mmseqs works like either ; 1); ```; for query in queries_in_fasta:; 	for partial_index_file in indices:; 		search(query, partial_index_file); ```; or 2); ```; for partial_index_file in indices:; 	for query in queries_in_fasta:; 		search(query, partial_index_file); ```; In the first case I guess each partial index will be loaded into RAM from storage repeatedly for `num_of_queries` times which is slow, but for the second case it's just once. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527
https://github.com/soedinglab/MMseqs2/issues/527:823,Performance,load,loaded,823,"Hi,. I just want to ask a quick question. ; Say I create index for the uniref30_2103_db database with 3 splits: `mmseqs createindex uniref30_2103_db tmp --split 3` and I perform 50 queries (in a single .fasta file) on it using the `colabfold_search.sh` script provided on https://colabfold.mmseqs.com. Will each of the three partial index be loaded into memory for ~50 times? Assume my RAM cannot hold more than one partial index and I don't use the colabfold_envdb. In other words, I'm wondering if mmseqs works like either ; 1); ```; for query in queries_in_fasta:; 	for partial_index_file in indices:; 		search(query, partial_index_file); ```; or 2); ```; for partial_index_file in indices:; 	for query in queries_in_fasta:; 		search(query, partial_index_file); ```; In the first case I guess each partial index will be loaded into RAM from storage repeatedly for `num_of_queries` times which is slow, but for the second case it's just once. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527
https://github.com/soedinglab/MMseqs2/issues/528:170,Deployability,update,update,170,"No issues, I just have a quick question: . Are there any circumstances where running clusterupdate would result in breaking a cluster into two or more clusters after the update? For example, if the updated database included a sequence that was similar to some sequences in a cluster (but somehow not all of them), is there any chance that that cluster would get split?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/528
https://github.com/soedinglab/MMseqs2/issues/528:198,Deployability,update,updated,198,"No issues, I just have a quick question: . Are there any circumstances where running clusterupdate would result in breaking a cluster into two or more clusters after the update? For example, if the updated database included a sequence that was similar to some sequences in a cluster (but somehow not all of them), is there any chance that that cluster would get split?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/528
https://github.com/soedinglab/MMseqs2/issues/529:162,Performance,perform,performing,162,"As far as I know MMSeqs2 uses profile/profile searches to build an MSA by querying a sequence database to a profile database. I couldn't find any way of directly performing profile/profile searches to compare two profile databases. Are there any plans to include this as a separate command (or in the ""search"" command"")?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/529
https://github.com/soedinglab/MMseqs2/issues/530:143,Availability,error,error,143,"## Expected Behavior; I have been trying to build the colabfold expandable profile databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530
https://github.com/soedinglab/MMseqs2/issues/530:250,Availability,error,error,250,"## Expected Behavior; I have been trying to build the colabfold expandable profile databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530
https://github.com/soedinglab/MMseqs2/issues/530:1548,Availability,Error,Error,1548,"le databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am trying to do this locally with only 8GB RAM. Any help would be much appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530
https://github.com/soedinglab/MMseqs2/issues/530:256,Integrability,message,messages,256,"## Expected Behavior; I have been trying to build the colabfold expandable profile databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530
https://github.com/soedinglab/MMseqs2/issues/531:163,Availability,down,download,163,"## Expected Behavior; `mmseqs databases Kalamari kalamari tmp` should grab the ""Kalamari"" sequences and produce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531
https://github.com/soedinglab/MMseqs2/issues/531:285,Availability,down,download,285,"## Expected Behavior; `mmseqs databases Kalamari kalamari tmp` should grab the ""Kalamari"" sequences and produce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531
https://github.com/soedinglab/MMseqs2/issues/531:1346,Availability,Error,Error,1346,"ce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ARMv8 Processor rev 0 (v8l) × 8 ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531
https://github.com/soedinglab/MMseqs2/issues/531:1431,Availability,error,error,1431,"ce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ARMv8 Processor rev 0 (v8l) × 8 ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531
https://github.com/soedinglab/MMseqs2/issues/531:1460,Availability,down,download,1460,"ce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ARMv8 Processor rev 0 (v8l) × 8 ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531
https://github.com/soedinglab/MMseqs2/pull/533:116,Modifiability,variab,variable,116,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533
https://github.com/soedinglab/MMseqs2/pull/533:442,Performance,optimiz,optimization,442,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533
https://github.com/soedinglab/MMseqs2/pull/533:1029,Performance,optimiz,optimization,1029,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533
https://github.com/soedinglab/MMseqs2/issues/534:261,Availability,error,error,261,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs). mmseqs search XXX-db YYY-db res.m8 tmp; mmseqs easy-search XXX-db YYY-db res.m8 tmp. ## MMseqs Output (for bugs). Failed to execute tmp/8790226016135060124/translated_search.sh **with error 13**; Failed to execute tmp/13234195060205085365/easysearch.sh **with error 13**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: ce7bf53b8241f7ced20f5a75bab052da98e5ca79; * Operating system and version:; UOS21.1.1/deepin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/534
https://github.com/soedinglab/MMseqs2/issues/534:337,Availability,error,error,337,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs). mmseqs search XXX-db YYY-db res.m8 tmp; mmseqs easy-search XXX-db YYY-db res.m8 tmp. ## MMseqs Output (for bugs). Failed to execute tmp/8790226016135060124/translated_search.sh **with error 13**; Failed to execute tmp/13234195060205085365/easysearch.sh **with error 13**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: ce7bf53b8241f7ced20f5a75bab052da98e5ca79; * Operating system and version:; UOS21.1.1/deepin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/534
https://github.com/soedinglab/MMseqs2/issues/536:334,Safety,avoid,avoid,334,"I've been trying to generate an MSA of each cluster using an external tool. The problem is the external tool doesn't accept input from stdin and requires a file. My workaround was to use ```ffindex_unpack``` to generate a file for each cluster and then pass those to external tool. But this can lead to a lot of trouble and I want to avoid it,. How would one proceed to use ```mmseqs apply``` to generate a temporary file and pass that file to the external tool? . I've been trying to generate a bash script for this but it's my first ever attempt with bash scripting and I'm having trouble ""capturing"" the entire cluster in the temporary file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536
https://github.com/soedinglab/MMseqs2/issues/537:141,Energy Efficiency,reduce,reduceredundancy,141,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537
https://github.com/soedinglab/MMseqs2/issues/537:124,Safety,predict,predictexons,124,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537
https://github.com/soedinglab/MMseqs2/issues/538:1616,Availability,fault,fault,1616,"tide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:1637,Availability,Error,Error,1637,"tide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:3619,Availability,error,errors,3619," Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_fasta_700_5/prof_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:3685,Availability,error,error,3685,"of_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:3887,Availability,fault,fault,3887,"-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:3908,Availability,Error,Error,3908,"-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:4592,Availability,down,downloaded,4592,"00']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD Ryzen 9 3950X 16-Core, 64GB RAM; * Operating system and version: Ubuntu 20.04 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:753,Integrability,wrap,wrapped-scoring,753,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:1220,Modifiability,extend,extend,1220,"very time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.join",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:3960,Modifiability,extend,extend,3960," '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD Ryzen 9 3950X 16-Core, 64GB RAM; * Operating system and version: Ubuntu 20.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:995,Performance,load,load-mode,995,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/538:2926,Performance,load,load-mode,2926,"phafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_fasta_700_5/prof_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538
https://github.com/soedinglab/MMseqs2/issues/539:324,Availability,down,down,324,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539
https://github.com/soedinglab/MMseqs2/issues/539:85,Safety,safe,safe,85,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539
https://github.com/soedinglab/MMseqs2/issues/539:418,Safety,safe,safe,418,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539
https://github.com/soedinglab/MMseqs2/issues/540:244,Availability,error,error,244,"## Expected Behavior; Convert the UniRef30 DB and the Colabfold DB success. I want to search a FASTA file using ```colabsearch.sh```; ## Current Behavior; when I build database using command in [https://colabfold.mmseqs.com/](url) but meet the error. The MMseqs died without any hints. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createindex colabfold_envdb_202108_db tmp; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:889,Availability,Mask,Mask,889,"## Expected Behavior; Convert the UniRef30 DB and the Colabfold DB success. I want to search a FASTA file using ```colabsearch.sh```; ## Current Behavior; when I build database using command in [https://colabfold.mmseqs.com/](url) but meet the error. The MMseqs died without any hints. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createindex colabfold_envdb_202108_db tmp; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:906,Availability,Mask,Mask,906,"## Expected Behavior; Convert the UniRef30 DB and the Colabfold DB success. I want to search a FASTA file using ```colabsearch.sh```; ## Current Behavior; when I build database using command in [https://colabfold.mmseqs.com/](url) but meet the error. The MMseqs died without any hints. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createindex colabfold_envdb_202108_db tmp; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:937,Availability,Mask,Mask,937,"## Expected Behavior; Convert the UniRef30 DB and the Colabfold DB success. I want to search a FASTA file using ```colabsearch.sh```; ## Current Behavior; when I build database using command in [https://colabfold.mmseqs.com/](url) but meet the error. The MMseqs died without any hints. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createindex colabfold_envdb_202108_db tmp; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:1866,Availability,Mask,Mask,1866," bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:1883,Availability,Mask,Mask,1883," bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:1914,Availability,Mask,Mask,1914,"residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:2757,Availability,mask,mask,2757,"ut,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:2766,Availability,mask,mask-prob,2766,"ut,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:2782,Availability,mask,mask-lower-case,2782,"l bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Envir",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:3492,Availability,Mask,Masked,3492," stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):75af0c82edf34587548bacc865cfa1d2261a9696; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:cmake 2.8.10; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):CPU support for AVX2/SSE and memory is 100GB; * Operating system and version:linux 3.10.0 X86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:3654,Availability,Error,Error,3654," stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):75af0c82edf34587548bacc865cfa1d2261a9696; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:cmake 2.8.10; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):CPU support for AVX2/SSE and memory is 100GB; * Operating system and version:linux 3.10.0 X86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/540:3004,Energy Efficiency,consumption,consumption,3004,"t mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):75af0c82edf34587548bacc865cfa1d2261a9696; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540
https://github.com/soedinglab/MMseqs2/issues/541:39,Deployability,update,update,39,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:54,Deployability,update,update,54,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:161,Deployability,update,update,161,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:250,Deployability,update,updates,250,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:258,Deployability,Release,Release,258,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:283,Deployability,Release,Release,283,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:492,Deployability,update,update,492,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:591,Deployability,update,updates,591,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:728,Deployability,update,updates,728,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:736,Deployability,Release,Release,736,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:827,Deployability,update,updates,827,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:971,Deployability,update,updates,971,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1110,Deployability,update,updates,1110,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1118,Deployability,Release,Release,1118,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1143,Deployability,Release,Release,1143,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1318,Deployability,configurat,configuration,1318,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1484,Deployability,update,updated,1484,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:65,Integrability,depend,dependencies,65,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1318,Modifiability,config,configuration,1318,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:207,Security,secur,security,207,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:234,Security,secur,security,234,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:548,Security,secur,security,548,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:575,Security,secur,security,575,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:685,Security,secur,security,685,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:712,Security,secur,security,712,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1067,Security,secur,security,1067,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1094,Security,secur,security,1094,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1207,Security,secur,securely,1207,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
https://github.com/soedinglab/MMseqs2/issues/541:1267,Security,secur,secure,1267,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541
