id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1480,Safety,predict,predict,1480,"path.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1498,Safety,predict,predict,1498,"path.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1827,Safety,predict,prediction,1827,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:2200,Safety,predict,prediction,2200,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Spe",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:3025,Safety,predict,prediction,3025,"thLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:3450,Safety,predict,predict,3450,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5136,Safety,predict,prediction,5136,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5211,Safety,predict,predictWithLock,5211,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5632,Safety,predict,predict,5632,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5653,Safety,predict,predict,5653,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5753,Safety,predict,predict,5753,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6117,Safety,predict,predict,6117,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6348,Safety,predict,predictWithLock,6348,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6380,Safety,predict,predictWithLock,6380,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6454,Safety,predict,predictWithLock,6454,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6482,Safety,predict,predict,6482,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:6500,Safety,predict,predict,6500,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:2319,Security,hash,hashCode,2319,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5807,Security,sanitiz,sanitize,5807,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:980,Usability,User-friendly,User-friendly,980,"penCVClassifiers.DTreesClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.DTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier usin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:5485,Usability,User-friendly,User-friendly,5485,"nal weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:613,Modifiability,extend,extends,613,". OpenCVClassifiers.EMClusterer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropria",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:2220,Modifiability,inherit,inherited,2220,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1234,Safety,predict,predict,1234,"d. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1249,Safety,predict,predict,1249," | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1353,Safety,predict,predictWithLock,1353,"OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass;",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1427,Safety,predict,predictWithLock,1427,"CVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1455,Safety,predict,predict,1455,"CVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1473,Safety,predict,predict,1473,"CVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1802,Safety,predict,prediction,1802,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:2175,Safety,predict,prediction,2175,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Spe",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:3000,Safety,predict,prediction,3000,"thLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:3425,Safety,predict,predict,3425,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5111,Safety,predict,prediction,5111,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5186,Safety,predict,predictWithLock,5186,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5607,Safety,predict,predict,5607,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5628,Safety,predict,predict,5628,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5728,Safety,predict,predict,5728,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6092,Safety,predict,predict,6092,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6323,Safety,predict,predictWithLock,6323,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6355,Safety,predict,predictWithLock,6355,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6429,Safety,predict,predictWithLock,6429,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6457,Safety,predict,predict,6457,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:6475,Safety,predict,predict,6475,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:2294,Security,hash,hashCode,2294,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5782,Security,sanitiz,sanitize,5782,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:955,Usability,User-friendly,User-friendly,955,". OpenCVClassifiers.EMClusterer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropria",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:5460,Usability,User-friendly,User-friendly,5460,"nal weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:492,Integrability,wrap,wrappers,492,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:600,Integrability,wrap,wrappers,600,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1461,Integrability,Wrap,Wrapper,1461,"assifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassif",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2201,Integrability,wrap,wrapStatModel,2201,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2284,Integrability,wrap,wrapping,2284,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2763,Integrability,wrap,wrapStatModel,2763,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2826,Integrability,wrap,wrapStatModel,2826,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2909,Integrability,wrap,wrapping,2909,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:469,Modifiability,extend,extends,469,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2055,Modifiability,extend,extends,2055,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2324,Modifiability,inherit,inherited,2324,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2628,Modifiability,extend,extends,2628,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1531,Performance,perform,performed,1531,"assifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassif",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2398,Security,hash,hashCode,2398,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1240,Testability,Log,LogisticRegressionClassifier,1240,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVCl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1290,Testability,Log,LogisticRegression,1290,"il: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:681,Modifiability,extend,extends,681,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2305,Modifiability,inherit,inherited,2305,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1319,Safety,predict,predict,1319,"onstr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1334,Safety,predict,predict,1334,"H. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1438,Safety,predict,predictWithLock,1438,"path.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; pu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1512,Safety,predict,predictWithLock,1512,"isticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1540,Safety,predict,predict,1540,"isticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1558,Safety,predict,predict,1558,"isticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1887,Safety,predict,prediction,1887,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the def",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2260,Safety,predict,prediction,2260,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in cl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:3485,Safety,predict,prediction,3485,"targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:3910,Safety,predict,predict,3910,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5121,Safety,predict,prediction,5121,"se. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5196,Safety,predict,predictWithLock,5196,"parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5617,Safety,predict,predict,5617,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5638,Safety,predict,predict,5638,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5738,Safety,predict,predict,5738,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6102,Safety,predict,predict,6102,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6333,Safety,predict,predictWithLock,6333,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6365,Safety,predict,predictWithLock,6365,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6439,Safety,predict,predictWithLock,6439,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6467,Safety,predict,predict,6467,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:6485,Safety,predict,predict,6485,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2379,Security,hash,hashCode,2379,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsPro",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5792,Security,sanitiz,sanitize,5792,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:20,Testability,Log,LogisticRegressionClassifier,20,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:411,Testability,Log,LogisticRegressionClassifier,411,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:546,Testability,Log,LogisticRegressionClassifier,546,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:651,Testability,Log,LogisticRegressionClassifier,651,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:744,Testability,Log,LogisticRegression,744,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1040,Usability,User-friendly,User-friendly,1040,". JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier usin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5470,Usability,User-friendly,User-friendly,5470,". toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:661,Modifiability,extend,extends,661,". OpenCVClassifiers.NormalBayesClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData t",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2278,Modifiability,inherit,inherited,2278,"and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Descript",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1302,Safety,predict,predict,1302," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1317,Safety,predict,predict,1317,"ethod. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1411,Safety,predict,predictWithLock,1411,"g.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1485,Safety,predict,predictWithLock,1485,"CVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement pred",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1513,Safety,predict,predict,1513,"CVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement pred",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1531,Safety,predict,predict,1531,"CVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement pred",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1860,Safety,predict,prediction,1860,"targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2233,Safety,predict,prediction,2233,"r. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is su",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2415,Safety,predict,predictWithLock,2415,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2444,Safety,predict,predictWithLock,2444,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2518,Safety,predict,predictWithLock,2518,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2546,Safety,predict,predict,2546,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2564,Safety,predict,predict,2564,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:3369,Safety,predict,prediction,3369,"ait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:3794,Safety,predict,predict,3794,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5480,Safety,predict,prediction,5480,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5555,Safety,predict,predictWithLock,5555,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5976,Safety,predict,predict,5976,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5997,Safety,predict,predict,5997,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:6097,Safety,predict,predict,6097,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:6461,Safety,predict,predict,6461,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2352,Security,hash,hashCode,2352,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifie",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:6151,Security,sanitiz,sanitize,6151,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1023,Usability,User-friendly,User-friendly,1023,"uPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5829,Usability,User-friendly,User-friendly,5829,"nal weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:930,Integrability,Wrap,Wrapper,930,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:914,Modifiability,extend,extends,914,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2420,Modifiability,inherit,inherited,2420,"(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1000,Performance,perform,performed,1000,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1694,Safety,predict,predict,1694,"sifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1718,Safety,predict,predict,1718,"r, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. R",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2193,Safety,predict,prediction,2193,"Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Ret",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:3015,Safety,predict,predict,3015,". Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the Parame",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:3593,Safety,predict,prediction,3593,"CVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Returns:; the parameter list for this classifier. createTrainData; public abstract TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. train(TrainData). train; public abstract void train(TrainData trainData); Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. createTrainData(Mat, Mat, Mat, boolean). predi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:4586,Safety,predict,predict,4586,"c abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Returns:; the parameter list for this classifier. createTrainData; public abstract TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. train(TrainData). train; public abstract void train(TrainData trainData); Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. createTrainData(Mat, Mat, Mat, boolean). predict; public abstract void predict(Mat samples,; Mat results,; Mat probabilities); Apply classification, optionally requesting probability estimates.; ; Not all StatModels are capable of estimating probability values, in which case ; probabilities will be null (if not supplied) or an empty matrix.; ; Note also that if probabilities are required, these will not necessarily be normalized ; between 0 and 1 (although they generally are). They represent a best-effort for the ; StatModel to provide confidence values, but are not (necessarily) strictly probabilities.; ; For example, RTrees estimates probabilities based on the proportion of votes for the 'winning' ; classification. Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:4616,Safety,predict,predict,4616,"c abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Returns:; the parameter list for this classifier. createTrainData; public abstract TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. train(TrainData). train; public abstract void train(TrainData trainData); Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. createTrainData(Mat, Mat, Mat, boolean). predict; public abstract void predict(Mat samples,; Mat results,; Mat probabilities); Apply classification, optionally requesting probability estimates.; ; Not all StatModels are capable of estimating probability values, in which case ; probabilities will be null (if not supplied) or an empty matrix.; ; Note also that if probabilities are required, these will not necessarily be normalized ; between 0 and 1 (although they generally are). They represent a best-effort for the ; StatModel to provide confidence values, but are not (necessarily) strictly probabilities.; ; For example, RTrees estimates probabilities based on the proportion of votes for the 'winning' ; classification. Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2494,Security,hash,hashCode,2494,"eterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise.",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:631,Testability,Log,LogisticRegressionClassifier,631,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1432,Usability,User-friendly,User-friendly,1432,"VClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Objec",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2835,Usability,User-friendly,User-friendly,2835,"es. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParame",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1078,Availability,avail,available,1078,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3242,Availability,avail,available,3242,"ng();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. sup",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:633,Modifiability,extend,extends,633,". OpenCVClassifiers.RTreesClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default va",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1007,Modifiability,variab,variable,1007,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1387,Modifiability,variab,variable,1387,"lassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is s",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2483,Modifiability,inherit,inherited,2483,"and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3006,Modifiability,variab,variable,3006,"ns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpda",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3171,Modifiability,variab,variable,3171,"ng();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. sup",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1507,Safety,predict,predict,1507,"l; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1522,Safety,predict,predict,1522,"ing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1616,Safety,predict,predictWithLock,1616,"nCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1690,Safety,predict,predictWithLock,1690,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1718,Safety,predict,predict,1718,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1736,Safety,predict,predict,1736,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2065,Safety,predict,prediction,2065,"etName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). ge",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2438,Safety,predict,prediction,2438," (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public v",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3370,Safety,predict,predictWithLock,3370,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3399,Safety,predict,predictWithLock,3399,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3473,Safety,predict,predictWithLock,3473,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3501,Safety,predict,predict,3501,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3519,Safety,predict,predict,3519,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:4324,Safety,predict,prediction,4324,"FeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:4749,Safety,predict,predict,4749,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6086,Safety,predict,prediction,6086,"l; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6161,Safety,predict,predictWithLock,6161,"etrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6582,Safety,predict,predict,6582,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6603,Safety,predict,predict,6603,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6703,Safety,predict,predict,6703,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:7067,Safety,predict,predict,7067,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2557,Security,hash,hashCode,2557,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6757,Security,sanitiz,sanitize,6757,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1108,Usability,User-friendly,User-friendly,1108,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be inte",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6435,Usability,User-friendly,User-friendly,6435," TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:629,Modifiability,extend,extends,629,". OpenCVClassifiers.SVMClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using da",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2238,Modifiability,inherit,inherited,2238,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1252,Safety,predict,predict,1252,"eld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1267,Safety,predict,predict,1267,"; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1371,Safety,predict,predictWithLock,1371,"ers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate;",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1445,Safety,predict,predictWithLock,1445,"l; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1473,Safety,predict,predict,1473,"l; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1491,Safety,predict,predict,1491,"l; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1820,Safety,predict,prediction,1820,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Desc",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2193,Safety,predict,prediction,2193,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2940,Safety,predict,prediction,2940,"Data). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:3365,Safety,predict,predict,3365,"fyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5051,Safety,predict,prediction,5051,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5126,Safety,predict,predictWithLock,5126,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5547,Safety,predict,predict,5547,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5568,Safety,predict,predict,5568,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5668,Safety,predict,predict,5668,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6032,Safety,predict,predict,6032,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6263,Safety,predict,predictWithLock,6263,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6295,Safety,predict,predictWithLock,6295,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6369,Safety,predict,predictWithLock,6369,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6397,Safety,predict,predict,6397,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:6415,Safety,predict,predict,6415,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2312,Security,hash,hashCode,2312,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5722,Security,sanitiz,sanitize,5722,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:973,Usability,User-friendly,User-friendly,973,". OpenCVClassifiers.SVMClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using da",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:5400,Usability,User-friendly,User-friendly,5400,"nal weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:641,Modifiability,extend,extends,641,". OpenCVClassifiers.SVMSGDClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the clas",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:2253,Modifiability,inherit,inherited,2253,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1267,Safety,predict,predict,1267," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1282,Safety,predict,predict,1282,"tail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1386,Safety,predict,predictWithLock,1386,"assifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate;",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1460,Safety,predict,predictWithLock,1460,".opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1488,Safety,predict,predict,1488,".opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1506,Safety,predict,predict,1506,".opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1835,Safety,predict,prediction,1835,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Desc",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:2208,Safety,predict,prediction,2208,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:2955,Safety,predict,prediction,2955,"Data). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:3380,Safety,predict,predict,3380,"fyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5066,Safety,predict,prediction,5066,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5141,Safety,predict,predictWithLock,5141,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5562,Safety,predict,predict,5562,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5583,Safety,predict,predict,5583,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5683,Safety,predict,predict,5683,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6047,Safety,predict,predict,6047,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6278,Safety,predict,predictWithLock,6278,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6310,Safety,predict,predictWithLock,6310,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6384,Safety,predict,predictWithLock,6384,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6412,Safety,predict,predict,6412,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:6430,Safety,predict,predict,6430,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:2327,Security,hash,hashCode,2327,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5737,Security,sanitiz,sanitize,5737,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:988,Usability,User-friendly,User-friendly,988,"ssifiers.SVMSGDClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier usin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:5415,Usability,User-friendly,User-friendly,5415,"nal weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:2101,Deployability,Patch,PatchClassifierParams,2101,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:2192,Deployability,patch,patch,2192,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:2199,Deployability,Patch,PatchClassifierParams,2199,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:2254,Deployability,Patch,PatchClassifierParams,2254,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:213,Integrability,Interface,Interfaces,213,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:285,Integrability,Interface,Interfaces,285,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1346,Integrability,wrap,wrappers,1346,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1802,Integrability,Wrap,Wrapper,1802,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:499,Modifiability,plugin,plugins,499,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1872,Performance,perform,performed,1872,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:489,Safety,Detect,Detection,489,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1611,Testability,Log,LogisticRegressionClassifier,1611,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1661,Testability,Log,LogisticRegression,1661,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:389,Usability,learn,learning,389,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html:956,Deployability,Patch,PatchClassifierParams,956,. qupath.opencv.ml Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ml. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ml.BioimageIoTools; qupath.opencv.ml.FeaturePreprocessor; qupath.opencv.ml.FeaturePreprocessor.Builder; qupath.opencv.ml.OpenCVClassifiers; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. qupath.opencv.ml.OpenCVClassifiers.BoostClassifier; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.EMClusterer; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html:996,Deployability,Patch,PatchClassifierParams,996,. qupath.opencv.ml Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ml. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ml.BioimageIoTools; qupath.opencv.ml.FeaturePreprocessor; qupath.opencv.ml.FeaturePreprocessor.Builder; qupath.opencv.ml.OpenCVClassifiers; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. qupath.opencv.ml.OpenCVClassifiers.BoostClassifier; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.EMClusterer; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html:689,Testability,Log,LogisticRegressionClassifier,689,. qupath.opencv.ml Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ml. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ml.BioimageIoTools; qupath.opencv.ml.FeaturePreprocessor; qupath.opencv.ml.FeaturePreprocessor.Builder; qupath.opencv.ml.OpenCVClassifiers; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. qupath.opencv.ml.OpenCVClassifiers.BoostClassifier; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.EMClusterer; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1604,Availability,down,downsample,1604,"uilder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4511,Availability,down,downsample,4511,"rom class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; pub",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4683,Availability,down,downsample,4683,"etails. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patc",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2,Deployability,Patch,PatchClassifierParams,2,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:376,Deployability,Patch,PatchClassifierParams,376,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:442,Deployability,Patch,PatchClassifierParams,442,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:491,Deployability,Patch,PatchClassifierParams,491,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:534,Deployability,Patch,PatchClassifierParams,534,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:605,Deployability,Patch,PatchClassifierParams,605,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:729,Deployability,Patch,PatchClassifierParams,729,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:771,Deployability,patch,patch,771,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:800,Deployability,Patch,PatchClassifierParams,800,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:894,Deployability,Patch,PatchClassifierParams,894,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:983,Deployability,Patch,PatchClassifierParams,983,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1108,Deployability,Patch,PatchClassifierParams,1108,"erview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Buil",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1221,Deployability,Patch,PatchClassifierParams,1221,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classifi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1395,Deployability,Patch,PatchClassifierParams,1395,". java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. Patch",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1527,Deployability,Patch,PatchClassifierParams,1527,"chClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1693,Deployability,Patch,PatchClassifierParams,1693,"ype; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). D",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1828,Deployability,Patch,PatchClassifierParams,1828,"t padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define t",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1964,Deployability,Patch,PatchClassifierParams,1964," object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputName",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2093,Deployability,Patch,PatchClassifierParams,2093,"ers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParam",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2246,Deployability,Patch,PatchClassifierParams,2246,"tChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2401,Deployability,Patch,PatchClassifierParams,2401,"arams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Bu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2432,Deployability,patch,patchSize,2432,"n(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2446,Deployability,patch,patchSize,2446,"n(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2486,Deployability,patch,patch,2486,"nput resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2498,Deployability,Patch,PatchClassifierParams,2498,"alibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2529,Deployability,patch,patchSize,2529,"ms.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2543,Deployability,patch,patchWidth,2543,"ms.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2560,Deployability,patch,patchHeight,2560,"ms.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2595,Deployability,patch,patch,2595,"n cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass,",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2607,Deployability,Patch,PatchClassifierParams,2607,"Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2754,Deployability,Patch,PatchClassifierParams,2754,"annelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the inp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2878,Deployability,Patch,PatchClassifierParams,2878,"hClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3084,Deployability,Patch,PatchClassifierParams,3084,"atchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputCha",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3244,Deployability,Patch,PatchClassifierParams,3244,"ssifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a colle",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3388,Deployability,Patch,PatchClassifierParams,3388,"s. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3686,Deployability,Patch,PatchClassifierParams,3686,"stprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; dow",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3890,Deployability,Patch,PatchClassifierParams,3890,"fierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4109,Deployability,Patch,PatchClassifierParams,4109,"ilder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both be",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4435,Deployability,Patch,PatchClassifierParams,4435,"ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested squar",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4784,Deployability,Patch,PatchClassifierParams,4784," channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Bu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4959,Deployability,Patch,PatchClassifierParams,4959,"input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by tho",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5192,Deployability,Patch,PatchClassifierParams,5192,"ransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5334,Deployability,patch,patchSize,5334,"order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5352,Deployability,Patch,PatchClassifierParams,5352,"order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5382,Deployability,patch,patchSize,5382," inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predict",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5396,Deployability,patch,patchSize,5396," inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predict",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5436,Deployability,patch,patch,5436," inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predict",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5461,Deployability,patch,patchSize,5461,"(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preproces",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5497,Deployability,patch,patch,5497,"(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preproces",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5514,Deployability,patch,patchSize,5514,"e input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predict",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5532,Deployability,Patch,PatchClassifierParams,5532,"e input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predict",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5562,Deployability,patch,patchSize,5562,"or. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, St",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5576,Deployability,patch,patchWidth,5576,"or. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, St",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5593,Deployability,patch,patchHeight,5593,"or. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, St",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5628,Deployability,patch,patch,5628,"or. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, St",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5653,Deployability,patch,patchWidth,5653,"sample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padd",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5676,Deployability,patch,patch,5676,"sample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padd",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5689,Deployability,patch,patchHeight,5689,"sample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padd",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5713,Deployability,patch,patch,5713,"sample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padd",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:5759,Deployability,Patch,PatchClassifierParams,5759,". inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6047,Deployability,Patch,PatchClassifierParams,6047,"nd y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6355,Deployability,Patch,PatchClassifierParams,6355,"hClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postproce",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6626,Deployability,Patch,PatchClassifierParams,6626," patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6947,Deployability,Patch,PatchClassifierParams,6947,"e replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. out",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:7241,Deployability,Patch,PatchClassifierParams,7241," builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:7561,Deployability,Patch,PatchClassifierParams,7561,"Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); out",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:7756,Deployability,Patch,PatchClassifierParams,7756," prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:8046,Deployability,Patch,PatchClassifierParams,8046,"ing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string values. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClasses(PathClass...); outputClassNames(String...). build; public PatchClassifierParams build(); Build the patch classifier parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:8323,Deployability,Patch,PatchClassifierParams,8323,"ing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string values. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClasses(PathClass...); outputClassNames(String...). build; public PatchClassifierParams build(); Build the patch classifier parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:8610,Deployability,Patch,PatchClassifierParams,8610,"ing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string values. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClasses(PathClass...); outputClassNames(String...). build; public PatchClassifierParams build(); Build the patch classifier parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:8908,Deployability,Patch,PatchClassifierParams,8908,"ing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string values. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClasses(PathClass...); outputClassNames(String...). build; public PatchClassifierParams build(); Build the patch classifier parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:8949,Deployability,patch,patch,8949,"ing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(String... outputClasses); Define the classifications for the output as an array of classification names. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(PathClass...); outputClassNames(String...). outputClassNames; public PatchClassifierParams.Builder outputClassNames(Map<Integer,String> outputClasses); Define the classifications for the output as a map with string values. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClasses(PathClass...); outputClassNames(String...). build; public PatchClassifierParams build(); Build the patch classifier parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:565,Modifiability,extend,extends,565,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1279,Modifiability,extend,extends,1279," | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Build",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2666,Modifiability,extend,extends,2666,"ation and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3302,Modifiability,extend,extends,3302,"eger,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collecti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3517,Modifiability,inherit,inherited,3517,"er; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); De",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4166,Modifiability,extend,extends,4166,"prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6104,Modifiability,extend,extends,6104,"and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:7299,Modifiability,extend,extends,7299,"; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputClasses - ; Returns:; See Also:. outputClassNames(Map); outputClasses(PathClass...); outputClassNames(String...). outputClasses; public PatchClassifierParams.Builder outputClasses(PathClass... outputClasses); Define the classifications for the output as an array. Parameters:; outputClasses - ; Returns:; See Also:. outputClasses(Map); outputClassNames(Map); outputClassNames(String...). outputClassNames; public Pa",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2909,Safety,predict,prediction,2909,"cations for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChanne",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3009,Safety,predict,prediction,3009,"asses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; chan",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3115,Safety,predict,prediction,3115,"putClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierPar",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3134,Safety,predict,predictionOp,3134,"putClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierPar",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3160,Safety,predict,prediction,3160,"or the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorT",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6336,Safety,predict,prediction,6336,"hClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postproce",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6385,Safety,predict,prediction,6385,"e. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builde",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6404,Safety,predict,predictionOp,6404,"e. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builde",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6430,Safety,predict,prediction,6430,"e. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builde",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6527,Safety,predict,predictionOp,6527,"lassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6565,Safety,predict,prediction,6565,"dth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6607,Safety,predict,prediction,6607," patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6656,Safety,predict,prediction,6656,"tch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6756,Safety,predict,prediction,6756,"fierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifier",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6903,Safety,predict,prediction,6903,"sing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputCla",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3591,Security,hash,hashCode,3591,"tch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2,Deployability,Patch,PatchClassifierParams,2,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:368,Deployability,Patch,PatchClassifierParams,368,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:426,Deployability,Patch,PatchClassifierParams,426,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:462,Deployability,Patch,PatchClassifierParams,462,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:569,Deployability,patch,patch,569,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:699,Deployability,patch,patches,699,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:922,Deployability,Patch,PatchClassifierParams,922,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:977,Deployability,Patch,PatchClassifierParams,977,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1122,Deployability,Patch,PatchClassifierParams,1122,"verview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1197,Deployability,patch,patch,1197,"nstr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1229,Deployability,Patch,PatchClassifierParams,1229,". Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPre",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1268,Deployability,Patch,PatchClassifierParams,1268,"tr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1332,Deployability,patch,patch,1332,"l; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:1467,Deployability,Patch,PatchClassifierParams,1467,"ss PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2038,Deployability,patch,patch,2038,"thodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2097,Deployability,patch,patch,2097,"ethod; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public Pixe",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2754,Deployability,patch,patch,2754,"alibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getP",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2847,Deployability,patch,patch,2847,"rverMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preproc",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4100,Deployability,Patch,PatchClassifierParams,4100,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4237,Deployability,Patch,PatchClassifierParams,4237,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4311,Deployability,patch,patch,4311,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4369,Deployability,Patch,PatchClassifierParams,4369,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4407,Deployability,Patch,PatchClassifierParams,4407,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4471,Deployability,patch,patch,4471,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:485,Modifiability,extend,extends,485,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2387,Modifiability,inherit,inherited,2387,"existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2209,Safety,predict,prediction,2209,"enerate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Retu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2275,Safety,predict,prediction,2275,"atchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelTy",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:3000,Safety,avoid,avoid,3000," output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:3772,Safety,predict,prediction,3772,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:4005,Safety,predict,prediction,4005,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2461,Security,hash,hashCode,2461,"PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally chan",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1637,Availability,avail,available,1637," Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to reflect the output of this transform, given the input. Parameters:; imageData - ; Returns:. appendOps; ImageDataOp appendOps(ImageOp... ops); Append one or more additional ImageOps sequentially.; This ImageDataOp is unchanged, and a new one is created with the additional op appended. Parameters:; ops - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1313,Deployability,update,updateUris,1313," Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to refle",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1325,Deployability,update,updateURIs,1325," Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to refle",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:353,Integrability,Interface,Interface,353,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:418,Integrability,interface,interface,418,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1258,Integrability,interface,interface,1258,"d | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<Buffer",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:441,Modifiability,extend,extends,441,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1243,Modifiability,inherit,inherited,1243,"d | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<Buffer",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:357,Integrability,Interface,Interface,357,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:471,Integrability,interface,interface,471,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:545,Integrability,wrap,wraps,545,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:822,Integrability,interface,interface,822,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1098,Integrability,wrap,wrapped,1098,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1153,Integrability,interface,interface,1153,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1218,Integrability,interface,interface,1218,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1800,Integrability,wrap,wrapped,1800,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:501,Modifiability,extend,extends,501,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1138,Modifiability,inherit,inherited,1138,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:1203,Modifiability,inherit,inherited,1203,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1450,Deployability,update,updateURIs,1450,"c interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the paddin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1642,Deployability,update,updateUris,1642,"extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3601,Deployability,update,updateURIs,3601,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3629,Deployability,update,updateURIs,3629,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3787,Deployability,update,updateURIs,3787,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:349,Integrability,Interface,Interface,349,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:462,Integrability,interface,interface,462,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1596,Integrability,interface,interface,1596,"to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3527,Integrability,interface,interface,3527,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3801,Integrability,interface,interface,3801,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:481,Modifiability,extend,extends,481,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1581,Modifiability,inherit,inherited,1581,"to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:2392,Performance,perform,perform,2392,"rride this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOExceptio",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:574,Usability,simpl,simple,574,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:506,Modifiability,extend,extends,506,". ImageOps.Channels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Channels. java.lang.Object; qupath.opencv.ops.ImageOps.Channels. Enclosing class:; ImageOps. public static class ImageOps.Channels; extends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. rep",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:1427,Modifiability,inherit,inherited,1427,"ls. Enclosing class:; ImageOps. public static class ImageOps.Channels; extends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:1501,Security,hash,hashCode,1501,"xtends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a single-channel output. Returns:. minimum; public static ImageOp minimum(",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1201,Energy Efficiency,power,power,1201,"nstr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Core. java.lang.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1551,Energy Efficiency,power,power,1551,"tors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1603,Energy Efficiency,power,power,1603,";  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the re",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:4781,Energy Efficiency,power,power,4781," Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. spl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:4810,Energy Efficiency,power,power,4810," Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. spl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:4862,Energy Efficiency,power,power,4862," Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. spl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6410,Energy Efficiency,power,power,6410,"ing the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:490,Modifiability,extend,extends,490,". ImageOps.Core (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Core. java.lang.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collect",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1963,Modifiability,extend,extends,1963," static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as ch",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:2669,Modifiability,extend,extends,2669,"uble newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notify",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:3562,Modifiability,inherit,inherited,3562,"nd ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtra",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:5053,Modifiability,extend,extends,5053,"to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:5586,Modifiability,extend,extends,5586,"tract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point va",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6255,Performance,perform,performed,6255,"the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:3636,Security,hash,hashCode,3636,"p; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constan",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1390,Testability,log,log,1390,"g.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the re",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1435,Testability,log,logarithm,1435,". Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. stat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6445,Testability,log,log,6445,"t of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; newValue - the value to use in the output image; Returns:. splitAdd; public static ImageOp splitAdd(ImageOp opLeft",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6472,Testability,log,log,6472,"t of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; newValue - the value to use in the output image; Returns:. splitAdd; public static ImageOp splitAdd(ImageOp opLeft",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6517,Testability,log,logarithm,6517,"t of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; newValue - the value to use in the output image; Returns:. splitAdd; public static ImageOp splitAdd(ImageOp opLeft",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html:502,Modifiability,extend,extends,502,". ImageOps.Filters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Filters. java.lang.Object; qupath.opencv.ops.ImageOps.Filters. Enclosing class:; ImageOps. public static class ImageOps.Filters; extends Object; Filtering operations. Constructor Summary; Constructors. Constructor; Description; Filters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; closing(int radius). Apply a 2D morphological closing filter. static ImageOp; features(Collection<MultiscaleFeatures.MultiscaleFeature> features,; double sigmaX,; double sigmaY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters()",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html:1824,Modifiability,inherit,inherited,1824,"iscaleFeatures.MultiscaleFeature> features,; double sigmaX,; double sigmaY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters(). Method Details. gaussianBlur; public static ImageOp gaussianBlur(double sigmaX,; double sigmaY); Apply a (possibly anisotropic) 2D Gaussian filter. Parameters:; sigmaX - ; sigmaY - ; Returns:. gaussianBlur; public static ImageOp gaussianBlur(double sigma); Apply a 2D Gaussian filter. Parameters:; sigma - ; Returns:. filter2D; public static ImageOp filter2D(Mat kernel); Apply a 2D filter. Parameters:; kernel - ; Returns:. mean; public static ImageOp mean(int radius); Apply a 2D circular mean filter. Parameters:; radius - filter radius; Returns:. sum; public static ImageOp sum(int radius); Apply a 2D circular sum filter. Parameters:; radius - filter radius; Returns:. variance; public static ImageOp variance(int radius); Apply a 2D circular variance filter. Parameters:; radius - filter radius; Returns:. stdDev; public sta",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html:1898,Security,hash,hashCode,1898,"aY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters(). Method Details. gaussianBlur; public static ImageOp gaussianBlur(double sigmaX,; double sigmaY); Apply a (possibly anisotropic) 2D Gaussian filter. Parameters:; sigmaX - ; sigmaY - ; Returns:. gaussianBlur; public static ImageOp gaussianBlur(double sigma); Apply a 2D Gaussian filter. Parameters:; sigma - ; Returns:. filter2D; public static ImageOp filter2D(Mat kernel); Apply a 2D filter. Parameters:; kernel - ; Returns:. mean; public static ImageOp mean(int radius); Apply a 2D circular mean filter. Parameters:; radius - filter radius; Returns:. sum; public static ImageOp sum(int radius); Apply a 2D circular sum filter. Parameters:; radius - filter radius; Returns:. variance; public static ImageOp variance(int radius); Apply a 2D circular variance filter. Parameters:; radius - filter radius; Returns:. stdDev; public static ImageOp stdDev(int radius); Apply a 2D circular standard deviation f",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4610,Integrability,wrap,wrap,4610,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:5279,Integrability,wrap,wrap,5279,"taOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageData",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:435,Modifiability,extend,extends,435,". ImageOps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applyin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1479,Modifiability,extend,extends,1479,"ject; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int p",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2535,Modifiability,extend,extends,2535,"eate an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2679,Modifiability,extend,extends,2679,"orm... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? ex",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2791,Modifiability,inherit,inherited,2791,"rver<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3038,Modifiability,extend,extends,3038,"erver(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3679,Modifiability,extend,extends,3679,"ing label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:6010,Modifiability,extend,extends,6010,"es pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. padAndApply; public static Mat padAndApply(ImageOp op,; Mat mat,; int padType); Apply an op after adding specified padding.; ; This is useful when applying padded ops to Mats directly, rather than via an ImageDataOp.; Because the op will strip off any padding, calling op.apply(mat) directly often results in a smaller ; output than the input image. Using this method instead gives an output image that is the same size as ; the input. Parameters:; op - the op to apply; mat - the image to process; padType - the OpenCV boundary padding type; Returns:; the result of applying the op to the input image; no",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4632,Performance,perform,performing,4632,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:5301,Performance,perform,performing,5301,"taOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageData",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2865,Security,hash,hashCode,2865,"ageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3613,Testability,log,logged,3613," for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4116,Testability,log,logged,4116,"N serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentia",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1016,Usability,learn,learning,1016,"5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. sta",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1152,Usability,simpl,simplify,1152,"Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:482,Modifiability,extend,extends,482,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1169,Modifiability,inherit,inherited,1169,"d; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:851,Safety,predict,prediction,851,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1149,Safety,predict,prediction,1149,"recated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1516,Safety,predict,prediction,1516,"ncv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreprocessor to pixels, considering each channel as features. Parameters:; preprocessor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1756,Safety,predict,prediction,1756,"ncv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreprocessor to pixels, considering each channel as features. Parameters:; preprocessor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1243,Security,hash,hashCode,1243," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreproce",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:506,Usability,learn,learning,506,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:510,Modifiability,extend,extends,510,". ImageOps.Normalize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Normalize. java.lang.Object; qupath.opencv.ops.ImageOps.Normalize. Enclosing class:; ImageOps. public static class ImageOps.Normalize; extends Object; Normalization operations. Constructor Summary; Constructors. Constructor; Description; Normalize();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; channelSoftmax(double maxValue). Apply softmax, with the specified output maxValue. static ImageOp; channelSum(double maxValue). Normalize channels so that they sum to the specified value. static ImageOp; localNormalization(double sigmaMean,; double sigmaVariance). Apply local 2D normalization using Gaussian-weighted mean subtraction and (optionally) variance ; estimation. static ImageOp; minMax(). Normalize the minimum and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:2085,Modifiability,inherit,inherited,2085,"ly) variance ; estimation. static ImageOp; minMax(). Normalize the minimum and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:2159,Security,hash,hashCode,2159,"um and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This method is applied per-channel, with no eps added to the denominator if m",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1389,Deployability,update,updateURIs,1389,"ps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1470,Deployability,update,updateUris,1470,"s:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:2021,Energy Efficiency,efficient,efficient,2021," Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndAppl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:455,Integrability,Interface,Interfaces,455,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1315,Integrability,interface,interface,1315," | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Des",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1424,Integrability,interface,interface,1424,"ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the ope",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:2333,Integrability,interface,interface,2333,"path.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:2716,Integrability,interface,interface,2716,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:3010,Integrability,interface,interface,3010,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:3385,Integrability,interface,interface,3385,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:566,Modifiability,extend,extends,566,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1161,Modifiability,inherit,inherited,1161,". Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channel",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1300,Modifiability,inherit,inherited,1300," | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Des",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1409,Modifiability,inherit,inherited,1409,"ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the ope",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:3140,Performance,perform,perform,3140,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1235,Security,hash,hashCode,1235,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Pa",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:622,Usability,simpl,simplify,622,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html:510,Modifiability,extend,extends,510,". ImageOps.Threshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html:1067,Modifiability,inherit,inherited,1067,".    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale factor applied to a standard deviation (assuming a roughly normal distribu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html:1141,Security,hash,hashCode,1141,"w; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale factor applied to a standard deviation (assuming a roughly normal distribution). Parameters:; k - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:214,Integrability,Interface,Interfaces,214,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:286,Integrability,Interface,Interfaces,286,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:886,Integrability,Interface,InterfacesInterfacesClasses,886,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:1059,Integrability,wrap,wraps,1059,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:468,Modifiability,plugin,plugins,468,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:458,Safety,Detect,Detection,458,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:748,Usability,learn,learning,748,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:1331,Usability,learn,learning,1331,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:1437,Usability,simpl,simplify,1437,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-tree.html:614,Integrability,Interface,Interface,614,. qupath.opencv.ops Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ops. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ops.ImageOps; qupath.opencv.ops.ImageOps.Channels; qupath.opencv.ops.ImageOps.Core; qupath.opencv.ops.ImageOps.Filters; qupath.opencv.ops.ImageOps.ML; qupath.opencv.ops.ImageOps.Normalize; qupath.opencv.ops.ImageOps.PaddedOp (implements qupath.opencv.ops.ImageOp); qupath.opencv.ops.ImageOps.Threshold. Interface Hierarchy. java.lang.AutoCloseable. qupath.lib.images.servers.ImageServer<T>. qupath.opencv.ops.ImageDataServer<T>. qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:660,Deployability,release,releases,660,". GroovyCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class GroovyCV. java.lang.Object; qupath.opencv.tools.GroovyCV. public class GroovyCV; extends Object; Category class for enhanced Groovy scripting with OpenCV.; ; See https://docs.groovy-lang.org/latest/html/api/groovy/lang/Category.html; ; Warning! This is experimental and likely to change between QuPath releases.; Use with caution and discuss on http://forum.image.sc/tag/qupath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Mat; abs(Mat mat). Compute the absolute value of all elements in an array. static Mat; and(Mat m1,; Mat m2). Compute the bitwise AND of two arrays. static <T> T; asType(ImagePlus imp,; Class<T> cls). Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. static <T> T; asType(ImageProcessor ip,; Class<T> cls). Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. static <T> T; asType(BufferedImage img,; Class<T> cls). Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. static <T> T; asType(Number n,; Class<T> cls). Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. static <T> T; asType(Mat mat,; Class<T> cls). Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's 'as' syntax. static Mat; bitwiseNegate(Mat m1). Compute the bitwise NOT of an array. static Mat; clip(Mat mat,; double min,; double max). Clip values of a Mat to be withi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:4513,Energy Efficiency,power,power,4513,"Mat mat). Find the minimum of all elements in a Mat, ignoring NaNs. static Mat; minimum(Mat m1,; double d). Get the per-element minimum value between an array and a scalar. static Mat; minimum(Mat m1,; Mat m2). Get the per-element minimum value for two arrays. static Mat; minus(Mat m1,; Number s). Subtract a constant from an array. static Mat; minus(Mat m1,; Mat m2). Subtract one array from another. static Mat; minus(Mat m1,; Scalar s). Subtract a scalar from an array. static Mat; multiply(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:4535,Energy Efficiency,power,power,4535,"Mat mat). Find the minimum of all elements in a Mat, ignoring NaNs. static Mat; minimum(Mat m1,; double d). Get the per-element minimum value between an array and a scalar. static Mat; minimum(Mat m1,; Mat m2). Get the per-element minimum value for two arrays. static Mat; minus(Mat m1,; Number s). Subtract a constant from an array. static Mat; minus(Mat m1,; Mat m2). Subtract one array from another. static Mat; minus(Mat m1,; Scalar s). Subtract a scalar from an array. static Mat; multiply(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:4585,Energy Efficiency,power,power,4585," a Mat, ignoring NaNs. static Mat; minimum(Mat m1,; double d). Get the per-element minimum value between an array and a scalar. static Mat; minimum(Mat m1,; Mat m2). Get the per-element minimum value for two arrays. static Mat; minus(Mat m1,; Number s). Subtract a constant from an array. static Mat; minus(Mat m1,; Mat m2). Subtract one array from another. static Mat; minus(Mat m1,; Scalar s). Subtract a scalar from an array. static Mat; multiply(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ig",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8808,Energy Efficiency,power,power,8808,"ic static Mat div(Mat m1,; Mat m2); Per-element division of two arrays. Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8833,Energy Efficiency,power,power,8833,"ic static Mat div(Mat m1,; Mat m2); Per-element division of two arrays. Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8855,Energy Efficiency,power,power,8855,"ic static Mat div(Mat m1,; Mat m2); Per-element division of two arrays. Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8905,Energy Efficiency,power,power,8905,"ic static Mat div(Mat m1,; Mat m2); Per-element division of two arrays. Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8932,Energy Efficiency,power,power,8932,"Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. geq; public static Mat geq(Mat m1,; double thre",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:439,Modifiability,extend,extends,439,". GroovyCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class GroovyCV. java.lang.Object; qupath.opencv.tools.GroovyCV. public class GroovyCV; extends Object; Category class for enhanced Groovy scripting with OpenCV.; ; See https://docs.groovy-lang.org/latest/html/api/groovy/lang/Category.html; ; Warning! This is experimental and likely to change between QuPath releases.; Use with caution and discuss on http://forum.image.sc/tag/qupath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Mat; abs(Mat mat). Compute the absolute value of all elements in an array. static Mat; and(Mat m1,; Mat m2). Compute the bitwise AND of two arrays. static <T> T; asType(ImagePlus imp,; Class<T> cls). Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. static <T> T; asType(ImageProcessor ip,; Class<T> cls). Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. static <T> T; asType(BufferedImage img,; Class<T> cls). Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. static <T> T; asType(Number n,; Class<T> cls). Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. static <T> T; asType(Mat mat,; Class<T> cls). Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's 'as' syntax. static Mat; bitwiseNegate(Mat m1). Compute the bitwise NOT of an array. static Mat; clip(Mat mat,; double min,; double max). Clip values of a Mat to be withi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:474,Modifiability,enhance,enhanced,474,". GroovyCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class GroovyCV. java.lang.Object; qupath.opencv.tools.GroovyCV. public class GroovyCV; extends Object; Category class for enhanced Groovy scripting with OpenCV.; ; See https://docs.groovy-lang.org/latest/html/api/groovy/lang/Category.html; ; Warning! This is experimental and likely to change between QuPath releases.; Use with caution and discuss on http://forum.image.sc/tag/qupath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Mat; abs(Mat mat). Compute the absolute value of all elements in an array. static Mat; and(Mat m1,; Mat m2). Compute the bitwise AND of two arrays. static <T> T; asType(ImagePlus imp,; Class<T> cls). Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. static <T> T; asType(ImageProcessor ip,; Class<T> cls). Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. static <T> T; asType(BufferedImage img,; Class<T> cls). Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. static <T> T; asType(Number n,; Class<T> cls). Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. static <T> T; asType(Mat mat,; Class<T> cls). Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's 'as' syntax. static Mat; bitwiseNegate(Mat m1). Compute the bitwise NOT of an array. static Mat; clip(Mat mat,; double min,; double max). Clip values of a Mat to be withi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:5006,Modifiability,inherit,inherited,5006,"y(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. max; public static double max(Mat mat); Find the maximum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. min; public static double min(Mat mat); Find the minimum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. flatten; public static Mat flatten(Mat mat); Flatten a Mat to give a single column. Parameters:; mat - ; Returns:. shape; public static long[] sha",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:5080,Security,hash,hashCode,5080," multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. max; public static double max(Mat mat); Find the maximum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. min; public static double min(Mat mat); Find the minimum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. flatten; public static Mat flatten(Mat mat); Flatten a Mat to give a single column. Parameters:; mat - ; Returns:. shape; public static long[] shape(Mat mat); Get the shape of a multidimensional Mat. Parameters:; mat -",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html:459,Modifiability,extend,extends,459,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Interpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html:1060,Modifiability,inherit,inherited,1060,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Interpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html:1134,Security,hash,hashCode,1134,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Interpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:3501,Energy Efficiency,efficient,efficient,3501,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:479,Modifiability,extend,extends,479,". LocalNormalization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization. java.lang.Object; qupath.opencv.tools.LocalNormalization. public class LocalNormalization; extends Object; Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance.; Calculations are made using Gaussian filters to give a smooth result. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:1786,Modifiability,inherit,inherited,1786,"ss ; LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:1860,Security,hash,hashCode,1860,"cal normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted f",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:3493,Usability,simpl,simple,3493,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html:616,Modifiability,extend,extends,616,". LocalNormalization.LocalNormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.LocalNormalizationType. java.lang.Object; qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Enclosing class:; LocalNormalization. public static class LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html:1492,Modifiability,inherit,inherited,1492,"alizationType. Enclosing class:; LocalNormalization. public static class LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance); Get an object containing the parameters necessary for normalization. Parameters:; scale - Gaussian sigma value used for initial filters (mean subtraction); scaleVariance - sigma value used for variance estimation (may be null to apply subtraction only); Returns:. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio); Get an objec",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html:1566,Security,hash,hashCode,1566," LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance); Get an object containing the parameters necessary for normalization. Parameters:; scale - Gaussian sigma value used for initial filters (mean subtraction); scaleVariance - sigma value used for variance estimation (may be null to apply subtraction only); Returns:. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio); Get an object containing the parameters necessary for normalization. Parameters:; sc",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:607,Integrability,Interface,Interfaces,607,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:905,Integrability,interface,interfaces,905,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:790,Modifiability,extend,extends,790,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:916,Modifiability,inherit,inherited,916,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:969,Modifiability,extend,extends,969,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1655,Modifiability,inherit,inherited,1655,".NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Local",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1818,Modifiability,inherit,inherited,1818,"alizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1766,Security,hash,hashCode,1766,"enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of t",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2155,Integrability,depend,depending,2155,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:584,Modifiability,extend,extends,584,". LocalNormalization.SmoothingScale (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:1310,Modifiability,inherit,inherited,1310," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:1264,Security,hash,hashCode,1264," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D an",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2505,Security,hash,hashCode,2505,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2526,Security,hash,hashCode,2526,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2550,Security,hash,hashCode,2550,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:370,Integrability,Interface,Interface,370,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:590,Integrability,interface,interface,590,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:1235,Integrability,interface,interface,1235,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:628,Modifiability,extend,extends,628,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:1220,Modifiability,inherit,inherited,1220,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:492,Integrability,Interface,Interfaces,492,". MultiscaleFeatures.Hessian2D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1450,Integrability,interface,interface,1450,".opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1609,Integrability,interface,interface,1609,"ultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the deter",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1751,Integrability,interface,interface,1751,"D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1953,Integrability,interface,interface,1953,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:2202,Integrability,interface,interface,2202,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:2326,Integrability,interface,interface,2326,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:2556,Integrability,interface,interface,2556,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:2664,Integrability,interface,interface,2664,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:2764,Integrability,interface,interface,2764,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:636,Modifiability,extend,extends,636,". MultiscaleFeatures.Hessian2D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1238,Modifiability,inherit,inherited,1238,"ummary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1312,Security,hash,hashCode,1312,"nstr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:492,Integrability,Interface,Interfaces,492,". MultiscaleFeatures.Hessian3D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1461,Integrability,interface,interface,1461,"ls.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1620,Integrability,interface,interface,1620,"atures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the deter",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1762,Integrability,interface,interface,1762,"-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1964,Integrability,interface,interface,1964,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:2213,Integrability,interface,interface,2213,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:2337,Integrability,interface,interface,2337,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:2567,Integrability,interface,interface,2567,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:2675,Integrability,interface,interface,2675,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:2775,Integrability,interface,interface,2775,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:636,Modifiability,extend,extends,636,". MultiscaleFeatures.Hessian3D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1249,Modifiability,inherit,inherited,1249,"ested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1323,Security,hash,hashCode,1323,"thod. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:653,Integrability,interface,interface,653,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:1013,Integrability,depend,dependent,1013,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:479,Modifiability,extend,extends,479,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:1276,Modifiability,inherit,inherited,1276,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:1350,Security,hash,hashCode,1350,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:607,Integrability,Interface,Interfaces,607,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:858,Integrability,depend,dependent,858,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:924,Integrability,interface,interfaces,924,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:790,Modifiability,extend,extends,790,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:935,Modifiability,inherit,inherited,935,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:988,Modifiability,extend,extends,988,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:2891,Modifiability,inherit,inherited,2891,"e tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public sta",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:3044,Modifiability,inherit,inherited,3044,"ted per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (b",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:3002,Security,hash,hashCode,3002,"_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDD",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2364,Availability,avail,available,2364,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2491,Availability,avail,available,2491,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:635,Integrability,Interface,Interfaces,635,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1080,Integrability,interface,interfaces,1080,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1219,Integrability,interface,interfaces,1219,"Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFea",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1245,Integrability,interface,interface,1245,"Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFea",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1875,Integrability,interface,interface,1875,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2634,Integrability,interface,interface,2634,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:834,Modifiability,extend,extends,834,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1091,Modifiability,inherit,inherited,1091,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1230,Modifiability,inherit,inherited,1230,"Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFea",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1577,Modifiability,inherit,inherited,1577,"tiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeatu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1756,Modifiability,inherit,inherited,1756," static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.Multiscale",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1860,Modifiability,inherit,inherited,1860,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:995,Security,access,access,995,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1676,Security,hash,hashCode,1676,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2015,Security,hash,hashCode,2015,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1147,Usability,Simpl,SimpleEntry,1147,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1177,Usability,Simpl,SimpleImmutableEntry,1177,"; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.H",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1621,Usability,clear,clear,1621,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1900,Usability,clear,clear,1900,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:2645,Availability,down,downsampleXY,2645,"slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.MultiscaleResultsBuilder; hessianDeterminant(boolean calculate). Calculate the determinant of the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; hessianEigenvalues(boolean calculate). Calculate the eigenvalues of the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; laplacianOfGaussian(boolean calculate). Calculate the Laplacian of Gaussian image. MultiscaleFeatures.MultiscaleResultsBuilder; paddingXY(int padding). Specify the number of pixels that the input image is padded (left, right, above, below). MultiscaleFeatures.MultiscaleResultsBuilder; pixelCalibration(PixelCalibration cal,; double downsampleXY). Set the pixel calibration, with optional x,y scaling. MultiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standar",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6163,Availability,down,downsampleXY,6163,"laplacianOfGaussian; public MultiscaleFeatures.MultiscaleResultsBuilder laplacianOfGaussian(boolean calculate); Calculate the Laplacian of Gaussian image. Parameters:; calculate - ; Returns:. hessianEigenvalues; public MultiscaleFeatures.MultiscaleResultsBuilder hessianEigenvalues(boolean calculate); Calculate the eigenvalues of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. retainHessian; public MultiscaleFeatures.MultiscaleResultsBuilder retainHessian(boolean retain); Optionally retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6238,Availability,avail,available,6238,"lculate the Laplacian of Gaussian image. Parameters:; calculate - ; Returns:. hessianEigenvalues; public MultiscaleFeatures.MultiscaleResultsBuilder hessianEigenvalues(boolean calculate); Calculate the eigenvalues of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. retainHessian; public MultiscaleFeatures.MultiscaleResultsBuilder retainHessian(boolean retain); Optionally retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigm",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6528,Availability,Down,DownsampleXY,6528,"ly retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaX(double); sigmaY(double). sigmaX; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaX(double sigma); Set all Gaussian sigma values for the horizontal filter.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaXY(double); s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6627,Availability,down,downsampled,6627,"ly retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaX(double); sigmaY(double). sigmaX; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaX(double sigma); Set all Gaussian sigma values for the horizontal filter.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaXY(double); s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6732,Availability,down,downsampling,6732,"ly retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaX(double); sigmaY(double). sigmaX; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaX(double sigma); Set all Gaussian sigma values for the horizontal filter.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaXY(double); s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6826,Availability,down,downsampleXY,6826,"turns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaX(double); sigmaY(double). sigmaX; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaX(double sigma); Set all Gaussian sigma values for the horizontal filter.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaXY(double); sigmaY(double); sigmaZ(double). sigmaY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaY(double sigma); Set all Gaussian sigma values for the vertical filter.; ; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:624,Modifiability,extend,extends,624,". MultiscaleFeatures.MultiscaleResultsBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.MultiscaleResultsBuilder; extends Object; Helper-class for computing pixel-features at a specified scale. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Constructor Summary; Constructors. Constructor; Description; MultiscaleResultsBuilder(). Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features). Constructor prepared to calculate specified features. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap>; build(List<Mat> mats). Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(List<Mat> mats,; int ind). Calculate results for a map of features and Mats for one slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.M",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:3637,Modifiability,inherit,inherited,3637,"downsampleXY). Set the pixel calibration, with optional x,y scaling. MultiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standard deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(); Default constructor. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features); Constructor prepared to calculate specified features. Parameters:; features - . Method Details. gaussianSmoothed; public MultiscaleFeatures.MultiscaleResultsBuilder gaussianSmoothed(boolean calculate); Calculate the Gaussian-smoothed image. Parameters:; calculate - ; Returns:. paddingXY; public MultiscaleFeatures.MultiscaleResultsBuilder paddingXY(int padding); Specify the number of pixels that the input image is padded (left, right, above, below). ; This padding will be stripped prior to outputting the results. Default is 0. Parameters:; padding - ; Returns:. weightedStdDev; public MultiscaleFeatures.MultiscaleResultsBuilder weightedStdDev(boolean ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:892,Security,access,access,892,". MultiscaleFeatures.MultiscaleResultsBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.MultiscaleResultsBuilder; extends Object; Helper-class for computing pixel-features at a specified scale. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Constructor Summary; Constructors. Constructor; Description; MultiscaleResultsBuilder(). Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features). Constructor prepared to calculate specified features. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap>; build(List<Mat> mats). Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(List<Mat> mats,; int ind). Calculate results for a map of features and Mats for one slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.M",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:3711,Security,hash,hashCode,3711,"tiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standard deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(); Default constructor. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features); Constructor prepared to calculate specified features. Parameters:; features - . Method Details. gaussianSmoothed; public MultiscaleFeatures.MultiscaleResultsBuilder gaussianSmoothed(boolean calculate); Calculate the Gaussian-smoothed image. Parameters:; calculate - ; Returns:. paddingXY; public MultiscaleFeatures.MultiscaleResultsBuilder paddingXY(int padding); Specify the number of pixels that the input image is padded (left, right, above, below). ; This padding will be stripped prior to outputting the results. Default is 0. Parameters:; padding - ; Returns:. weightedStdDev; public MultiscaleFeatures.MultiscaleResultsBuilder weightedStdDev(boolean calculate); Calculate a Gaussian-weighted standard deviation. Parameters",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:447,Modifiability,extend,extends,447,". NumpyTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class NumpyTools. java.lang.Object; qupath.opencv.tools.NumpyTools. public class NumpyTools; extends Object; Read .npy and .npz files from NumPy.; ; Note that only a subset of files are supported.; Specifically, each .npy file should contain a single (possibly multidimensional) ; array with a type supported by OpenCV.; ; Structured, complex and object arrays are not supported.; ; See ; https://numpy.org/devdocs/reference/generated/numpy.lib.format.html; for more information about the format. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; NumpyTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Map<String,Mat>; readAllMats(String path). Read a all Mats from an .npy or .npz file. static Map<String,Mat>; readAllMats(String path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz file, optionally squeezing singleton dimensions. static Map<String,Mat>; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optiona",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/NumpyTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:2266,Modifiability,inherit,inherited,2266,"z file, optionally squeezing singleton dimensions. static Map<String,Mat>; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/NumpyTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:2340,Security,hash,hashCode,2340,">; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; Throws:; IOException. readAllMats; public static Map<String,Mat> readAll",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/NumpyTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:2493,Availability,mask,mask,2493," merging the result and storing the result in-place. static void; ceil(Mat mat). Ceil values in a floating point Mat. static double[]; channelMaximum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelMean(Mat mat). Get the mean of an image channel, ignoring NaNs. static double[]; channelMinimum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; c",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:3110,Availability,mask,mask,3110,"at,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Ma",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4130,Availability,mask,mask,4130,"sk by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixel",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4188,Availability,mask,mask,4188,"cts(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fill",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4286,Availability,mask,mask,4286,"ction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-ch",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4344,Availability,mask,mask,4344," labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4740,Availability,avail,available,4740,"ion from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5077,Availability,mask,mask,5077,"ray. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the o",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5169,Availability,mask,mask,5169," int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor valu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5941,Availability,mask,mask,5941," corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6536,Availability,reliab,reliable,6536," all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6903,Availability,mask,mask,6903,"ction<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matL",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6926,Availability,mask,masked,6926,"at,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected compon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15040,Availability,mask,mask,15040,"edImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15212,Availability,mask,mask,15212,"xelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15295,Availability,mask,mask,15295,"xelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15358,Availability,mask,mask,15358,"xelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15522,Availability,mask,mask,15522,"n - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - repl",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15684,Availability,mask,mask,15684,"n image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16337,Availability,mask,mask,16337," See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; Illegal",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16429,Availability,mask,mask,16429," See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; Illegal",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16467,Availability,mask,mask,16467,"oublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; IllegalArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; pu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16481,Availability,mask,mask,16481,"oublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; IllegalArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; pu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:20777,Availability,avail,available,20777,"l) mat; fun - the consumer to apply. matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat); Convert a Mat to a BufferedImage.; ; This is equivalent to matToBufferedImage(mat, null);; As such, the ColorModel may or may not end up being something useful. Parameters:; mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Convert a Mat to a BufferedImage.; ; If no ColorModel is specified, a grayscale model will be used for single-channel 8-bit ; images and RGB/ARGB for 3/4 channel 8-bit images.; ; For all other cases a ColorModel should be specified for meaningful display. Parameters:; mat - ; colorModel - ; Returns:. imageToMatRGB; public static Mat imageToMatRGB(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. imageToMatBGR; public static Mat imageToMatBGR(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. labelImage; @Deprecated; public static void labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode); Deprecated.; Use label(Mat, Mat, int) instead. Create a labelled image from a binary image using findContours and drawContours. Parameters:; matBinary - ; matLabels - ; contourRetrievalMode - defined within OpenCV findContours. addNoise; public static void addNoise(Mat mat,; double mean,; double stdDev); Add Gaussian noise with specified mean and standard deviation to all channels of a Mat.; This is similar to opencv_core.randn(Mat, Mat, Mat), but supports any number of channels. Parameters:; mat - image to which noise should b",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:21065,Availability,avail,available,21065,"mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Convert a Mat to a BufferedImage.; ; If no ColorModel is specified, a grayscale model will be used for single-channel 8-bit ; images and RGB/ARGB for 3/4 channel 8-bit images.; ; For all other cases a ColorModel should be specified for meaningful display. Parameters:; mat - ; colorModel - ; Returns:. imageToMatRGB; public static Mat imageToMatRGB(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. imageToMatBGR; public static Mat imageToMatBGR(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. labelImage; @Deprecated; public static void labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode); Deprecated.; Use label(Mat, Mat, int) instead. Create a labelled image from a binary image using findContours and drawContours. Parameters:; matBinary - ; matLabels - ; contourRetrievalMode - defined within OpenCV findContours. addNoise; public static void addNoise(Mat mat,; double mean,; double stdDev); Add Gaussian noise with specified mean and standard deviation to all channels of a Mat.; This is similar to opencv_core.randn(Mat, Mat, Mat), but supports any number of channels. Parameters:; mat - image to which noise should be added; mean - noise mean; stdDev - noise standard deviation. median; public static double median(Mat mat); Get the median pixel value in a Mat, ignoring NaNs.; This does not distinguish between channels. Parameters:; mat - ; Returns:. percentiles; public static double[] percentiles(Mat",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:25946,Availability,error,error,25946,"s(int). scalarMatWithType; public static Mat scalarMatWithType(double value,; int type); Create a 1x1 Mat with a specific value, with 1 or more channels.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; type - type of the image; this may contain additional channels if required.; Returns:; a Mat with one pixel containing the closest value supported by the type. scalarMat; public static Mat scalarMat(double value,; int depth); Create a 1x1 single-channel Mat with a specific value.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; depth - depth of the image; if a type (including channels) is supplied instead, the channel information is removed.; Returns:; a Mat with one pixel containing the closest value supported by the type. putPixelsUnsigned; public static void putPixelsUnsigned(Mat mat,; byte[] pixels); Set pixels from a byte array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . putPixelsFloat; public static void putPixelsFloat(Mat mat,; float[] pixels); Set pixels from a float array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . getCircularStructuringElement; @Deprecated; public static Mat getCircularStructuringElement(int radius); Deprecated.; createDisk(int, boolean) gives more reliable shapes. Create a Mat depicting a circle of the specified radius.; ; Pixels within the circle have the value 1, pixels outside are 0. Parameters:; radius - ; Returns:. createDisk; public static Mat createDisk(int radius,; boolean doMean); Create a disk filter.; This is a rasterized approximation of a filled circle with the specified radius. Parameters:; radius - radius of the disk; must be > 0; doMean - if true, normalize kernel by dividing by the sum of all elements.; If false, all 'inside' elements are 1 an",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:26187,Availability,error,error,26187,"de in the Mat; type - type of the image; this may contain additional channels if required.; Returns:; a Mat with one pixel containing the closest value supported by the type. scalarMat; public static Mat scalarMat(double value,; int depth); Create a 1x1 single-channel Mat with a specific value.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; depth - depth of the image; if a type (including channels) is supplied instead, the channel information is removed.; Returns:; a Mat with one pixel containing the closest value supported by the type. putPixelsUnsigned; public static void putPixelsUnsigned(Mat mat,; byte[] pixels); Set pixels from a byte array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . putPixelsFloat; public static void putPixelsFloat(Mat mat,; float[] pixels); Set pixels from a float array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . getCircularStructuringElement; @Deprecated; public static Mat getCircularStructuringElement(int radius); Deprecated.; createDisk(int, boolean) gives more reliable shapes. Create a Mat depicting a circle of the specified radius.; ; Pixels within the circle have the value 1, pixels outside are 0. Parameters:; radius - ; Returns:. createDisk; public static Mat createDisk(int radius,; boolean doMean); Create a disk filter.; This is a rasterized approximation of a filled circle with the specified radius. Parameters:; radius - radius of the disk; must be > 0; doMean - if true, normalize kernel by dividing by the sum of all elements.; If false, all 'inside' elements are 1 and all 'outside' elements are 0.; Returns:; a Mat of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:26454,Availability,reliab,reliable,26454,"; int depth); Create a 1x1 single-channel Mat with a specific value.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; depth - depth of the image; if a type (including channels) is supplied instead, the channel information is removed.; Returns:; a Mat with one pixel containing the closest value supported by the type. putPixelsUnsigned; public static void putPixelsUnsigned(Mat mat,; byte[] pixels); Set pixels from a byte array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . putPixelsFloat; public static void putPixelsFloat(Mat mat,; float[] pixels); Set pixels from a float array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . getCircularStructuringElement; @Deprecated; public static Mat getCircularStructuringElement(int radius); Deprecated.; createDisk(int, boolean) gives more reliable shapes. Create a Mat depicting a circle of the specified radius.; ; Pixels within the circle have the value 1, pixels outside are 0. Parameters:; radius - ; Returns:. createDisk; public static Mat createDisk(int radius,; boolean doMean); Create a disk filter.; This is a rasterized approximation of a filled circle with the specified radius. Parameters:; radius - radius of the disk; must be > 0; doMean - if true, normalize kernel by dividing by the sum of all elements.; If false, all 'inside' elements are 1 and all 'outside' elements are 0.; Returns:; a Mat of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255 and all non-zero pixels to 0. Parameters:; matBinary - ; matDest - . extractPixels; public static float[] extractPixels(Mat mat,; float[] pixels); Extract pixels as a float[] array.; . In QuPath v0.2 this would return only th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:31734,Availability,avail,available,31734,"arameters:; mats - ; kernel - ; ind3D - ; border - ; Returns:. filterZ; public static List<Mat> filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border); Filter filter along entries in the input list.; ; If each Mat in the list can be considered a consecutive 2D image plane from a z-stack, ; this can be considered filtering along the z-dimension. Parameters:; mats - ; kernelZ - ; ind3D - if -1, return filtered results for all mats, otherwise only return results for the mat at the specified ind3D; border - ; Returns:. extractZStack; public static List<Mat> extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax); throws IOException; Extract a list of Mats, where each Mat corresponds to a z-slice. Parameters:; server - ; request - ; zMin - first z slice, inclusive; zMax - last z slice, exclusive; Returns:; Throws:; IOException. extractZStack; public static List<Mat> extractZStack(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. Parameters:; server - ; request - ; Returns:; Throws:; IOException; See Also:. extractZStack(ImageServer, RegionRequest, int, int). crop; public static Mat crop(Mat mat,; int x,; int y,; int width,; int height); Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). Parameters:; mat - ; x - ; y - ; width - ; height - ; Returns:. crop; public static Mat crop(Mat mat,; Padding padding); Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). Parameters:; mat - ; padding - ; Returns:; Since:; v0.4.0. applyTiled; public static Mat applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType); Apply a function to a Mat that strictly requires a specific input size.; The output is expected to have the same size as the input, but may have a different num",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43658,Availability,mask,mask,43658," output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-ba",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43769,Availability,mask,mask,43769,"gle-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43785,Availability,mask,mask,43785,"gle-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by th",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43893,Availability,mask,mask,43893,"aCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] ex",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43916,Availability,mask,masked,43916,"aCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] ex",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44003,Availability,mask,mask,44003,"ce). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified ch",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44010,Availability,mask,mask,44010,"ce). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified ch",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44181,Availability,mask,mask,44181,"ging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified chann",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44239,Availability,mask,mask,44239,"ging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified chann",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44290,Availability,mask,mask,44290,"ring memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44338,Availability,mask,mask,44338," brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44395,Availability,mask,mask,44395,". Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to con",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44471,Availability,mask,mask,44471," of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44581,Availability,mask,mask,44581,"ithin an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44592,Availability,mask,mask,44592,"ithin an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44749,Availability,mask,mask,44749,"ithin an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44814,Availability,mask,mask,44814,"ithin an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44933,Availability,mask,mask,44933,"ge. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (mu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44991,Availability,mask,mask,44991,"ge. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (mu",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45042,Availability,mask,mask,45042,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45090,Availability,mask,mask,45090,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45147,Availability,mask,mask,45147,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45223,Availability,mask,mask,45223,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45333,Availability,mask,mask,45333,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45344,Availability,mask,mask,45344,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45502,Availability,mask,mask,45502,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45567,Availability,mask,mask,45567,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:3873,Deployability,continuous,continuous,3873,"cing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extra",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18385,Deployability,continuous,continuous,18385,"lArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; public static boolean isFloat(Mat mat); Returns true if a Mat is a floating point (rather than int) type. Parameters:; mat - ; Returns:. floor; public static void floor(Mat mat); Floor values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Paramet",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18641,Deployability,continuous,continuous,18641,"Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18774,Deployability,continuous,continuous,18774,"Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18809,Deployability,continuous,continuous,18809,"Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:451,Modifiability,extend,extends,451,". OpenCVTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools. java.lang.Object; qupath.opencv.tools.OpenCVTools. public class OpenCVTools; extends Object; Collection of static methods to help with using OpenCV from Java. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. Constructor Summary; Constructors. Constructor; Description; OpenCVTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addNoise(Mat mat,; double mean,; double stdDev). Add Gaussian noise with specified mean and standard deviation to all channels of a Mat. static void; apply(Mat mat,; DoubleUnaryOperator operator). Apply an operation to the pixels of an image. static Mat; applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType). Apply a function to a Mat that strictly requires a specific input size. static void; applyToChannels(Mat input,; Consumer<Mat> fun). Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. static void; ceil(Mat mat). Ceil values in a floating point Mat. static double[]; channelMaximum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelMean(Mat mat). Get the mean of an image channel, ignoring NaNs. static double[]; channelMinimum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignor",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:7098,Modifiability,extend,extends,7098," static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected components for non-zero pixels in an image. static void; labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode). Deprecated.; Use label(Mat, Mat, int) inst",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:9601,Modifiability,extend,extends,9601,"nCV Mat into an ImageJ ImageProcessor. static SimpleImage; matToSimpleImage(Mat mat,; int channel). Convert a Mat to a SimpleImage. static double; maximum(Mat mat). Get the maximum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; maximumFilter(Mat mat,; int radius). Apply a 2D maximum filter (dilation) to all channels of an image. static double; mean(Mat mat). Get the mean of an image, across all pixels (regardless of channels), ignoring NaNs. static void; meanFilter(Mat mat,; int radius). Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. static void; meanFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D mean filter to all channels of an image. static double; median(Mat mat). Get the median pixel value in a Mat, ignoring NaNs. static String; memoryReport(CharSequence delimiter). Create a brief report on memory use, based on JavaCPP's Pointer class. static Mat; mergeChannels(Collection<? extends Mat> channels,; Mat dest). Merge channels from a multichannel Mat. static double; minimum(Mat mat). Get the minimum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; minimumFilter(Mat mat,; int radius). Apply a 2D minimum filter (erosion) to all channels of an image. static void; openingFilter(Mat mat,; int radius). Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. static double[]; percentiles(Mat mat,; double... percentiles). Get percentile values for all pixels in a Mat, ignoring NaNs. static String; physicalMemory(). Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class. static void; putPixelsFloat(Mat mat,; float[] pixels). Set pixels from a float array. static void; putPixelsUnsigned(Mat mat,; byte[] pixels). Set pixels from a byte array. static void; replaceNaNs(Mat mat,; double newValue). Replace NaNs in a floating point array. static void; replaceValue",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:12865,Modifiability,extend,extends,12865,"(regardless of channels), ignoring NaNs. static void; sumFilter(Mat mat,; int radius). Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. static void; sumFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D sum filter to all channels of an image. static String; trackedMemory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were r",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13182,Modifiability,inherit,inherited,13182,"mory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:17030,Modifiability,extend,extends,17030,"he output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; IllegalArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; public static boolean isFloat(Mat mat); Returns true if a Mat is a floating point (rather than int) type. Parameters:; mat - ; Returns:. floor; public static void floor(Mat mat); Floor values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Paramete",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18912,Modifiability,extend,extends,18912,"; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. Parameters:; input - the (possibly-multichannel) mat; fun - the consumer to apply. matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat); Convert a Mat to a BufferedImage.; ; This is",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:19232,Modifiability,extend,extends,19232,"values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. Parameters:; input - the (possibly-multichannel) mat; fun - the consumer to apply. matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat); Convert a Mat to a BufferedImage.; ; This is equivalent to matToBufferedImage(mat, null);; As such, the ColorModel may or may not end up being something useful. Parameters:; mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Conv",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:2867,Safety,detect,detection,2867,", ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creatin",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:39817,Safety,detect,detection,39817,"ed image to store the output; connectivity - either 4 or 8; Returns:; number of connected components, equal to the value of the highest integer label. createROIs; public static Map<Number,ROI> createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Convert integer labels into ROIs. Parameters:; matLabels - labelled image; each label should be an integer value; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:40202,Safety,detect,detection,40202,"s into ROIs. Parameters:; matLabels - labelled image; each label should be an integer value; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; annotation objects generated by tracing contours; See Also:. ContourTracing.createAnnotations(SimpleImage, RegionRequest, int, int). createObjects; public static List<PathObject> createObjects(Mat matLabel",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13256,Security,hash,hashCode,13256,"aCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no ma",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:14369,Testability,log,logged,14369,"enCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:33157,Testability,log,logged,33157,"; mat - ; x - ; y - ; width - ; height - ; Returns:. crop; public static Mat crop(Mat mat,; Padding padding); Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). Parameters:; mat - ; padding - ; Returns:; Since:; v0.4.0. applyTiled; public static Mat applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType); Apply a function to a Mat that strictly requires a specific input size.; The output is expected to have the same size as the input, but may have a different number of channels.; ; This method can be used to:; ; Split larger input into tiles of the required size, apply the function and merge the result; Pad smaller input into tiles of the required size, apply the function and strip padding from the result. If the image dimensions are not an exact multiple of the requested tile sizes, both steps may be required.; ; Important! If the output (width & height) of the function is smaller than the input, it will resized; to have the same dimensions and a warning will be logged. Parameters:; fun - the function to apply to the input; mat - the input Mat; tileWidth - the strict tile width required by the input; tileHeight - the strict tile height required by the input; padding - padding to apply for internal tiling. Note that if the entire image needs to be padded, this should ; be done before input.; borderType - an OpenCV border type, in case padding is needed; Returns:; the result of applying fun to mat, having applied any necessary tiling along the way. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky); Apply a separable filter to an image, with symmetric boundary padding. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky,; int borderType); Apply a separable filter to an image. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel; border",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:42941,Testability,log,logging,42941,"ed image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43189,Testability,log,logging,43189,"e (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:8644,Usability,Simpl,SimpleImage,8644,"urns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected components for non-zero pixels in an image. static void; labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode). Deprecated.; Use label(Mat, Mat, int) instead. static BufferedImage; matToBufferedImage(Mat mat). Convert a Mat to a BufferedImage. static BufferedImage; matToBufferedImage(Mat mat,; ColorModel colorModel). Convert a Mat to a BufferedImage. static ImagePlus; matToImagePlus(String title,; Mat... mats). Convert an OpenCV MatVector into an ImageJ ImagePlus. static ImagePlus; matToImagePlus(Mat mat,; String title). Convert an OpenCV Mat into an ImageJ ImagePlus. static ImageProcessor; matToImageProcessor(Mat mat). Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. static SimpleImage; matToSimpleImage(Mat mat,; int channel). Convert a Mat to a SimpleImage. static double; maximum(Mat mat). Get the maximum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; maximumFilter(Mat mat,; int radius). Apply a 2D maximum filter (dilation) to all channels of an image. static double; mean(Mat mat). Get the mean of an image, across all pixels (regardless of channels), ignoring NaNs. static void; meanFilter(Mat mat,; int radius). Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. static void; meanFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D mean filter to all channels of an image. static double; median(Mat mat). Get the median pixel value in a Mat, ignoring NaNs. static String; memoryReport(CharSequence delimiter). Create a brief report on memory use, based on JavaCPP's Pointer class. static Mat; mergeChannels(Collection<? extends Mat> channels,; Mat dest). Merge channels from a multichan",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:8717,Usability,Simpl,SimpleImage,8717,"than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected components for non-zero pixels in an image. static void; labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode). Deprecated.; Use label(Mat, Mat, int) instead. static BufferedImage; matToBufferedImage(Mat mat). Convert a Mat to a BufferedImage. static BufferedImage; matToBufferedImage(Mat mat,; ColorModel colorModel). Convert a Mat to a BufferedImage. static ImagePlus; matToImagePlus(String title,; Mat... mats). Convert an OpenCV MatVector into an ImageJ ImagePlus. static ImagePlus; matToImagePlus(Mat mat,; String title). Convert an OpenCV Mat into an ImageJ ImagePlus. static ImageProcessor; matToImageProcessor(Mat mat). Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. static SimpleImage; matToSimpleImage(Mat mat,; int channel). Convert a Mat to a SimpleImage. static double; maximum(Mat mat). Get the maximum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; maximumFilter(Mat mat,; int radius). Apply a 2D maximum filter (dilation) to all channels of an image. static double; mean(Mat mat). Get the mean of an image, across all pixels (regardless of channels), ignoring NaNs. static void; meanFilter(Mat mat,; int radius). Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. static void; meanFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D mean filter to all channels of an image. static double; median(Mat mat). Get the median pixel value in a Mat, ignoring NaNs. static String; memoryReport(CharSequence delimiter). Create a brief report on memory use, based on JavaCPP's Pointer class. static Mat; mergeChannels(Collection<? extends Mat> channels,; Mat dest). Merge channels from a multichannel Mat. static double; minimum(Mat mat). Get ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13105,Usability,guid,guided,13105," a circular 2D sum filter to all channels of an image. static String; trackedMemory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int get",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18548,Usability,simpl,simpler,18548,"nt (rather than int) type. Parameters:; mat - ; Returns:. floor; public static void floor(Mat mat); Floor values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannel",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:27997,Usability,Simpl,SimpleImage,27997,"at of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255 and all non-zero pixels to 0. Parameters:; matBinary - ; matDest - . extractPixels; public static float[] extractPixels(Mat mat,; float[] pixels); Extract pixels as a float[] array.; . In QuPath v0.2 this would return only the pixels in the first channel.; In v0.3+ it should return all pixels. Parameters:; mat - ; pixels - ; Returns:. extractPixels; public static double[] extractPixels(Mat mat,; double[] pixels); Extract pixels as a double array. Parameters:; mat - ; pixels - ; Returns:. extractDoubles; public static double[] extractDoubles(Mat mat); Extract pixels as a double array. Parameters:; mat - ; Returns:. extractFloats; public static float[] extractFloats(Mat mat); Extract pixels as a float array. Parameters:; mat - ; Returns:. matToSimpleImage; public static SimpleImage matToSimpleImage(Mat mat,; int channel); Convert a Mat to a SimpleImage. Parameters:; mat - ; channel - ; Returns:. fillSmallHoles; public static void fillSmallHoles(Mat matBinary,; double maxArea); Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. Parameters:; matBinary - ; maxArea - . watershedIntensitySplit; public static void watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius); Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Parameters:; matBinary - thresholded, 8-bit unsigned integer binary image; matWatershedIntensities - optional intensity image for applying watershed transform; if not set, distance transform of binary will be used; threshold - ; maximaRadius - . matToImageProcessor; public static ImageProcessor matToImageProcessor(Mat mat); Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. Parameters:; mat - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:28069,Usability,Simpl,SimpleImage,28069,"at of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255 and all non-zero pixels to 0. Parameters:; matBinary - ; matDest - . extractPixels; public static float[] extractPixels(Mat mat,; float[] pixels); Extract pixels as a float[] array.; . In QuPath v0.2 this would return only the pixels in the first channel.; In v0.3+ it should return all pixels. Parameters:; mat - ; pixels - ; Returns:. extractPixels; public static double[] extractPixels(Mat mat,; double[] pixels); Extract pixels as a double array. Parameters:; mat - ; pixels - ; Returns:. extractDoubles; public static double[] extractDoubles(Mat mat); Extract pixels as a double array. Parameters:; mat - ; Returns:. extractFloats; public static float[] extractFloats(Mat mat); Extract pixels as a float array. Parameters:; mat - ; Returns:. matToSimpleImage; public static SimpleImage matToSimpleImage(Mat mat,; int channel); Convert a Mat to a SimpleImage. Parameters:; mat - ; channel - ; Returns:. fillSmallHoles; public static void fillSmallHoles(Mat matBinary,; double maxArea); Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. Parameters:; matBinary - ; maxArea - . watershedIntensitySplit; public static void watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius); Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Parameters:; matBinary - thresholded, 8-bit unsigned integer binary image; matWatershedIntensities - optional intensity image for applying watershed transform; if not set, distance transform of binary will be used; threshold - ; maximaRadius - . matToImageProcessor; public static ImageProcessor matToImageProcessor(Mat mat); Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. Parameters:; mat - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:28535,Usability,guid,guided,28535,"channel.; In v0.3+ it should return all pixels. Parameters:; mat - ; pixels - ; Returns:. extractPixels; public static double[] extractPixels(Mat mat,; double[] pixels); Extract pixels as a double array. Parameters:; mat - ; pixels - ; Returns:. extractDoubles; public static double[] extractDoubles(Mat mat); Extract pixels as a double array. Parameters:; mat - ; Returns:. extractFloats; public static float[] extractFloats(Mat mat); Extract pixels as a float array. Parameters:; mat - ; Returns:. matToSimpleImage; public static SimpleImage matToSimpleImage(Mat mat,; int channel); Convert a Mat to a SimpleImage. Parameters:; mat - ; channel - ; Returns:. fillSmallHoles; public static void fillSmallHoles(Mat matBinary,; double maxArea); Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. Parameters:; matBinary - ; maxArea - . watershedIntensitySplit; public static void watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius); Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Parameters:; matBinary - thresholded, 8-bit unsigned integer binary image; matWatershedIntensities - optional intensity image for applying watershed transform; if not set, distance transform of binary will be used; threshold - ; maximaRadius - . matToImageProcessor; public static ImageProcessor matToImageProcessor(Mat mat); Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. Parameters:; mat - ; Returns:. matToImagePlus; public static ImagePlus matToImagePlus(Mat mat,; String title); Convert an OpenCV Mat into an ImageJ ImagePlus. Parameters:; mat - ; title - ; Returns:. matToImagePlus; public static ImagePlus matToImagePlus(String title,; Mat... mats); Convert an OpenCV MatVector into an ImageJ ImagePlus. Parameters:; title - ; mats - ; Returns:. getGaussianDeriv; public static double[] getGaussianDeriv(double sigma,; int order,; int ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:39636,Usability,Simpl,SimpleImage,39636,"abel connected components for non-zero pixels in an image. Parameters:; matBinary - binary image to label; matLabels - labelled image to store the output; connectivity - either 4 or 8; Returns:; number of connected components, equal to the value of the highest integer label. createROIs; public static Map<Number,ROI> createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Convert integer labels into ROIs. Parameters:; matLabels - labelled image; each label should be an integer value; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (o",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:40294,Usability,Simpl,SimpleImage,40294,"ound ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; annotation objects generated by tracing contours; See Also:. ContourTracing.createAnnotations(SimpleImage, RegionRequest, int, int). createObjects; public static List<PathObject> createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordin",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:40957,Usability,Simpl,SimpleImage,40957,"he full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; annotation objects generated by tracing contours; See Also:. ContourTracing.createAnnotations(SimpleImage, RegionRequest, int, int). createObjects; public static List<PathObject> createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function used to generate objects from ROIs; Returns:; objects generated by tracing contours; See Also:. ContourTracing.createObjects(SimpleImage, RegionRequest, int, int, BiFunction). createCells; public static List<PathObject> createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel); Create cell objects by tracing contours in a labelled image. Parameters:; matLa",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:41685,Usability,Simpl,SimpleImage,41685,"y be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; annotation objects generated by tracing contours; See Also:. ContourTracing.createAnnotations(SimpleImage, RegionRequest, int, int). createObjects; public static List<PathObject> createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function used to generate objects from ROIs; Returns:; objects generated by tracing contours; See Also:. ContourTracing.createObjects(SimpleImage, RegionRequest, int, int, BiFunction). createCells; public static List<PathObject> createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel); Create cell objects by tracing contours in a labelled image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:42486,Usability,Simpl,SimpleImage,42486,"ill be found in the image and used; creator - function used to generate objects from ROIs; Returns:; objects generated by tracing contours; See Also:. ContourTracing.createObjects(SimpleImage, RegionRequest, int, int, BiFunction). createCells; public static List<PathObject> createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel); Create cell objects by tracing contours in a labelled image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" o",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:42499,Usability,Simpl,SimpleImage,42499,"ill be found in the image and used; creator - function used to generate objects from ROIs; Returns:; objects generated by tracing contours; See Also:. ContourTracing.createObjects(SimpleImage, RegionRequest, int, int, BiFunction). createCells; public static List<PathObject> createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel); Create cell objects by tracing contours in a labelled image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" o",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:541,Modifiability,extend,extends,541,". OpenCVTools.IndexedPixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public l",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1222,Modifiability,inherit,inherited,1222,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1919,Safety,avoid,avoids,1919,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1296,Security,hash,hashCode,1296,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:216,Integrability,Interface,Interfaces,216,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:288,Integrability,Interface,Interfaces,288,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:890,Integrability,Interface,InterfacesInterfacesClassesEnum,890,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:1819,Integrability,depend,dependent,1819," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:487,Modifiability,plugin,plugins,487,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:980,Modifiability,enhance,enhanced,980,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:477,Safety,Detect,Detection,477,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:2053,Security,access,access,2053," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:767,Usability,learn,learning,767,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-tree.html:1192,Integrability,Interface,Interface,1192,". qupath.opencv.tools Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.tools. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. java.util.AbstractMap<K,V> (implements java.util.Map<K,V>). qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (implements java.util.Map<K,V>). qupath.opencv.tools.GroovyCV; qupath.opencv.tools.Interpolation; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.opencv.tools.MultiscaleFeatures; qupath.opencv.tools.MultiscaleFeatures.Hessian2D (implements qupath.opencv.tools.MultiscaleFeatures.Hessian); qupath.opencv.tools.MultiscaleFeatures.Hessian3D (implements qupath.opencv.tools.MultiscaleFeatures.Hessian); qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder; qupath.opencv.tools.NumpyTools; qupath.opencv.tools.OpenCVTools; qupath.opencv.tools.OpenCVTools.IndexedPixel; qupath.opencv.tools.ProcessingCV; qupath.opencv.tools.Thinning. Interface Hierarchy. java.lang.AutoCloseable. qupath.opencv.tools.MultiscaleFeatures.Hessian. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:455,Modifiability,extend,extends,455,". ProcessingCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); App",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:1242,Modifiability,inherit,inherited,1242," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, u",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:1316,Security,hash,hashCode,1316," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:439,Modifiability,extend,extends,439,". Thinning (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:906,Modifiability,plugin,plugin,906,". Thinning (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1439,Modifiability,inherit,inherited,1439,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1104,Performance,optimiz,optimizations,1104,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (ty",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1840,Performance,perform,performed,1840,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1513,Security,hash,hashCode,1513,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2631,Availability,avail,available,2631,"turning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; path",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4603,Availability,avail,available,4603,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:561,Integrability,Interface,Interfaces,561,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:816,Integrability,interface,interface,816,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2821,Integrability,interface,interface,2821,"b.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3077,Integrability,interface,interface,3077,"ethod Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathOb",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3540,Integrability,depend,depending,3540,"ermine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4063,Integrability,interface,interface,4063,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:631,Modifiability,extend,extends,631,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:801,Modifiability,inherit,inherited,801,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1066,Modifiability,extend,extends,1066," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. c",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1523,Modifiability,extend,extends,1523,"enCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a fi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1785,Modifiability,inherit,inherited,1785,"Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses()",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1909,Modifiability,inherit,inherited,1909,"dsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyOb",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2990,Modifiability,extend,extends,2990,"ethod Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathOb",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4005,Modifiability,extend,extends,4005,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2475,Safety,predict,prediction,2475,"turning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; path",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3234,Safety,avoid,avoiding,3234,"> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is usefu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1983,Security,hash,hashCode,1983,"; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collecti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4538,Testability,test,test,4538,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4569,Testability,test,test,4569,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html:221,Integrability,Interface,Interfaces,221,. qupath.opencv.ml.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects. package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Classes. Class; Description; OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html:293,Integrability,Interface,Interfaces,293,. qupath.opencv.ml.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects. package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Classes. Class; Description; OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html:511,Usability,learn,learning,511,. qupath.opencv.ml.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects. package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Classes. Class; Description; OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html:219,Integrability,Interface,Interfaces,219,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html:291,Integrability,Interface,Interfaces,291,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html:631,Integrability,Interface,InterfacesClassesEnum,631,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html:504,Usability,learn,learning,504,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:561,Modifiability,extend,extends,561,". PixelClassificationMeasurementManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1033,Modifiability,extend,extends,1033,"surementManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedM",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2569,Modifiability,inherit,inherited,2569,"ched,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:5080,Modifiability,extend,extends,5080,"easurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise; Since:; v0.5.0. getMeasurementNames; public List<String> getMeasurementNames(); Get the names of all measurements that may be returned. Returns:. calculatePreferredParallelism; protected int calculatePreferredParallelism(); Make a semi-educated guess as to an appropriate number of threads to use.; We lack much information about the image and pixel classifier, so this should be a fairly pessimistic; guess. Returns:. getPoolSizeProp; protected int getPoolSizeProp(). getProbabilityThreshold; public static double getProbabilityThreshold(WritableRaster raster); Get a suitable threshold assuming a raster contains probability values.; This is determined from the TransferType",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1410,Performance,cache,cached,1410,"Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) inst",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1575,Performance,cache,cached,1575,"Manager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1941,Performance,cache,cachedOnly,1941,"ce MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2275,Performance,cache,cachedOnly,2275," use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parame",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3074,Performance,cache,cachedOnly,3074,"rementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(Pat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3327,Performance,cache,cachedOnly,3327,") or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3406,Performance,cache,cached,3406,") or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3617,Performance,cache,cached,3617,"ns probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4147,Performance,cache,cachedOnly,4147,"easurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsTo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4369,Performance,cache,cachedOnly,4369,"t be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4448,Performance,cache,cached,4448,"t be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4638,Performance,cache,cached,4638,"nt for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise; Since:; v0.5.0. getMeasurementNames; public List<String> getMeasurementNames(); Get the names of all measurements that may be returned. Returns:. c",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2643,Security,hash,hashCode,2643,"he names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. P",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:477,Modifiability,extend,extends,477,". PixelClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:1720,Modifiability,extend,extends,1720,"Concrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static P",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:2214,Modifiability,inherit,inherited,2214,"inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:4781,Modifiability,extend,extends,4781,"ation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one channel of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); aboveEquals - the classification for pixels greater than or equal to the threshold (must not be null); Returns:; the pixel classifier. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one or more channels of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the pixel classifier. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:2288,Security,hash,hashCode,2288,"ageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:1128,Usability,simpl,simple,1128," Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClas",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:1311,Usability,simpl,simple,1311,". Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:3297,Usability,simpl,simple,3297,"ava.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:3582,Usability,simpl,simple,3582,"ypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one channel of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); abo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:629,Integrability,Interface,Interfaces,629,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1032,Integrability,interface,interfaces,1032," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:822,Modifiability,extend,extends,822,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1043,Modifiability,inherit,inherited,1043," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1096,Modifiability,extend,extends,1096,"   ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXIST",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1825,Modifiability,inherit,inherited,1825,"m<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum c",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1978,Modifiability,inherit,inherited,1978,"guments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PixelClassifierTools.CreateObjectOptions valueOf(String name); Returns the enum constant of ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:951,Safety,avoid,avoid,951,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1936,Security,hash,hashCode,1936," a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PixelClassifierToo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:13975,Availability,mask,mask,13975,"plying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the thresholded server. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one channel of another server. Parameters:; server - the server to threshold; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); aboveEquals - the classification for pixels greater than or equal to the threshol",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:17775,Availability,avail,available,17775,"om a PixelClassificationMeasurementManager. Parameters:; objectsToMeasure - the objects to measure.; manager - the manager used to generate measurements; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData conta",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18374,Availability,avail,available,18374,"y classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:493,Modifiability,extend,extends,493,". PixelClassifierTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifierTools. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifierTools. public class PixelClassifierTools; extends Object; Helper methods for working with pixel classification. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifie",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1007,Modifiability,extend,extends,1007,"ools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifierTools. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifierTools. public class PixelClassifierTools; extends Object; Helper methods for working with pixel classification. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<Pat",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:4462,Modifiability,extend,extends,4462,"lClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,;",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:4810,Modifiability,extend,extends,4810,"asurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:5924,Modifiability,extend,extends,5924,"ObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selec",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6242,Modifiability,inherit,inherited,6242," a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:8362,Modifiability,extend,extends,8362,"onsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. Parameters:; server - the image to threshold; hierarchy - the hierarchy to which the objects should be added; selectedObjects - the selected objects, if the classification should be constrained to these; creator - function to create an object of the required type; minArea - the minimum size of a connected region to retain, in calibrated units; minHoleArea - the minimum size of a hole to retain, in calibrated units; options - additional options to control how objects are created; Returns:; true if the command ran successfully to completion, false otherwise.; Throws:; IOException; See Also:. GeometryTools.refineAreas(Geometry, double, double). createAnnotationsFromPix",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:11177,Modifiability,extend,extends,11177,"lassifier; public static boolean createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPixelClassifier; public static Collection<PathObject> createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit); throws IOException; Create objects based upon an ImageServer that provides classification or probability output. Parameters:; server - image server providing pixels from which objects should be created; labels - classification labels; if null, these will be taken from ImageServer#getMetadata() and all non-ignored classifications will be used.; Providing a map makes it possible to explicitly exclude some classifications.; roi - region of interest in which objects should be created (optional; if null, the entire image is used); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects crea",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:13692,Modifiability,extend,extends,13692,"> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the thresholded server. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one channel of another server. Parameters:; server - the server to threshold; channel - the channel to threshold (ze",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:16644,Modifiability,extend,extends,16644," pixels provide ; classification or probability information. Parameters:; classifierServer - the classification image server; Returns:; the PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects; public static boolean addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID); Add measurements to selected objects based upon the output of a PixelClassifier. Parameters:; imageData - the image data, which will be input to the classifier and which contains the selected objects to measure. ; If no objects are selected, measurements will be applied to the entire image.; classifier - the pixel classifier; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. addMeasurements; public static boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID); Add measurements to specified objects from a PixelClassificationMeasurementManager. Parameters:; objectsToMeasure - the objects to measure.; manager - the manager used to generate measurements; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:5459,Performance,cache,cacheAllTiles,5459,"ver<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Const",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:12848,Performance,cache,cacheAllTiles,12848,"); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects created within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by ap",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:13302,Performance,cache,cacheAllTiles,13302," within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1582,Safety,predict,prediction,1582,"; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions...",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1783,Safety,detect,detections,1783,"PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1811,Safety,predict,prediction,1811,"PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1856,Safety,detect,detection,1856,"PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:2103,Safety,predict,prediction,2103,"ts to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(Ima",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:3293,Safety,detect,detection,3293,"leusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>;",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:3614,Safety,detect,detection,3614,"xel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFro",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:5045,Safety,predict,predictions,5045,"ifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals).",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6755,Safety,detect,detection,6755,"f another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:7570,Safety,detect,detection,7570,"erver<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:8617,Safety,predict,predictions,8617,"OException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. Parameters:; server - the image to threshold; hierarchy - the hierarchy to which the objects should be added; selectedObjects - the selected objects, if the classification should be constrained to these; creator - function to create an object of the required type; minArea - the minimum size of a connected region to retain, in calibrated units; minHoleArea - the minimum size of a hole to retain, in calibrated units; options - additional options to control how objects are created; Returns:; true if the command ran successfully to completion, false otherwise.; Throws:; IOException; See Also:. GeometryTools.refineAreas(Geometry, double, double). createAnnotationsFromPixelClassifier; public static boolean createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOExcepti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:11865,Safety,detect,detection,11865,"tion<PathObject> createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit); throws IOException; Create objects based upon an ImageServer that provides classification or probability output. Parameters:; server - image server providing pixels from which objects should be created; labels - classification labels; if null, these will be taken from ImageServer#getMetadata() and all non-ignored classifications will be used.; Providing a map makes it possible to explicitly exclude some classifications.; roi - region of interest in which objects should be created (optional; if null, the entire image is used); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects created within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18146,Safety,predict,prediction,18146," measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18564,Safety,detect,detections,18564,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18592,Safety,predict,prediction,18592,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18637,Safety,detect,detection,18637,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18689,Safety,detect,detections,18689,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:19077,Safety,predict,prediction,19077,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6316,Security,hash,hashCode,6316,"ePixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:374,Integrability,Interface,Interface,374,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:500,Integrability,interface,interface,500,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:531,Integrability,Interface,Interface,531,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:1968,Integrability,depend,depend,1968,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:838,Modifiability,extend,extends,838,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:1468,Modifiability,extend,extends,1468,"face FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; ima",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:2546,Testability,test,test,2546,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:2575,Testability,test,test,2575,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1127,Integrability,Wrap,Wrap,1127," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class FeatureExtractors. java.lang.Object; qupath.opencv.ml.objects.features.FeatureExtractors. public class FeatureExtractors; extends Object; Helper class for extracting features from objects, used along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1345,Integrability,Wrap,Wrap,1345,"Extractors. java.lang.Object; qupath.opencv.ml.objects.features.FeatureExtractors. public class FeatureExtractors; extends Object; Helper class for extracting features from objects, used along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:2530,Integrability,Wrap,Wrap,2530,"ior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - original (base) feature extractor; normalizer - Normalizer to apply to initial features; Returns:; the new FeatureExtractor. createPCAProjectFeatureExtractor; public static <T> FeatureExtractor<T> createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca); Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. Parameters:; extractor - original (base) feature extractor; pca - Preprocessing.PCAProjector to apply to initial features; Returns:; the new FeatureExtractor. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:2938,Integrability,Wrap,Wrap,2938,"ior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - original (base) feature extractor; normalizer - Normalizer to apply to initial features; Returns:; the new FeatureExtractor. createPCAProjectFeatureExtractor; public static <T> FeatureExtractor<T> createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca); Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. Parameters:; extractor - original (base) feature extractor; pca - Preprocessing.PCAProjector to apply to initial features; Returns:; the new FeatureExtractor. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:503,Modifiability,extend,extends,503,". FeatureExtractors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class FeatureExtractors. java.lang.Object; qupath.opencv.ml.objects.features.FeatureExtractors. public class FeatureExtractors; extends Object; Helper class for extracting features from objects, used along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1564,Modifiability,inherit,inherited,1564,"ed along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1638,Security,hash,hashCode,1638,"mary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - or",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:475,Modifiability,extend,extends,475,". Normalizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Normalizer. java.lang.Object; qupath.opencv.ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeatur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:1410,Modifiability,inherit,inherited,1410,"ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeature(int idx,; double originalValue); Normalize a single feature. Parameters:; idx - the index of the feature; this is required to identify the corresponding offset and scale; originalValue - the original value of the feature; Returns:; the normalized value of the feature. isIdentity; public boolean isIdentity(); Returns true if this normalizer does not actually do anything.; This is the case if all offsets are zero a",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:1484,Security,hash,hashCode,1484," Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeature(int idx,; double originalValue); Normalize a single feature. Parameters:; idx - the index of the feature; this is required to identify the corresponding offset and scale; originalValue - the original value of the feature; Returns:; the normalized value of the feature. isIdentity; public boolean isIdentity(); Returns true if this normalizer does not actually do anything.; This is the case if all offsets are zero and all scales are 1. Returns:. getMissingValue; public double getMissing",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:510,Usability,simpl,simple,510,". Normalizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Normalizer. java.lang.Object; qupath.opencv.ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeatur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:230,Integrability,Interface,Interfaces,230,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:302,Integrability,Interface,Interfaces,302,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:568,Integrability,Interface,InterfacesInterfacesClasses,568,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:638,Integrability,Interface,Interface,638,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:867,Usability,simpl,simple,867,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:1023,Usability,learn,learning,1023,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-tree.html:576,Integrability,Interface,Interface,576,. qupath.opencv.ml.objects.features Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ml.objects.features. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ml.objects.features.FeatureExtractors; qupath.opencv.ml.objects.features.Normalizer; qupath.opencv.ml.objects.features.Preprocessing; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector (implements java.lang.AutoCloseable). Interface Hierarchy. qupath.opencv.ml.objects.features.FeatureExtractor<T>. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1269,Energy Efficiency,reduce,reduce,1269,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1801,Energy Efficiency,reduce,reduce,1801,"per class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. missing) feature values; Returns:; a Normalizer that may be applied to new data. normalize; public static void normalize(Mat samples,; Normalizer normalizer); Apply a Normalizer to new training data samples.; Features may be either columns or channels. Para",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:487,Modifiability,extend,extends,487,". Preprocessing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the outpu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1404,Modifiability,inherit,inherited,1404,"path.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingVal",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1478,Security,hash,hashCode,1478,"g; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. miss",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:552,Usability,learn,learning,552,". Preprocessing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the outpu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1064,Usability,simpl,simple,1064,"ip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:2220,Usability,simpl,simple,2220,"structor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. missing) feature values; Returns:; a Normalizer that may be applied to new data. normalize; public static void normalize(Mat samples,; Normalizer normalizer); Apply a Normalizer to new training data samples.; Features may be either columns or channels. Parameters:; samples - the input data; normalizer - the normalizer to apply. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:514,Integrability,Interface,Interfaces,514,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:1358,Integrability,interface,interface,1358,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:623,Modifiability,extend,extends,623,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:939,Modifiability,inherit,inherited,939,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:1013,Security,hash,hashCode,1013,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:215,Integrability,Interface,Interfaces,215,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:287,Integrability,Interface,Interfaces,287,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:640,Integrability,Interface,InterfacesClassesEnum,640,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:408,Usability,learn,learning,408,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:614,Usability,learn,learning,614,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:751,Usability,learn,learning,751,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1476,Deployability,install,installExtension,1476,"n. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1512,Deployability,Install,Install,1512,"Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; pu",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1787,Deployability,install,installExtension,1787,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1817,Deployability,install,installExtension,1817,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1905,Deployability,Install,Install,1905,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2227,Deployability,install,installExtension,2227,"ble name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension;",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:463,Integrability,Interface,Interfaces,463,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1877,Integrability,interface,interface,1877,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2247,Integrability,interface,interface,2247,"ble name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension;",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2391,Integrability,interface,interface,2391,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2480,Integrability,interface,interface,2480,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2589,Integrability,interface,interface,2589,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2769,Integrability,interface,interface,2769,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2871,Integrability,interface,interface,2871,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2970,Integrability,interface,interface,2970,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:3234,Integrability,interface,interface,3234,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:527,Modifiability,extend,extends,527,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1568,Modifiability,inherit,inherited,1568,"al-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1642,Security,hash,hashCode,1642,"y; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the exten",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2158,Testability,test,test,2158," Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Return",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:610,Usability,learn,learning,610,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:705,Modifiability,extend,extends,705,". ProcessingExtension.ObjectClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Cl",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1199,Modifiability,inherit,inherited,1199,"d; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public fin",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1415,Performance,load,loadObjectClassifier,1415,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1273,Security,hash,hashCode,1273,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:616,Modifiability,extend,extends,616,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:1019,Modifiability,inherit,inherited,1019,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:1854,Performance,load,load,1854,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:1093,Security,hash,hashCode,1093,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html:639,Modifiability,extend,extends,639,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html:1014,Modifiability,inherit,inherited,1014,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html:1088,Security,hash,hashCode,1088,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:700,Modifiability,extend,extends,700,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:1068,Modifiability,inherit,inherited,1068,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:1283,Performance,load,loadPixelClassifier,1283,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:1142,Security,hash,hashCode,1142,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:526,Integrability,Interface,Interfaces,526,". WandToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; qupath.process.gui.WandToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. public class WandToolEventHandler; extends BrushToolEventHandler; Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; wandSensitivity. Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixels. Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandType. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlays. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; WandToolEventHandler.WandPreferences;  ; static enum ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Constructor Summary; Constructors. Constructor; Description; WandToolEventHandler(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected PathObj",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:10781,Integrability,depend,depend,10781,"y need the diameter for calculations here, but it's helpful for setting the cursor. Overrides:; getBrushDiameter in class BrushToolEventHandler. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:12419,Integrability,interface,interface,12419,". Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image space of the starting point for the new object; yy - y-coordinate in the image space of the starting point for the new object; exclusions - objects not to consider (e.g. the new ROI being created). resetConstrainingObjects; protected void resetConstrainingObjects(); Reset the constraining objects.; These should be done as soon as they are no longer required, to prevent a memory leak by inadvertently; holding on to an object hierarchy too long. getCurrentParent; protected PathObject getCurrentParent(). mouseClicked; public void mouseClicked(MouseEvent e). handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:615,Modifiability,extend,extends,615,". WandToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; qupath.process.gui.WandToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. public class WandToolEventHandler; extends BrushToolEventHandler; Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; wandSensitivity. Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixels. Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandType. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlays. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; WandToolEventHandler.WandPreferences;  ; static enum ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Constructor Summary; Constructors. Constructor; Description; WandToolEventHandler(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected PathObj",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5151,Modifiability,inherit,inherited,5151,"d on image overlays. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian si",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5412,Modifiability,inherit,inherited,5412," ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:4373,Safety,avoid,avoid,4373,"ng based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. static void; setWandSensitivity(double sensitivity). Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static void; setWandSigmaPixels(double sigma). Set the Gaussian sigma value used to smooth the image when applying the wand. static void; setWandUseOverlays(boolean useOverlays). Set whether the wand tool should be influenced by pixel values painted on image overlays. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, pref",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:9664,Safety,avoid,avoid,9664,"which influences how similar local intensity values must be for the wand region growing. Returns:. setWandSensitivity; public static void setWandSensitivity(double sensitivity); Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. Parameters:; sensitivity - . createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Description copied from class: BrushToolEventHandler; Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Overrides:; createShape in class BrushToolEventHandler; Parameters:; e - ; x - ; y - ; useTiles - If true, request generating a shape from existing tile objects.; addToShape - If provided, it can be assumed that any new shape ought to be added to this one.; The purpose is that this method may (optionally) use the shape to refine the one it will generate, ; e.g. to avoid having isolated or jagged boundaries.; Returns:. getBrushDiameter; protected double getBrushDiameter(); Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. Overrides:; getBrushDiameter in class BrushToolEventHandler. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean req",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:11374,Safety,avoid,avoid,11374,"ed boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image space of the starting point for the new object; yy - y-coordinate in the image space of the starting point for the new object; exclusions - objects not to consider (e.g. the new ROI being created). resetConstrainingObjects; protected void resetConstrainingObjects(); Reset the constraining objects.; These should be done as soon as they are no longer required, to prevent a memory leak by inadvertently; holding on to an object hierarchy too long. getCurrentParent; protected PathObject getCurrentParent(). mouseClicked; publ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5486,Security,hash,hashCode,5486,"; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity value, which influences how similar local intensity values must be for ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html:628,Modifiability,extend,extends,628,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html:996,Modifiability,inherit,inherited,996,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html:1070,Security,hash,hashCode,1070,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:577,Integrability,Interface,Interfaces,577,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:904,Integrability,interface,interfaces,904,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:748,Modifiability,extend,extends,748,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:915,Modifiability,inherit,inherited,915,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:968,Modifiability,extend,extends,968,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1589,Modifiability,inherit,inherited,1589,"zable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specifie",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1752,Modifiability,inherit,inherited,1752,"<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Para",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1700,Security,hash,hashCode,1700,"oolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum consta",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:526,Integrability,Interface,Interfaces,526,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:1390,Integrability,interface,interface,1390,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:598,Modifiability,extend,extends,598,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:1042,Modifiability,inherit,inherited,1042,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:1116,Security,hash,hashCode,1116,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:526,Integrability,Interface,Interfaces,526,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:1540,Integrability,interface,interface,1540,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:598,Modifiability,extend,extends,598,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:1192,Modifiability,inherit,inherited,1192,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:903,Safety,detect,detection,903,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:1266,Security,hash,hashCode,1266,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:520,Integrability,Interface,Interfaces,520,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:1338,Integrability,interface,interface,1338,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:590,Modifiability,extend,extends,590,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:994,Modifiability,inherit,inherited,994,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:1068,Security,hash,hashCode,1068,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:514,Integrability,Interface,Interfaces,514,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:1341,Integrability,interface,interface,1341,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:582,Modifiability,extend,extends,582,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:1001,Modifiability,inherit,inherited,1001,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:1075,Security,hash,hashCode,1075,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1041,Availability,avail,availableClasses,1041,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1534,Availability,avail,availableClasses,1534,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1658,Availability,avail,availableClasses,1658,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:527,Modifiability,extend,extends,527,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1148,Modifiability,inherit,inherited,1148,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1222,Security,hash,hashCode,1222,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:475,Integrability,Interface,Interfaces,475,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:1206,Integrability,interface,interface,1206,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:530,Modifiability,extend,extends,530,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:892,Modifiability,inherit,inherited,892,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:608,Safety,detect,detections,608,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:966,Security,hash,hashCode,966,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:508,Integrability,Interface,Interfaces,508,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:1395,Integrability,interface,interface,1395,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:574,Modifiability,extend,extends,574,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:1059,Modifiability,inherit,inherited,1059,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:1133,Security,hash,hashCode,1133,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:493,Integrability,Interface,Interfaces,493,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:1431,Integrability,interface,interface,1431,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:554,Modifiability,extend,extends,554,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:1105,Modifiability,inherit,inherited,1105,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:741,Safety,detect,detection,741,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:1179,Security,hash,hashCode,1179,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:505,Integrability,Interface,Interfaces,505,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:1279,Integrability,interface,interface,1279,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:576,Modifiability,extend,extends,576,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:945,Modifiability,inherit,inherited,945,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:1019,Security,hash,hashCode,1019,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:224,Integrability,Interface,Interfaces,224,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:296,Integrability,Interface,Interfaces,296,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:666,Integrability,Interface,Interfaces,666,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:1578,Safety,detect,detections,1578," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2390,Security,validat,validation,2390," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2405,Testability,test,test,2405," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:427,Usability,learn,learning,427,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:542,Usability,learn,learning,542,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:714,Usability,learn,learning,714,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2031,Usability,Simpl,SimpleThresholdCommand,2031," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2061,Usability,simpl,simple,2061," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2200,Usability,feedback,feedback,2200," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-tree.html:1206,Usability,Simpl,SimpleThresholdCommand,1206,. qupath.process.gui.commands Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.process.gui.commands. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateChannelTrainingImagesCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateCompositeClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateRegionAnnotationsCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateTrainingImageCommand; qupath.process.gui.commands.DensityMapCommand (implements java.lang.Runnable); qupath.process.gui.commands.ExportTrainingRegionsCommand (implements java.lang.Runnable); qupath.process.gui.commands.ObjectClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.ObjectClassifierLoadCommand (implements java.lang.Runnable); qupath.process.gui.commands.PixelClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.SimpleThresholdCommand (implements java.lang.Runnable); qupath.process.gui.commands.SingleMeasurementClassificationCommand (implements java.lang.Runnable); qupath.process.gui.commands.SplitProjectTrainingCommand (implements java.lang.Runnable). ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:490,Integrability,Interface,Interfaces,490,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:1162,Integrability,interface,interface,1162,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:550,Modifiability,extend,extends,550,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:891,Modifiability,inherit,inherited,891,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:965,Security,hash,hashCode,965,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:490,Integrability,Interface,Interfaces,490,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1346,Integrability,interface,interface,1346,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:550,Modifiability,extend,extends,550,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1022,Modifiability,inherit,inherited,1022,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1096,Security,hash,hashCode,1096,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:2,Usability,Simpl,SimpleThresholdCommand,2,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:380,Usability,Simpl,SimpleThresholdCommand,380,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:450,Usability,Simpl,SimpleThresholdCommand,450,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:526,Usability,Simpl,SimpleThresholdCommand,526,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:593,Usability,simpl,simple,593,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:732,Usability,feedback,feedback,732,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:842,Usability,Simpl,SimpleThresholdCommand,842,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1174,Usability,Simpl,SimpleThresholdCommand,1174,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1205,Usability,Simpl,SimpleThresholdCommand,1205,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:538,Integrability,Interface,Interfaces,538,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:1352,Integrability,interface,interface,1352,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:614,Modifiability,extend,extends,614,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:996,Modifiability,inherit,inherited,996,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:1070,Security,hash,hashCode,1070,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:505,Integrability,Interface,Interfaces,505,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2538,Integrability,interface,interface,2538,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:570,Modifiability,extend,extends,570,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1465,Modifiability,inherit,inherited,1465,"rainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:639,Security,validat,validation,639,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:906,Security,Validat,Validation,906,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1200,Security,validat,validation,1200,"str; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant F",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1539,Security,hash,hashCode,1539,"tProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interfac",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1770,Security,Validat,Validation,1770,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2042,Security,validat,validation,2042,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:654,Testability,test,test,654,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:918,Testability,Test,Test,918,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1056,Testability,test,test,1056,"ript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1782,Testability,Test,Test,1782,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2165,Testability,test,test,2165,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:897,Deployability,update,updateDefaults,897,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:949,Deployability,Update,Update,949,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1277,Deployability,update,updateDefaults,1277,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1308,Deployability,update,updateDefaults,1308,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1360,Deployability,Update,Update,1360,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:503,Modifiability,extend,extends,503,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1011,Modifiability,inherit,inherited,1011,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1085,Security,hash,hashCode,1085,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:3824,Availability,avail,available,3824,"all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton); Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map).; ; Note that because density maps need to reflect the current hierarchy, but should be relatively fast to compute (at low resolution), ; the full density map is generated upon request. Parameters:; qupath - QuPathGUI instance, used to identify viewers; imageData - expression returning the ImageData to use; builder - expression returning the DensityMaps.DensityMapBuilder to use; densityMapName - name of the density map, if it has been saved (otherwise null). This is used for writing workflow steps.; overlay - optional overlay; if present, this could be used by commands to update display (e.g. by temporarily setting a color model).; enableUnsavedButton - add button to enable buttons even if no name is available (indicating the map has not been saved).; Returns:; a pane that may be added to a stage. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:3693,Deployability,update,update,3693,"all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton); Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map).; ; Note that because density maps need to reflect the current hierarchy, but should be relatively fast to compute (at low resolution), ; the full density map is generated upon request. Parameters:; qupath - QuPathGUI instance, used to identify viewers; imageData - expression returning the ImageData to use; builder - expression returning the DensityMaps.DensityMapBuilder to use; densityMapName - name of the density map, if it has been saved (otherwise null). This is used for writing workflow steps.; overlay - optional overlay; if present, this could be used by commands to update display (e.g. by temporarily setting a color model).; enableUnsavedButton - add button to enable buttons even if no name is available (indicating the map has not been saved).; Returns:; a pane that may be added to a stage. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:487,Modifiability,extend,extends,487,". DensityMapUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapUI. java.lang.Object; qupath.process.gui.commands.density.DensityMapUI. public class DensityMapUI; extends Object; UI elements associated with density maps. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; ANY_CLASS. Ignore classification (accept all objects). static final PathClass; ANY_POSITIVE_CLASS. Accept any positive classification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:1695,Modifiability,inherit,inherited,1695,"ects). static final PathClass; ANY_POSITIVE_CLASS. Accept any positive classification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; pub",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:1769,Security,hash,hashCode,1769,"lassification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<Ima",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:232,Integrability,Interface,Interfaces,232,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:304,Integrability,Interface,Interfaces,304,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:598,Integrability,Interface,Interfaces,598,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:556,Usability,learn,learning,556,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:646,Usability,learn,learning,646,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:493,Modifiability,extend,extends,493,". BoundaryStrategy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class BoundaryStrategy. java.lang.Object; qupath.process.gui.commands.ml.BoundaryStrategy. public class BoundaryStrategy; extends Object; Helper class for handling the boundaries of training annotations when creating a pixel classifier.; ; The purpose of this is to provide a mechanism for learning the separation between densely packed objects (e.g. nuclei). Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getB",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:1878,Modifiability,inherit,inherited,1878,"Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:1690,Security,hash,hashCode,1690,"r:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassif",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2517,Security,hash,hashCode,2517,"ndaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores bo",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2538,Security,hash,hashCode,2538,"ndaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores bo",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2562,Security,hash,hashCode,2562,"tSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores boundaries, not using them for classi",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:661,Usability,learn,learning,661,". BoundaryStrategy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class BoundaryStrategy. java.lang.Object; qupath.process.gui.commands.ml.BoundaryStrategy. public class BoundaryStrategy; extends Object; Helper class for handling the boundaries of training annotations when creating a pixel classifier.; ; The purpose of this is to provide a mechanism for learning the separation between densely packed objects (e.g. nuclei). Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getB",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:541,Integrability,Wrap,Wrapper,541,". ClassificationResolution (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageDa",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:525,Modifiability,extend,extends,525,". ClassificationResolution (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageDa",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1329,Modifiability,inherit,inherited,1329,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1283,Security,hash,hashCode,1283,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1741,Security,hash,hashCode,1741,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1762,Security,hash,hashCode,1762,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1786,Security,hash,hashCode,1786,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1148,Usability,simpl,simple,1148,"x; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1490,Usability,simpl,simple,1490,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:227,Integrability,Interface,Interfaces,227,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:299,Integrability,Interface,Interfaces,299,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:399,Integrability,Interface,Interfaces,399,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:912,Integrability,Wrap,Wrapper,912,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:1018,Integrability,interface,interface,1018,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:1193,Integrability,Wrap,Wrapper,1193,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:447,Usability,learn,learning,447,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:573,Usability,learn,learning,573,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1019,Availability,avail,available,1019,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1647,Availability,avail,available,1647,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:839,Deployability,install,installDefaultFeatureClassificationBuilder,839,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1401,Deployability,install,installDefaultFeatureClassificationBuilder,1401,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1467,Deployability,install,installDefaultFeatureClassificationBuilder,1467,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1717,Deployability,install,install,1717,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1872,Deployability,install,installed,1872,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:531,Integrability,interface,interface,531,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:505,Modifiability,extend,extends,505,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1065,Modifiability,inherit,inherited,1065,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1139,Security,hash,hashCode,1139,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html:679,Integrability,Wrap,Wrapper,679,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html:663,Modifiability,extend,extends,663,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html:942,Modifiability,inherit,inherited,942,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html:1016,Security,hash,hashCode,1016,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:1256,Availability,avail,available,1256,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate f",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:1460,Availability,avail,available,1460,"ocess.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notif",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:3760,Availability,avail,available,3760,"lator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public BoundaryStrategy getBoundaryStrategy(); Get the strategy for handling the boundaries of area annotations. Returns:. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(ImageData<BufferedImage> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(Collection<ImageData<BufferedImage>> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingDataForLabelMap; public PixelClassifierTraining.ClassifierTrainingData createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels); throws IOException; Get a classifier training map, using a predefined label map (which determines which classifications to use). Parameters:; imageData - collection of ImageData used for training; labels - map linking classifications to labels in the output; may be null, in which case a label map will be generated from the",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:4081,Availability,avail,available,4081," Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public BoundaryStrategy getBoundaryStrategy(); Get the strategy for handling the boundaries of area annotations. Returns:. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(ImageData<BufferedImage> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(Collection<ImageData<BufferedImage>> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingDataForLabelMap; public PixelClassifierTraining.ClassifierTrainingData createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels); throws IOException; Get a classifier training map, using a predefined label map (which determines which classifications to use). Parameters:; imageData - collection of ImageData used for training; labels - map linking classifications to labels in the output; may be null, in which case a label map will be generated from the data; Returns:; a PixelClassifierTraining.ClassifierTrainingData object representing training data; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:747,Integrability,Wrap,Wrapper,747,". PixelClassifierTraining (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at whic",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:521,Modifiability,extend,extends,521,". PixelClassifierTraining (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at whic",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:2347,Modifiability,inherit,inherited,2347,"Data<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTraining; public PixelClassifierTraining(ImageDataOp featureCalculator); Create a new pixel classifier helper, to support generating training data. Parameters:; featureCalculator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area an",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:2421,Security,hash,hashCode,2421,"automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTraining; public PixelClassifierTraining(ImageDataOp featureCalculator); Create a new pixel classifier helper, to support generating training data. Parameters:; featureCalculator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public Boundar",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:2748,Availability,avail,available,2748,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:497,Modifiability,extend,extends,497,". PixelClassifierUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierUI. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierUI. public class PixelClassifierUI; extends Object; Helper class for generating standardized UI components for pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<Region",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:1732,Modifiability,inherit,inherited,1732,"hodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifi",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:1806,Security,hash,hashCode,1806,"e; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:2803,Testability,log,logged,2803,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:4228,Testability,log,logged,4228,"r,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName); Prompt the user to create objects directly from the pixels of an ImageServer.; Often, the ImageServer has been created by applying a PixelClassifier. Parameters:; imageData - the ImageData to which objects should be added; classifier - the ImageServer used to generate objects; classifierName - the name of the classifier; if not null and the command runs to completion, it will be logged in the history ; workflow of the ImageData for later scripting.; Returns:; true if changes were made, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html:529,Modifiability,extend,extends,529,". ProjectClassifierBindings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project.",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html:1259,Modifiability,inherit,inherited,1259,"). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project. Parameters:; textField - ; project - . ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html:1333,Security,hash,hashCode,1333,"). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project. Parameters:; textField - ; project - . ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:517,Integrability,Interface,Interfaces,517,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1942,Integrability,interface,interface,1942,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:583,Modifiability,extend,extends,583,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1228,Modifiability,inherit,inherited,1228,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:2,Performance,Load,LoadResourceCommand,2,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:380,Performance,Load,LoadResourceCommand,380,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:453,Performance,Load,LoadResourceCommand,453,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:559,Performance,Load,LoadResourceCommand,559,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:833,Performance,Load,LoadResourceCommand,833,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:967,Performance,load,load,967,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1024,Performance,Load,LoadResourceCommand,1024,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1149,Performance,load,load,1149,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1423,Performance,Load,LoadResourceCommand,1423,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1547,Performance,load,load,1547,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1679,Performance,Load,LoadResourceCommand,1679,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1812,Performance,load,load,1812,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1302,Security,hash,hashCode,1302,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:227,Integrability,Interface,Interfaces,227,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:299,Integrability,Interface,Interfaces,299,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:672,Integrability,Interface,Interfaces,672,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:769,Performance,Load,LoadResourceCommand,769,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:557,Usability,learn,learning,557,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:720,Usability,learn,learning,720,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-tree.html:354,Performance,Load,LoadResourceCommand,354,. qupath.process.gui.commands.ui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.process.gui.commands.ui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:554,Modifiability,extend,extends,554,". SaveResourcePaneBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class SaveResourcePaneBuilder<T>. java.lang.Object; qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>. Type Parameters:; T - . public class SaveResourcePaneBuilder<T>; extends Object; Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way.; This is not intended for use by external code. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Paramete",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:879,Modifiability,extend,extends,879,". SaveResourcePaneBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class SaveResourcePaneBuilder<T>. java.lang.Object; qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>. Type Parameters:; T - . public class SaveResourcePaneBuilder<T>; extends Object; Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way.; This is not intended for use by external code. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Paramete",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1716,Modifiability,inherit,inherited,1716,"ernal code. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1958,Modifiability,extend,extends,1958," All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; Returns:. title; public SaveResourcePaneBuilder<T> title(String title); Title to display in any dialogs. Parameters:; title - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1790,Security,hash,hashCode,1790,"onstructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
